'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("PMovilDS"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class PMovilDS
    Inherits Global.System.Data.DataSet
    
    Private tableMRS_Frecuentes As MRS_FrecuentesDataTable
    
    Private tableMRS_Struct As MRS_StructDataTable
    
    Private tableMRS_WorkMG As MRS_WorkMGDataTable
    
    Private tableMRS_DynamicsE As MRS_DynamicsEDataTable
    
    Private tableMRS_CGPMov As MRS_CGPMovDataTable
    
    Private tableMRS_CatCta As MRS_CatCtaDataTable
    
    Private tableMRS_TLog As MRS_TLogDataTable
    
    Private tableMRS_ISOBnk As MRS_ISOBnkDataTable
    
    Private tableMRS_Users As MRS_UsersDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("MRS_Frecuentes")) Is Nothing) Then
                MyBase.Tables.Add(New MRS_FrecuentesDataTable(ds.Tables("MRS_Frecuentes")))
            End If
            If (Not (ds.Tables("MRS_Struct")) Is Nothing) Then
                MyBase.Tables.Add(New MRS_StructDataTable(ds.Tables("MRS_Struct")))
            End If
            If (Not (ds.Tables("MRS_WorkMG")) Is Nothing) Then
                MyBase.Tables.Add(New MRS_WorkMGDataTable(ds.Tables("MRS_WorkMG")))
            End If
            If (Not (ds.Tables("MRS_DynamicsE")) Is Nothing) Then
                MyBase.Tables.Add(New MRS_DynamicsEDataTable(ds.Tables("MRS_DynamicsE")))
            End If
            If (Not (ds.Tables("MRS_CGPMov")) Is Nothing) Then
                MyBase.Tables.Add(New MRS_CGPMovDataTable(ds.Tables("MRS_CGPMov")))
            End If
            If (Not (ds.Tables("MRS_CatCta")) Is Nothing) Then
                MyBase.Tables.Add(New MRS_CatCtaDataTable(ds.Tables("MRS_CatCta")))
            End If
            If (Not (ds.Tables("MRS_TLog")) Is Nothing) Then
                MyBase.Tables.Add(New MRS_TLogDataTable(ds.Tables("MRS_TLog")))
            End If
            If (Not (ds.Tables("MRS_ISOBnk")) Is Nothing) Then
                MyBase.Tables.Add(New MRS_ISOBnkDataTable(ds.Tables("MRS_ISOBnk")))
            End If
            If (Not (ds.Tables("MRS_Users")) Is Nothing) Then
                MyBase.Tables.Add(New MRS_UsersDataTable(ds.Tables("MRS_Users")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MRS_Frecuentes() As MRS_FrecuentesDataTable
        Get
            Return Me.tableMRS_Frecuentes
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MRS_Struct() As MRS_StructDataTable
        Get
            Return Me.tableMRS_Struct
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MRS_WorkMG() As MRS_WorkMGDataTable
        Get
            Return Me.tableMRS_WorkMG
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MRS_DynamicsE() As MRS_DynamicsEDataTable
        Get
            Return Me.tableMRS_DynamicsE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MRS_CGPMov() As MRS_CGPMovDataTable
        Get
            Return Me.tableMRS_CGPMov
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MRS_CatCta() As MRS_CatCtaDataTable
        Get
            Return Me.tableMRS_CatCta
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MRS_TLog() As MRS_TLogDataTable
        Get
            Return Me.tableMRS_TLog
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MRS_ISOBnk() As MRS_ISOBnkDataTable
        Get
            Return Me.tableMRS_ISOBnk
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MRS_Users() As MRS_UsersDataTable
        Get
            Return Me.tableMRS_Users
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As PMovilDS = CType(MyBase.Clone,PMovilDS)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("MRS_Frecuentes")) Is Nothing) Then
                MyBase.Tables.Add(New MRS_FrecuentesDataTable(ds.Tables("MRS_Frecuentes")))
            End If
            If (Not (ds.Tables("MRS_Struct")) Is Nothing) Then
                MyBase.Tables.Add(New MRS_StructDataTable(ds.Tables("MRS_Struct")))
            End If
            If (Not (ds.Tables("MRS_WorkMG")) Is Nothing) Then
                MyBase.Tables.Add(New MRS_WorkMGDataTable(ds.Tables("MRS_WorkMG")))
            End If
            If (Not (ds.Tables("MRS_DynamicsE")) Is Nothing) Then
                MyBase.Tables.Add(New MRS_DynamicsEDataTable(ds.Tables("MRS_DynamicsE")))
            End If
            If (Not (ds.Tables("MRS_CGPMov")) Is Nothing) Then
                MyBase.Tables.Add(New MRS_CGPMovDataTable(ds.Tables("MRS_CGPMov")))
            End If
            If (Not (ds.Tables("MRS_CatCta")) Is Nothing) Then
                MyBase.Tables.Add(New MRS_CatCtaDataTable(ds.Tables("MRS_CatCta")))
            End If
            If (Not (ds.Tables("MRS_TLog")) Is Nothing) Then
                MyBase.Tables.Add(New MRS_TLogDataTable(ds.Tables("MRS_TLog")))
            End If
            If (Not (ds.Tables("MRS_ISOBnk")) Is Nothing) Then
                MyBase.Tables.Add(New MRS_ISOBnkDataTable(ds.Tables("MRS_ISOBnk")))
            End If
            If (Not (ds.Tables("MRS_Users")) Is Nothing) Then
                MyBase.Tables.Add(New MRS_UsersDataTable(ds.Tables("MRS_Users")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableMRS_Frecuentes = CType(MyBase.Tables("MRS_Frecuentes"),MRS_FrecuentesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMRS_Frecuentes) Is Nothing) Then
                Me.tableMRS_Frecuentes.InitVars
            End If
        End If
        Me.tableMRS_Struct = CType(MyBase.Tables("MRS_Struct"),MRS_StructDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMRS_Struct) Is Nothing) Then
                Me.tableMRS_Struct.InitVars
            End If
        End If
        Me.tableMRS_WorkMG = CType(MyBase.Tables("MRS_WorkMG"),MRS_WorkMGDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMRS_WorkMG) Is Nothing) Then
                Me.tableMRS_WorkMG.InitVars
            End If
        End If
        Me.tableMRS_DynamicsE = CType(MyBase.Tables("MRS_DynamicsE"),MRS_DynamicsEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMRS_DynamicsE) Is Nothing) Then
                Me.tableMRS_DynamicsE.InitVars
            End If
        End If
        Me.tableMRS_CGPMov = CType(MyBase.Tables("MRS_CGPMov"),MRS_CGPMovDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMRS_CGPMov) Is Nothing) Then
                Me.tableMRS_CGPMov.InitVars
            End If
        End If
        Me.tableMRS_CatCta = CType(MyBase.Tables("MRS_CatCta"),MRS_CatCtaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMRS_CatCta) Is Nothing) Then
                Me.tableMRS_CatCta.InitVars
            End If
        End If
        Me.tableMRS_TLog = CType(MyBase.Tables("MRS_TLog"),MRS_TLogDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMRS_TLog) Is Nothing) Then
                Me.tableMRS_TLog.InitVars
            End If
        End If
        Me.tableMRS_ISOBnk = CType(MyBase.Tables("MRS_ISOBnk"),MRS_ISOBnkDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMRS_ISOBnk) Is Nothing) Then
                Me.tableMRS_ISOBnk.InitVars
            End If
        End If
        Me.tableMRS_Users = CType(MyBase.Tables("MRS_Users"),MRS_UsersDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMRS_Users) Is Nothing) Then
                Me.tableMRS_Users.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "PMovilDS"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/PMovilDS.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableMRS_Frecuentes = New MRS_FrecuentesDataTable()
        MyBase.Tables.Add(Me.tableMRS_Frecuentes)
        Me.tableMRS_Struct = New MRS_StructDataTable()
        MyBase.Tables.Add(Me.tableMRS_Struct)
        Me.tableMRS_WorkMG = New MRS_WorkMGDataTable()
        MyBase.Tables.Add(Me.tableMRS_WorkMG)
        Me.tableMRS_DynamicsE = New MRS_DynamicsEDataTable()
        MyBase.Tables.Add(Me.tableMRS_DynamicsE)
        Me.tableMRS_CGPMov = New MRS_CGPMovDataTable()
        MyBase.Tables.Add(Me.tableMRS_CGPMov)
        Me.tableMRS_CatCta = New MRS_CatCtaDataTable()
        MyBase.Tables.Add(Me.tableMRS_CatCta)
        Me.tableMRS_TLog = New MRS_TLogDataTable()
        MyBase.Tables.Add(Me.tableMRS_TLog)
        Me.tableMRS_ISOBnk = New MRS_ISOBnkDataTable()
        MyBase.Tables.Add(Me.tableMRS_ISOBnk)
        Me.tableMRS_Users = New MRS_UsersDataTable()
        MyBase.Tables.Add(Me.tableMRS_Users)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeMRS_Frecuentes() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeMRS_Struct() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeMRS_WorkMG() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeMRS_DynamicsE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeMRS_CGPMov() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeMRS_CatCta() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeMRS_TLog() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeMRS_ISOBnk() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeMRS_Users() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As PMovilDS = New PMovilDS()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub MRS_FrecuentesRowChangeEventHandler(ByVal sender As Object, ByVal e As MRS_FrecuentesRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub MRS_StructRowChangeEventHandler(ByVal sender As Object, ByVal e As MRS_StructRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub MRS_WorkMGRowChangeEventHandler(ByVal sender As Object, ByVal e As MRS_WorkMGRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub MRS_DynamicsERowChangeEventHandler(ByVal sender As Object, ByVal e As MRS_DynamicsERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub MRS_CGPMovRowChangeEventHandler(ByVal sender As Object, ByVal e As MRS_CGPMovRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub MRS_CatCtaRowChangeEventHandler(ByVal sender As Object, ByVal e As MRS_CatCtaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub MRS_TLogRowChangeEventHandler(ByVal sender As Object, ByVal e As MRS_TLogRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub MRS_ISOBnkRowChangeEventHandler(ByVal sender As Object, ByVal e As MRS_ISOBnkRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub MRS_UsersRowChangeEventHandler(ByVal sender As Object, ByVal e As MRS_UsersRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MRS_FrecuentesDataTable
        Inherits Global.System.Data.TypedTableBase(Of MRS_FrecuentesRow)
        
        Private columnFRE_ID As Global.System.Data.DataColumn
        
        Private columnFRE_IDCust As Global.System.Data.DataColumn
        
        Private columnFRE_CustNme As Global.System.Data.DataColumn
        
        Private columnFRE_AliasC As Global.System.Data.DataColumn
        
        Private columnFRE_BankISO As Global.System.Data.DataColumn
        
        Private columnFRE_CustAC As Global.System.Data.DataColumn
        
        Private columnFRE_CustPh As Global.System.Data.DataColumn
        
        Private columnFRE_ProvC As Global.System.Data.DataColumn
        
        Private columnFRE_Empleado As Global.System.Data.DataColumn
        
        Private columnFRE_CtaCP As Global.System.Data.DataColumn
        
        Private columnFRE_CtaCG As Global.System.Data.DataColumn
        
        Private columnFRE_CtaGto As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MRS_Frecuentes"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FRE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FRE_IDCustColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRE_IDCust
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FRE_CustNmeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRE_CustNme
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FRE_AliasCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRE_AliasC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FRE_BankISOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRE_BankISO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FRE_CustACColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRE_CustAC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FRE_CustPhColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRE_CustPh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FRE_ProvCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRE_ProvC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FRE_EmpleadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRE_Empleado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FRE_CtaCPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRE_CtaCP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FRE_CtaCGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRE_CtaCG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FRE_CtaGtoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRE_CtaGto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MRS_FrecuentesRow
            Get
                Return CType(Me.Rows(index),MRS_FrecuentesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_FrecuentesRowChanging As MRS_FrecuentesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_FrecuentesRowChanged As MRS_FrecuentesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_FrecuentesRowDeleting As MRS_FrecuentesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_FrecuentesRowDeleted As MRS_FrecuentesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddMRS_FrecuentesRow(ByVal row As MRS_FrecuentesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddMRS_FrecuentesRow(ByVal FRE_IDCust As String, ByVal FRE_CustNme As String, ByVal FRE_AliasC As String, ByVal FRE_BankISO As String, ByVal FRE_CustAC As String, ByVal FRE_CustPh As String, ByVal FRE_ProvC As String, ByVal FRE_Empleado As String, ByVal FRE_CtaCP As String, ByVal FRE_CtaCG As String, ByVal FRE_CtaGto As String) As MRS_FrecuentesRow
            Dim rowMRS_FrecuentesRow As MRS_FrecuentesRow = CType(Me.NewRow,MRS_FrecuentesRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, FRE_IDCust, FRE_CustNme, FRE_AliasC, FRE_BankISO, FRE_CustAC, FRE_CustPh, FRE_ProvC, FRE_Empleado, FRE_CtaCP, FRE_CtaCG, FRE_CtaGto}
            rowMRS_FrecuentesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMRS_FrecuentesRow)
            Return rowMRS_FrecuentesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByFRE_ID(ByVal FRE_ID As Integer) As MRS_FrecuentesRow
            Return CType(Me.Rows.Find(New Object() {FRE_ID}),MRS_FrecuentesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MRS_FrecuentesDataTable = CType(MyBase.Clone,MRS_FrecuentesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MRS_FrecuentesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFRE_ID = MyBase.Columns("FRE_ID")
            Me.columnFRE_IDCust = MyBase.Columns("FRE_IDCust")
            Me.columnFRE_CustNme = MyBase.Columns("FRE_CustNme")
            Me.columnFRE_AliasC = MyBase.Columns("FRE_AliasC")
            Me.columnFRE_BankISO = MyBase.Columns("FRE_BankISO")
            Me.columnFRE_CustAC = MyBase.Columns("FRE_CustAC")
            Me.columnFRE_CustPh = MyBase.Columns("FRE_CustPh")
            Me.columnFRE_ProvC = MyBase.Columns("FRE_ProvC")
            Me.columnFRE_Empleado = MyBase.Columns("FRE_Empleado")
            Me.columnFRE_CtaCP = MyBase.Columns("FRE_CtaCP")
            Me.columnFRE_CtaCG = MyBase.Columns("FRE_CtaCG")
            Me.columnFRE_CtaGto = MyBase.Columns("FRE_CtaGto")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFRE_ID = New Global.System.Data.DataColumn("FRE_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRE_ID)
            Me.columnFRE_IDCust = New Global.System.Data.DataColumn("FRE_IDCust", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRE_IDCust)
            Me.columnFRE_CustNme = New Global.System.Data.DataColumn("FRE_CustNme", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRE_CustNme)
            Me.columnFRE_AliasC = New Global.System.Data.DataColumn("FRE_AliasC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRE_AliasC)
            Me.columnFRE_BankISO = New Global.System.Data.DataColumn("FRE_BankISO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRE_BankISO)
            Me.columnFRE_CustAC = New Global.System.Data.DataColumn("FRE_CustAC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRE_CustAC)
            Me.columnFRE_CustPh = New Global.System.Data.DataColumn("FRE_CustPh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRE_CustPh)
            Me.columnFRE_ProvC = New Global.System.Data.DataColumn("FRE_ProvC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRE_ProvC)
            Me.columnFRE_Empleado = New Global.System.Data.DataColumn("FRE_Empleado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRE_Empleado)
            Me.columnFRE_CtaCP = New Global.System.Data.DataColumn("FRE_CtaCP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRE_CtaCP)
            Me.columnFRE_CtaCG = New Global.System.Data.DataColumn("FRE_CtaCG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRE_CtaCG)
            Me.columnFRE_CtaGto = New Global.System.Data.DataColumn("FRE_CtaGto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRE_CtaGto)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFRE_ID}, true))
            Me.columnFRE_ID.AutoIncrement = true
            Me.columnFRE_ID.AutoIncrementSeed = -1
            Me.columnFRE_ID.AutoIncrementStep = -1
            Me.columnFRE_ID.AllowDBNull = false
            Me.columnFRE_ID.ReadOnly = true
            Me.columnFRE_ID.Unique = true
            Me.columnFRE_IDCust.MaxLength = 255
            Me.columnFRE_CustNme.MaxLength = 255
            Me.columnFRE_AliasC.MaxLength = 255
            Me.columnFRE_BankISO.MaxLength = 255
            Me.columnFRE_CustAC.MaxLength = 255
            Me.columnFRE_CustPh.MaxLength = 255
            Me.columnFRE_ProvC.MaxLength = 2
            Me.columnFRE_Empleado.MaxLength = 2
            Me.columnFRE_CtaCP.MaxLength = 255
            Me.columnFRE_CtaCG.MaxLength = 255
            Me.columnFRE_CtaGto.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewMRS_FrecuentesRow() As MRS_FrecuentesRow
            Return CType(Me.NewRow,MRS_FrecuentesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MRS_FrecuentesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MRS_FrecuentesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MRS_FrecuentesRowChangedEvent) Is Nothing) Then
                RaiseEvent MRS_FrecuentesRowChanged(Me, New MRS_FrecuentesRowChangeEvent(CType(e.Row,MRS_FrecuentesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MRS_FrecuentesRowChangingEvent) Is Nothing) Then
                RaiseEvent MRS_FrecuentesRowChanging(Me, New MRS_FrecuentesRowChangeEvent(CType(e.Row,MRS_FrecuentesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MRS_FrecuentesRowDeletedEvent) Is Nothing) Then
                RaiseEvent MRS_FrecuentesRowDeleted(Me, New MRS_FrecuentesRowChangeEvent(CType(e.Row,MRS_FrecuentesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MRS_FrecuentesRowDeletingEvent) Is Nothing) Then
                RaiseEvent MRS_FrecuentesRowDeleting(Me, New MRS_FrecuentesRowChangeEvent(CType(e.Row,MRS_FrecuentesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveMRS_FrecuentesRow(ByVal row As MRS_FrecuentesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PMovilDS = New PMovilDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MRS_FrecuentesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MRS_StructDataTable
        Inherits Global.System.Data.TypedTableBase(Of MRS_StructRow)
        
        Private columnDBS_Id As Global.System.Data.DataColumn
        
        Private columnDBS_DataBN As Global.System.Data.DataColumn
        
        Private columnDBS_Field As Global.System.Data.DataColumn
        
        Private columnDBS_Type As Global.System.Data.DataColumn
        
        Private columnDBS_LenF As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MRS_Struct"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DBS_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDBS_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DBS_DataBNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDBS_DataBN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DBS_FieldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDBS_Field
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DBS_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDBS_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DBS_LenFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDBS_LenF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MRS_StructRow
            Get
                Return CType(Me.Rows(index),MRS_StructRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_StructRowChanging As MRS_StructRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_StructRowChanged As MRS_StructRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_StructRowDeleting As MRS_StructRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_StructRowDeleted As MRS_StructRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddMRS_StructRow(ByVal row As MRS_StructRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddMRS_StructRow(ByVal DBS_DataBN As String, ByVal DBS_Field As String, ByVal DBS_Type As String, ByVal DBS_LenF As String) As MRS_StructRow
            Dim rowMRS_StructRow As MRS_StructRow = CType(Me.NewRow,MRS_StructRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, DBS_DataBN, DBS_Field, DBS_Type, DBS_LenF}
            rowMRS_StructRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMRS_StructRow)
            Return rowMRS_StructRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByDBS_Id(ByVal DBS_Id As Integer) As MRS_StructRow
            Return CType(Me.Rows.Find(New Object() {DBS_Id}),MRS_StructRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MRS_StructDataTable = CType(MyBase.Clone,MRS_StructDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MRS_StructDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDBS_Id = MyBase.Columns("DBS_Id")
            Me.columnDBS_DataBN = MyBase.Columns("DBS_DataBN")
            Me.columnDBS_Field = MyBase.Columns("DBS_Field")
            Me.columnDBS_Type = MyBase.Columns("DBS_Type")
            Me.columnDBS_LenF = MyBase.Columns("DBS_LenF")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDBS_Id = New Global.System.Data.DataColumn("DBS_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDBS_Id)
            Me.columnDBS_DataBN = New Global.System.Data.DataColumn("DBS_DataBN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDBS_DataBN)
            Me.columnDBS_Field = New Global.System.Data.DataColumn("DBS_Field", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDBS_Field)
            Me.columnDBS_Type = New Global.System.Data.DataColumn("DBS_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDBS_Type)
            Me.columnDBS_LenF = New Global.System.Data.DataColumn("DBS_LenF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDBS_LenF)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDBS_Id}, true))
            Me.columnDBS_Id.AutoIncrement = true
            Me.columnDBS_Id.AutoIncrementSeed = -1
            Me.columnDBS_Id.AutoIncrementStep = -1
            Me.columnDBS_Id.AllowDBNull = false
            Me.columnDBS_Id.ReadOnly = true
            Me.columnDBS_Id.Unique = true
            Me.columnDBS_DataBN.MaxLength = 255
            Me.columnDBS_Field.MaxLength = 255
            Me.columnDBS_Type.MaxLength = 255
            Me.columnDBS_LenF.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewMRS_StructRow() As MRS_StructRow
            Return CType(Me.NewRow,MRS_StructRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MRS_StructRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MRS_StructRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MRS_StructRowChangedEvent) Is Nothing) Then
                RaiseEvent MRS_StructRowChanged(Me, New MRS_StructRowChangeEvent(CType(e.Row,MRS_StructRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MRS_StructRowChangingEvent) Is Nothing) Then
                RaiseEvent MRS_StructRowChanging(Me, New MRS_StructRowChangeEvent(CType(e.Row,MRS_StructRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MRS_StructRowDeletedEvent) Is Nothing) Then
                RaiseEvent MRS_StructRowDeleted(Me, New MRS_StructRowChangeEvent(CType(e.Row,MRS_StructRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MRS_StructRowDeletingEvent) Is Nothing) Then
                RaiseEvent MRS_StructRowDeleting(Me, New MRS_StructRowChangeEvent(CType(e.Row,MRS_StructRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveMRS_StructRow(ByVal row As MRS_StructRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PMovilDS = New PMovilDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MRS_StructDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MRS_WorkMGDataTable
        Inherits Global.System.Data.TypedTableBase(Of MRS_WorkMGRow)
        
        Private columnWRK_Fecha As Global.System.Data.DataColumn
        
        Private columnWRK_CodCta As Global.System.Data.DataColumn
        
        Private columnWRK_DesCta As Global.System.Data.DataColumn
        
        Private columnWRK_Compr As Global.System.Data.DataColumn
        
        Private columnWRK_DesAs As Global.System.Data.DataColumn
        
        Private columnWRK_Debe As Global.System.Data.DataColumn
        
        Private columnWRK_Haber As Global.System.Data.DataColumn
        
        Private columnWRK_Saldo As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MRS_WorkMG"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property WRK_FechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWRK_Fecha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property WRK_CodCtaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWRK_CodCta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property WRK_DesCtaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWRK_DesCta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property WRK_ComprColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWRK_Compr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property WRK_DesAsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWRK_DesAs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property WRK_DebeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWRK_Debe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property WRK_HaberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWRK_Haber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property WRK_SaldoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWRK_Saldo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MRS_WorkMGRow
            Get
                Return CType(Me.Rows(index),MRS_WorkMGRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_WorkMGRowChanging As MRS_WorkMGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_WorkMGRowChanged As MRS_WorkMGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_WorkMGRowDeleting As MRS_WorkMGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_WorkMGRowDeleted As MRS_WorkMGRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddMRS_WorkMGRow(ByVal row As MRS_WorkMGRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddMRS_WorkMGRow(ByVal WRK_Fecha As Date, ByVal WRK_CodCta As String, ByVal WRK_DesCta As String, ByVal WRK_Compr As String, ByVal WRK_DesAs As String, ByVal WRK_Debe As Double, ByVal WRK_Haber As Double, ByVal WRK_Saldo As Double) As MRS_WorkMGRow
            Dim rowMRS_WorkMGRow As MRS_WorkMGRow = CType(Me.NewRow,MRS_WorkMGRow)
            Dim columnValuesArray() As Object = New Object() {WRK_Fecha, WRK_CodCta, WRK_DesCta, WRK_Compr, WRK_DesAs, WRK_Debe, WRK_Haber, WRK_Saldo}
            rowMRS_WorkMGRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMRS_WorkMGRow)
            Return rowMRS_WorkMGRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MRS_WorkMGDataTable = CType(MyBase.Clone,MRS_WorkMGDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MRS_WorkMGDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnWRK_Fecha = MyBase.Columns("WRK_Fecha")
            Me.columnWRK_CodCta = MyBase.Columns("WRK_CodCta")
            Me.columnWRK_DesCta = MyBase.Columns("WRK_DesCta")
            Me.columnWRK_Compr = MyBase.Columns("WRK_Compr")
            Me.columnWRK_DesAs = MyBase.Columns("WRK_DesAs")
            Me.columnWRK_Debe = MyBase.Columns("WRK_Debe")
            Me.columnWRK_Haber = MyBase.Columns("WRK_Haber")
            Me.columnWRK_Saldo = MyBase.Columns("WRK_Saldo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnWRK_Fecha = New Global.System.Data.DataColumn("WRK_Fecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWRK_Fecha)
            Me.columnWRK_CodCta = New Global.System.Data.DataColumn("WRK_CodCta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWRK_CodCta)
            Me.columnWRK_DesCta = New Global.System.Data.DataColumn("WRK_DesCta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWRK_DesCta)
            Me.columnWRK_Compr = New Global.System.Data.DataColumn("WRK_Compr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWRK_Compr)
            Me.columnWRK_DesAs = New Global.System.Data.DataColumn("WRK_DesAs", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWRK_DesAs)
            Me.columnWRK_Debe = New Global.System.Data.DataColumn("WRK_Debe", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWRK_Debe)
            Me.columnWRK_Haber = New Global.System.Data.DataColumn("WRK_Haber", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWRK_Haber)
            Me.columnWRK_Saldo = New Global.System.Data.DataColumn("WRK_Saldo", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWRK_Saldo)
            Me.columnWRK_CodCta.MaxLength = 255
            Me.columnWRK_DesCta.MaxLength = 255
            Me.columnWRK_Compr.MaxLength = 255
            Me.columnWRK_DesAs.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewMRS_WorkMGRow() As MRS_WorkMGRow
            Return CType(Me.NewRow,MRS_WorkMGRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MRS_WorkMGRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MRS_WorkMGRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MRS_WorkMGRowChangedEvent) Is Nothing) Then
                RaiseEvent MRS_WorkMGRowChanged(Me, New MRS_WorkMGRowChangeEvent(CType(e.Row,MRS_WorkMGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MRS_WorkMGRowChangingEvent) Is Nothing) Then
                RaiseEvent MRS_WorkMGRowChanging(Me, New MRS_WorkMGRowChangeEvent(CType(e.Row,MRS_WorkMGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MRS_WorkMGRowDeletedEvent) Is Nothing) Then
                RaiseEvent MRS_WorkMGRowDeleted(Me, New MRS_WorkMGRowChangeEvent(CType(e.Row,MRS_WorkMGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MRS_WorkMGRowDeletingEvent) Is Nothing) Then
                RaiseEvent MRS_WorkMGRowDeleting(Me, New MRS_WorkMGRowChangeEvent(CType(e.Row,MRS_WorkMGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveMRS_WorkMGRow(ByVal row As MRS_WorkMGRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PMovilDS = New PMovilDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MRS_WorkMGDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MRS_DynamicsEDataTable
        Inherits Global.System.Data.TypedTableBase(Of MRS_DynamicsERow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnDYN_OrgName As Global.System.Data.DataColumn
        
        Private columnDYN_RifNumb As Global.System.Data.DataColumn
        
        Private columnDYN_ACodMP As Global.System.Data.DataColumn
        
        Private columnDYN_MobileP As Global.System.Data.DataColumn
        
        Private columnDYN_BankCod As Global.System.Data.DataColumn
        
        Private columnDYN_BankNme As Global.System.Data.DataColumn
        
        Private columnDYN_CodCtaCB As Global.System.Data.DataColumn
        
        Private columnDYN_LteDPM As Global.System.Data.DataColumn
        
        Private columnDYN_PagosM As Global.System.Data.DataColumn
        
        Private columnDYN_RestoPM As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MRS_DynamicsE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DYN_OrgNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDYN_OrgName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DYN_RifNumbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDYN_RifNumb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DYN_ACodMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDYN_ACodMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DYN_MobilePColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDYN_MobileP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DYN_BankCodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDYN_BankCod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DYN_BankNmeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDYN_BankNme
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DYN_CodCtaCBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDYN_CodCtaCB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DYN_LteDPMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDYN_LteDPM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DYN_PagosMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDYN_PagosM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DYN_RestoPMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDYN_RestoPM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MRS_DynamicsERow
            Get
                Return CType(Me.Rows(index),MRS_DynamicsERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_DynamicsERowChanging As MRS_DynamicsERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_DynamicsERowChanged As MRS_DynamicsERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_DynamicsERowDeleting As MRS_DynamicsERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_DynamicsERowDeleted As MRS_DynamicsERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddMRS_DynamicsERow(ByVal row As MRS_DynamicsERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddMRS_DynamicsERow(ByVal DYN_OrgName As String, ByVal DYN_RifNumb As String, ByVal DYN_ACodMP As String, ByVal DYN_MobileP As String, ByVal DYN_BankCod As String, ByVal DYN_BankNme As String, ByVal DYN_CodCtaCB As String, ByVal DYN_LteDPM As Double, ByVal DYN_PagosM As Double, ByVal DYN_RestoPM As Double) As MRS_DynamicsERow
            Dim rowMRS_DynamicsERow As MRS_DynamicsERow = CType(Me.NewRow,MRS_DynamicsERow)
            Dim columnValuesArray() As Object = New Object() {Nothing, DYN_OrgName, DYN_RifNumb, DYN_ACodMP, DYN_MobileP, DYN_BankCod, DYN_BankNme, DYN_CodCtaCB, DYN_LteDPM, DYN_PagosM, DYN_RestoPM}
            rowMRS_DynamicsERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMRS_DynamicsERow)
            Return rowMRS_DynamicsERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindById(ByVal Id As Integer) As MRS_DynamicsERow
            Return CType(Me.Rows.Find(New Object() {Id}),MRS_DynamicsERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MRS_DynamicsEDataTable = CType(MyBase.Clone,MRS_DynamicsEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MRS_DynamicsEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnDYN_OrgName = MyBase.Columns("DYN_OrgName")
            Me.columnDYN_RifNumb = MyBase.Columns("DYN_RifNumb")
            Me.columnDYN_ACodMP = MyBase.Columns("DYN_ACodMP")
            Me.columnDYN_MobileP = MyBase.Columns("DYN_MobileP")
            Me.columnDYN_BankCod = MyBase.Columns("DYN_BankCod")
            Me.columnDYN_BankNme = MyBase.Columns("DYN_BankNme")
            Me.columnDYN_CodCtaCB = MyBase.Columns("DYN_CodCtaCB")
            Me.columnDYN_LteDPM = MyBase.Columns("DYN_LteDPM")
            Me.columnDYN_PagosM = MyBase.Columns("DYN_PagosM")
            Me.columnDYN_RestoPM = MyBase.Columns("DYN_RestoPM")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnDYN_OrgName = New Global.System.Data.DataColumn("DYN_OrgName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDYN_OrgName)
            Me.columnDYN_RifNumb = New Global.System.Data.DataColumn("DYN_RifNumb", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDYN_RifNumb)
            Me.columnDYN_ACodMP = New Global.System.Data.DataColumn("DYN_ACodMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDYN_ACodMP)
            Me.columnDYN_MobileP = New Global.System.Data.DataColumn("DYN_MobileP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDYN_MobileP)
            Me.columnDYN_BankCod = New Global.System.Data.DataColumn("DYN_BankCod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDYN_BankCod)
            Me.columnDYN_BankNme = New Global.System.Data.DataColumn("DYN_BankNme", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDYN_BankNme)
            Me.columnDYN_CodCtaCB = New Global.System.Data.DataColumn("DYN_CodCtaCB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDYN_CodCtaCB)
            Me.columnDYN_LteDPM = New Global.System.Data.DataColumn("DYN_LteDPM", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDYN_LteDPM)
            Me.columnDYN_PagosM = New Global.System.Data.DataColumn("DYN_PagosM", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDYN_PagosM)
            Me.columnDYN_RestoPM = New Global.System.Data.DataColumn("DYN_RestoPM", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDYN_RestoPM)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AutoIncrement = true
            Me.columnId.AutoIncrementSeed = -1
            Me.columnId.AutoIncrementStep = -1
            Me.columnId.AllowDBNull = false
            Me.columnId.ReadOnly = true
            Me.columnId.Unique = true
            Me.columnDYN_OrgName.MaxLength = 255
            Me.columnDYN_RifNumb.MaxLength = 255
            Me.columnDYN_ACodMP.MaxLength = 255
            Me.columnDYN_MobileP.MaxLength = 255
            Me.columnDYN_BankCod.MaxLength = 255
            Me.columnDYN_BankNme.MaxLength = 255
            Me.columnDYN_CodCtaCB.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewMRS_DynamicsERow() As MRS_DynamicsERow
            Return CType(Me.NewRow,MRS_DynamicsERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MRS_DynamicsERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MRS_DynamicsERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MRS_DynamicsERowChangedEvent) Is Nothing) Then
                RaiseEvent MRS_DynamicsERowChanged(Me, New MRS_DynamicsERowChangeEvent(CType(e.Row,MRS_DynamicsERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MRS_DynamicsERowChangingEvent) Is Nothing) Then
                RaiseEvent MRS_DynamicsERowChanging(Me, New MRS_DynamicsERowChangeEvent(CType(e.Row,MRS_DynamicsERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MRS_DynamicsERowDeletedEvent) Is Nothing) Then
                RaiseEvent MRS_DynamicsERowDeleted(Me, New MRS_DynamicsERowChangeEvent(CType(e.Row,MRS_DynamicsERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MRS_DynamicsERowDeletingEvent) Is Nothing) Then
                RaiseEvent MRS_DynamicsERowDeleting(Me, New MRS_DynamicsERowChangeEvent(CType(e.Row,MRS_DynamicsERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveMRS_DynamicsERow(ByVal row As MRS_DynamicsERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PMovilDS = New PMovilDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MRS_DynamicsEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MRS_CGPMovDataTable
        Inherits Global.System.Data.TypedTableBase(Of MRS_CGPMovRow)
        
        Private columnRPM_ID As Global.System.Data.DataColumn
        
        Private columnRPM_TipoTran As Global.System.Data.DataColumn
        
        Private columnRPM_FechaT As Global.System.Data.DataColumn
        
        Private columnRPM_Benefit As Global.System.Data.DataColumn
        
        Private columnRPM_CIBenef As Global.System.Data.DataColumn
        
        Private columnRPM_NMovB As Global.System.Data.DataColumn
        
        Private columnRPM_ISOBankB As Global.System.Data.DataColumn
        
        Private columnRPM_CiaNmeD As Global.System.Data.DataColumn
        
        Private columnRPM_ISOBankD As Global.System.Data.DataColumn
        
        Private columnRPM_RIFCiaD As Global.System.Data.DataColumn
        
        Private columnRPM_MovilD As Global.System.Data.DataColumn
        
        Private columnRPM_MtoTr As Global.System.Data.DataColumn
        
        Private columnRPM_Factura As Global.System.Data.DataColumn
        
        Private columnRPM_NRefB As Global.System.Data.DataColumn
        
        Private columnRPM_CtaCble As Global.System.Data.DataColumn
        
        Private columnRPM_MayorA As Global.System.Data.DataColumn
        
        Private columnRPM_DescAs As Global.System.Data.DataColumn
        
        Private columnRPM_NAsiento As Global.System.Data.DataColumn
        
        Private columnRPM_TipoAs As Global.System.Data.DataColumn
        
        Private columnRPM_UIDpm As Global.System.Data.DataColumn
        
        Private columnRPM_FecReg As Global.System.Data.DataColumn
        
        Private columnRPM_HraReg As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MRS_CGPMov"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_TipoTranColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_TipoTran
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_FechaTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_FechaT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_BenefitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_Benefit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_CIBenefColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_CIBenef
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_NMovBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_NMovB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_ISOBankBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_ISOBankB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_CiaNmeDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_CiaNmeD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_ISOBankDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_ISOBankD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_RIFCiaDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_RIFCiaD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_MovilDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_MovilD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_MtoTrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_MtoTr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_FacturaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_Factura
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_NRefBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_NRefB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_CtaCbleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_CtaCble
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_MayorAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_MayorA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_DescAsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_DescAs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_NAsientoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_NAsiento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_TipoAsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_TipoAs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_UIDpmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_UIDpm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_FecRegColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_FecReg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RPM_HraRegColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRPM_HraReg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MRS_CGPMovRow
            Get
                Return CType(Me.Rows(index),MRS_CGPMovRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_CGPMovRowChanging As MRS_CGPMovRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_CGPMovRowChanged As MRS_CGPMovRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_CGPMovRowDeleting As MRS_CGPMovRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_CGPMovRowDeleted As MRS_CGPMovRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddMRS_CGPMovRow(ByVal row As MRS_CGPMovRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddMRS_CGPMovRow( _
                    ByVal RPM_TipoTran As String,  _
                    ByVal RPM_FechaT As Date,  _
                    ByVal RPM_Benefit As String,  _
                    ByVal RPM_CIBenef As String,  _
                    ByVal RPM_NMovB As String,  _
                    ByVal RPM_ISOBankB As String,  _
                    ByVal RPM_CiaNmeD As String,  _
                    ByVal RPM_ISOBankD As String,  _
                    ByVal RPM_RIFCiaD As String,  _
                    ByVal RPM_MovilD As String,  _
                    ByVal RPM_MtoTr As Double,  _
                    ByVal RPM_Factura As String,  _
                    ByVal RPM_NRefB As String,  _
                    ByVal RPM_CtaCble As String,  _
                    ByVal RPM_MayorA As String,  _
                    ByVal RPM_DescAs As String,  _
                    ByVal RPM_NAsiento As String,  _
                    ByVal RPM_TipoAs As String,  _
                    ByVal RPM_UIDpm As String,  _
                    ByVal RPM_FecReg As Date,  _
                    ByVal RPM_HraReg As Date) As MRS_CGPMovRow
            Dim rowMRS_CGPMovRow As MRS_CGPMovRow = CType(Me.NewRow,MRS_CGPMovRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, RPM_TipoTran, RPM_FechaT, RPM_Benefit, RPM_CIBenef, RPM_NMovB, RPM_ISOBankB, RPM_CiaNmeD, RPM_ISOBankD, RPM_RIFCiaD, RPM_MovilD, RPM_MtoTr, RPM_Factura, RPM_NRefB, RPM_CtaCble, RPM_MayorA, RPM_DescAs, RPM_NAsiento, RPM_TipoAs, RPM_UIDpm, RPM_FecReg, RPM_HraReg}
            rowMRS_CGPMovRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMRS_CGPMovRow)
            Return rowMRS_CGPMovRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByRPM_ID(ByVal RPM_ID As Integer) As MRS_CGPMovRow
            Return CType(Me.Rows.Find(New Object() {RPM_ID}),MRS_CGPMovRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MRS_CGPMovDataTable = CType(MyBase.Clone,MRS_CGPMovDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MRS_CGPMovDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRPM_ID = MyBase.Columns("RPM_ID")
            Me.columnRPM_TipoTran = MyBase.Columns("RPM_TipoTran")
            Me.columnRPM_FechaT = MyBase.Columns("RPM_FechaT")
            Me.columnRPM_Benefit = MyBase.Columns("RPM_Benefit")
            Me.columnRPM_CIBenef = MyBase.Columns("RPM_CIBenef")
            Me.columnRPM_NMovB = MyBase.Columns("RPM_NMovB")
            Me.columnRPM_ISOBankB = MyBase.Columns("RPM_ISOBankB")
            Me.columnRPM_CiaNmeD = MyBase.Columns("RPM_CiaNmeD")
            Me.columnRPM_ISOBankD = MyBase.Columns("RPM_ISOBankD")
            Me.columnRPM_RIFCiaD = MyBase.Columns("RPM_RIFCiaD")
            Me.columnRPM_MovilD = MyBase.Columns("RPM_MovilD")
            Me.columnRPM_MtoTr = MyBase.Columns("RPM_MtoTr")
            Me.columnRPM_Factura = MyBase.Columns("RPM_Factura")
            Me.columnRPM_NRefB = MyBase.Columns("RPM_NRefB")
            Me.columnRPM_CtaCble = MyBase.Columns("RPM_CtaCble")
            Me.columnRPM_MayorA = MyBase.Columns("RPM_MayorA")
            Me.columnRPM_DescAs = MyBase.Columns("RPM_DescAs")
            Me.columnRPM_NAsiento = MyBase.Columns("RPM_NAsiento")
            Me.columnRPM_TipoAs = MyBase.Columns("RPM_TipoAs")
            Me.columnRPM_UIDpm = MyBase.Columns("RPM_UIDpm")
            Me.columnRPM_FecReg = MyBase.Columns("RPM_FecReg")
            Me.columnRPM_HraReg = MyBase.Columns("RPM_HraReg")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRPM_ID = New Global.System.Data.DataColumn("RPM_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_ID)
            Me.columnRPM_TipoTran = New Global.System.Data.DataColumn("RPM_TipoTran", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_TipoTran)
            Me.columnRPM_FechaT = New Global.System.Data.DataColumn("RPM_FechaT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_FechaT)
            Me.columnRPM_Benefit = New Global.System.Data.DataColumn("RPM_Benefit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_Benefit)
            Me.columnRPM_CIBenef = New Global.System.Data.DataColumn("RPM_CIBenef", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_CIBenef)
            Me.columnRPM_NMovB = New Global.System.Data.DataColumn("RPM_NMovB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_NMovB)
            Me.columnRPM_ISOBankB = New Global.System.Data.DataColumn("RPM_ISOBankB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_ISOBankB)
            Me.columnRPM_CiaNmeD = New Global.System.Data.DataColumn("RPM_CiaNmeD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_CiaNmeD)
            Me.columnRPM_ISOBankD = New Global.System.Data.DataColumn("RPM_ISOBankD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_ISOBankD)
            Me.columnRPM_RIFCiaD = New Global.System.Data.DataColumn("RPM_RIFCiaD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_RIFCiaD)
            Me.columnRPM_MovilD = New Global.System.Data.DataColumn("RPM_MovilD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_MovilD)
            Me.columnRPM_MtoTr = New Global.System.Data.DataColumn("RPM_MtoTr", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_MtoTr)
            Me.columnRPM_Factura = New Global.System.Data.DataColumn("RPM_Factura", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_Factura)
            Me.columnRPM_NRefB = New Global.System.Data.DataColumn("RPM_NRefB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_NRefB)
            Me.columnRPM_CtaCble = New Global.System.Data.DataColumn("RPM_CtaCble", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_CtaCble)
            Me.columnRPM_MayorA = New Global.System.Data.DataColumn("RPM_MayorA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_MayorA)
            Me.columnRPM_DescAs = New Global.System.Data.DataColumn("RPM_DescAs", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_DescAs)
            Me.columnRPM_NAsiento = New Global.System.Data.DataColumn("RPM_NAsiento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_NAsiento)
            Me.columnRPM_TipoAs = New Global.System.Data.DataColumn("RPM_TipoAs", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_TipoAs)
            Me.columnRPM_UIDpm = New Global.System.Data.DataColumn("RPM_UIDpm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_UIDpm)
            Me.columnRPM_FecReg = New Global.System.Data.DataColumn("RPM_FecReg", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_FecReg)
            Me.columnRPM_HraReg = New Global.System.Data.DataColumn("RPM_HraReg", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRPM_HraReg)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnRPM_ID}, true))
            Me.columnRPM_ID.AutoIncrement = true
            Me.columnRPM_ID.AutoIncrementSeed = -1
            Me.columnRPM_ID.AutoIncrementStep = -1
            Me.columnRPM_ID.AllowDBNull = false
            Me.columnRPM_ID.ReadOnly = true
            Me.columnRPM_ID.Unique = true
            Me.columnRPM_TipoTran.MaxLength = 255
            Me.columnRPM_Benefit.MaxLength = 255
            Me.columnRPM_CIBenef.MaxLength = 255
            Me.columnRPM_NMovB.MaxLength = 255
            Me.columnRPM_ISOBankB.MaxLength = 255
            Me.columnRPM_CiaNmeD.MaxLength = 255
            Me.columnRPM_ISOBankD.MaxLength = 255
            Me.columnRPM_RIFCiaD.MaxLength = 255
            Me.columnRPM_MovilD.MaxLength = 255
            Me.columnRPM_Factura.MaxLength = 255
            Me.columnRPM_NRefB.MaxLength = 255
            Me.columnRPM_CtaCble.MaxLength = 255
            Me.columnRPM_MayorA.MaxLength = 255
            Me.columnRPM_DescAs.MaxLength = 255
            Me.columnRPM_NAsiento.MaxLength = 255
            Me.columnRPM_TipoAs.MaxLength = 255
            Me.columnRPM_UIDpm.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewMRS_CGPMovRow() As MRS_CGPMovRow
            Return CType(Me.NewRow,MRS_CGPMovRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MRS_CGPMovRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MRS_CGPMovRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MRS_CGPMovRowChangedEvent) Is Nothing) Then
                RaiseEvent MRS_CGPMovRowChanged(Me, New MRS_CGPMovRowChangeEvent(CType(e.Row,MRS_CGPMovRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MRS_CGPMovRowChangingEvent) Is Nothing) Then
                RaiseEvent MRS_CGPMovRowChanging(Me, New MRS_CGPMovRowChangeEvent(CType(e.Row,MRS_CGPMovRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MRS_CGPMovRowDeletedEvent) Is Nothing) Then
                RaiseEvent MRS_CGPMovRowDeleted(Me, New MRS_CGPMovRowChangeEvent(CType(e.Row,MRS_CGPMovRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MRS_CGPMovRowDeletingEvent) Is Nothing) Then
                RaiseEvent MRS_CGPMovRowDeleting(Me, New MRS_CGPMovRowChangeEvent(CType(e.Row,MRS_CGPMovRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveMRS_CGPMovRow(ByVal row As MRS_CGPMovRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PMovilDS = New PMovilDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MRS_CGPMovDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MRS_CatCtaDataTable
        Inherits Global.System.Data.TypedTableBase(Of MRS_CatCtaRow)
        
        Private columnCG_CodigoCta As Global.System.Data.DataColumn
        
        Private columnCG_TipoCta As Global.System.Data.DataColumn
        
        Private columnCG_MayorA As Global.System.Data.DataColumn
        
        Private columnCG_DescCta As Global.System.Data.DataColumn
        
        Private columnCG_GrupoC As Global.System.Data.DataColumn
        
        Private columnCG_Sdo01 As Global.System.Data.DataColumn
        
        Private columnCG_Sdo02 As Global.System.Data.DataColumn
        
        Private columnCG_Sdo03 As Global.System.Data.DataColumn
        
        Private columnCG_Sdo04 As Global.System.Data.DataColumn
        
        Private columnCG_Sdo05 As Global.System.Data.DataColumn
        
        Private columnCG_Sdo06 As Global.System.Data.DataColumn
        
        Private columnCG_Sdo07 As Global.System.Data.DataColumn
        
        Private columnCG_Sdo08 As Global.System.Data.DataColumn
        
        Private columnCG_Sdo09 As Global.System.Data.DataColumn
        
        Private columnCG_Sdo10 As Global.System.Data.DataColumn
        
        Private columnCG_Sdo11 As Global.System.Data.DataColumn
        
        Private columnCG_Sdo12 As Global.System.Data.DataColumn
        
        Private columnCG_CodCtaC As Global.System.Data.DataColumn
        
        Private columnCG_UIDCrea As Global.System.Data.DataColumn
        
        Private columnCG_FecCrea As Global.System.Data.DataColumn
        
        Private columnCG_HoraCr As Global.System.Data.DataColumn
        
        Private columnCG_UIDMod As Global.System.Data.DataColumn
        
        Private columnCG_FecMod As Global.System.Data.DataColumn
        
        Private columnCG_HoraMd As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MRS_CatCta"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_CodigoCtaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_CodigoCta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_TipoCtaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_TipoCta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_MayorAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_MayorA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_DescCtaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_DescCta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_GrupoCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_GrupoC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_Sdo01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_Sdo01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_Sdo02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_Sdo02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_Sdo03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_Sdo03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_Sdo04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_Sdo04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_Sdo05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_Sdo05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_Sdo06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_Sdo06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_Sdo07Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_Sdo07
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_Sdo08Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_Sdo08
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_Sdo09Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_Sdo09
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_Sdo10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_Sdo10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_Sdo11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_Sdo11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_Sdo12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_Sdo12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_CodCtaCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_CodCtaC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_UIDCreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_UIDCrea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_FecCreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_FecCrea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_HoraCrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_HoraCr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_UIDModColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_UIDMod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_FecModColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_FecMod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CG_HoraMdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG_HoraMd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MRS_CatCtaRow
            Get
                Return CType(Me.Rows(index),MRS_CatCtaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_CatCtaRowChanging As MRS_CatCtaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_CatCtaRowChanged As MRS_CatCtaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_CatCtaRowDeleting As MRS_CatCtaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_CatCtaRowDeleted As MRS_CatCtaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddMRS_CatCtaRow(ByVal row As MRS_CatCtaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddMRS_CatCtaRow( _
                    ByVal CG_CodigoCta As String,  _
                    ByVal CG_TipoCta As String,  _
                    ByVal CG_MayorA As String,  _
                    ByVal CG_DescCta As String,  _
                    ByVal CG_GrupoC As String,  _
                    ByVal CG_Sdo01 As Double,  _
                    ByVal CG_Sdo02 As Double,  _
                    ByVal CG_Sdo03 As Double,  _
                    ByVal CG_Sdo04 As Double,  _
                    ByVal CG_Sdo05 As Double,  _
                    ByVal CG_Sdo06 As Double,  _
                    ByVal CG_Sdo07 As Double,  _
                    ByVal CG_Sdo08 As Double,  _
                    ByVal CG_Sdo09 As Double,  _
                    ByVal CG_Sdo10 As Double,  _
                    ByVal CG_Sdo11 As Double,  _
                    ByVal CG_Sdo12 As Double,  _
                    ByVal CG_CodCtaC As String,  _
                    ByVal CG_UIDCrea As String,  _
                    ByVal CG_FecCrea As Date,  _
                    ByVal CG_HoraCr As Date,  _
                    ByVal CG_UIDMod As String,  _
                    ByVal CG_FecMod As Date,  _
                    ByVal CG_HoraMd As Date) As MRS_CatCtaRow
            Dim rowMRS_CatCtaRow As MRS_CatCtaRow = CType(Me.NewRow,MRS_CatCtaRow)
            Dim columnValuesArray() As Object = New Object() {CG_CodigoCta, CG_TipoCta, CG_MayorA, CG_DescCta, CG_GrupoC, CG_Sdo01, CG_Sdo02, CG_Sdo03, CG_Sdo04, CG_Sdo05, CG_Sdo06, CG_Sdo07, CG_Sdo08, CG_Sdo09, CG_Sdo10, CG_Sdo11, CG_Sdo12, CG_CodCtaC, CG_UIDCrea, CG_FecCrea, CG_HoraCr, CG_UIDMod, CG_FecMod, CG_HoraMd}
            rowMRS_CatCtaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMRS_CatCtaRow)
            Return rowMRS_CatCtaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByCG_CodigoCta(ByVal CG_CodigoCta As String) As MRS_CatCtaRow
            Return CType(Me.Rows.Find(New Object() {CG_CodigoCta}),MRS_CatCtaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MRS_CatCtaDataTable = CType(MyBase.Clone,MRS_CatCtaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MRS_CatCtaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCG_CodigoCta = MyBase.Columns("CG_CodigoCta")
            Me.columnCG_TipoCta = MyBase.Columns("CG_TipoCta")
            Me.columnCG_MayorA = MyBase.Columns("CG_MayorA")
            Me.columnCG_DescCta = MyBase.Columns("CG_DescCta")
            Me.columnCG_GrupoC = MyBase.Columns("CG_GrupoC")
            Me.columnCG_Sdo01 = MyBase.Columns("CG_Sdo01")
            Me.columnCG_Sdo02 = MyBase.Columns("CG_Sdo02")
            Me.columnCG_Sdo03 = MyBase.Columns("CG_Sdo03")
            Me.columnCG_Sdo04 = MyBase.Columns("CG_Sdo04")
            Me.columnCG_Sdo05 = MyBase.Columns("CG_Sdo05")
            Me.columnCG_Sdo06 = MyBase.Columns("CG_Sdo06")
            Me.columnCG_Sdo07 = MyBase.Columns("CG_Sdo07")
            Me.columnCG_Sdo08 = MyBase.Columns("CG_Sdo08")
            Me.columnCG_Sdo09 = MyBase.Columns("CG_Sdo09")
            Me.columnCG_Sdo10 = MyBase.Columns("CG_Sdo10")
            Me.columnCG_Sdo11 = MyBase.Columns("CG_Sdo11")
            Me.columnCG_Sdo12 = MyBase.Columns("CG_Sdo12")
            Me.columnCG_CodCtaC = MyBase.Columns("CG_CodCtaC")
            Me.columnCG_UIDCrea = MyBase.Columns("CG_UIDCrea")
            Me.columnCG_FecCrea = MyBase.Columns("CG_FecCrea")
            Me.columnCG_HoraCr = MyBase.Columns("CG_HoraCr")
            Me.columnCG_UIDMod = MyBase.Columns("CG_UIDMod")
            Me.columnCG_FecMod = MyBase.Columns("CG_FecMod")
            Me.columnCG_HoraMd = MyBase.Columns("CG_HoraMd")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCG_CodigoCta = New Global.System.Data.DataColumn("CG_CodigoCta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_CodigoCta)
            Me.columnCG_TipoCta = New Global.System.Data.DataColumn("CG_TipoCta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_TipoCta)
            Me.columnCG_MayorA = New Global.System.Data.DataColumn("CG_MayorA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_MayorA)
            Me.columnCG_DescCta = New Global.System.Data.DataColumn("CG_DescCta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_DescCta)
            Me.columnCG_GrupoC = New Global.System.Data.DataColumn("CG_GrupoC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_GrupoC)
            Me.columnCG_Sdo01 = New Global.System.Data.DataColumn("CG_Sdo01", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_Sdo01)
            Me.columnCG_Sdo02 = New Global.System.Data.DataColumn("CG_Sdo02", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_Sdo02)
            Me.columnCG_Sdo03 = New Global.System.Data.DataColumn("CG_Sdo03", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_Sdo03)
            Me.columnCG_Sdo04 = New Global.System.Data.DataColumn("CG_Sdo04", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_Sdo04)
            Me.columnCG_Sdo05 = New Global.System.Data.DataColumn("CG_Sdo05", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_Sdo05)
            Me.columnCG_Sdo06 = New Global.System.Data.DataColumn("CG_Sdo06", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_Sdo06)
            Me.columnCG_Sdo07 = New Global.System.Data.DataColumn("CG_Sdo07", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_Sdo07)
            Me.columnCG_Sdo08 = New Global.System.Data.DataColumn("CG_Sdo08", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_Sdo08)
            Me.columnCG_Sdo09 = New Global.System.Data.DataColumn("CG_Sdo09", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_Sdo09)
            Me.columnCG_Sdo10 = New Global.System.Data.DataColumn("CG_Sdo10", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_Sdo10)
            Me.columnCG_Sdo11 = New Global.System.Data.DataColumn("CG_Sdo11", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_Sdo11)
            Me.columnCG_Sdo12 = New Global.System.Data.DataColumn("CG_Sdo12", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_Sdo12)
            Me.columnCG_CodCtaC = New Global.System.Data.DataColumn("CG_CodCtaC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_CodCtaC)
            Me.columnCG_UIDCrea = New Global.System.Data.DataColumn("CG_UIDCrea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_UIDCrea)
            Me.columnCG_FecCrea = New Global.System.Data.DataColumn("CG_FecCrea", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_FecCrea)
            Me.columnCG_HoraCr = New Global.System.Data.DataColumn("CG_HoraCr", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_HoraCr)
            Me.columnCG_UIDMod = New Global.System.Data.DataColumn("CG_UIDMod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_UIDMod)
            Me.columnCG_FecMod = New Global.System.Data.DataColumn("CG_FecMod", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_FecMod)
            Me.columnCG_HoraMd = New Global.System.Data.DataColumn("CG_HoraMd", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG_HoraMd)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCG_CodigoCta}, true))
            Me.columnCG_CodigoCta.AllowDBNull = false
            Me.columnCG_CodigoCta.Unique = true
            Me.columnCG_CodigoCta.MaxLength = 255
            Me.columnCG_TipoCta.MaxLength = 255
            Me.columnCG_MayorA.MaxLength = 255
            Me.columnCG_DescCta.MaxLength = 255
            Me.columnCG_GrupoC.MaxLength = 255
            Me.columnCG_CodCtaC.MaxLength = 255
            Me.columnCG_UIDCrea.MaxLength = 255
            Me.columnCG_UIDMod.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewMRS_CatCtaRow() As MRS_CatCtaRow
            Return CType(Me.NewRow,MRS_CatCtaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MRS_CatCtaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MRS_CatCtaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MRS_CatCtaRowChangedEvent) Is Nothing) Then
                RaiseEvent MRS_CatCtaRowChanged(Me, New MRS_CatCtaRowChangeEvent(CType(e.Row,MRS_CatCtaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MRS_CatCtaRowChangingEvent) Is Nothing) Then
                RaiseEvent MRS_CatCtaRowChanging(Me, New MRS_CatCtaRowChangeEvent(CType(e.Row,MRS_CatCtaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MRS_CatCtaRowDeletedEvent) Is Nothing) Then
                RaiseEvent MRS_CatCtaRowDeleted(Me, New MRS_CatCtaRowChangeEvent(CType(e.Row,MRS_CatCtaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MRS_CatCtaRowDeletingEvent) Is Nothing) Then
                RaiseEvent MRS_CatCtaRowDeleting(Me, New MRS_CatCtaRowChangeEvent(CType(e.Row,MRS_CatCtaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveMRS_CatCtaRow(ByVal row As MRS_CatCtaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PMovilDS = New PMovilDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MRS_CatCtaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MRS_TLogDataTable
        Inherits Global.System.Data.TypedTableBase(Of MRS_TLogRow)
        
        Private columnLG_Id As Global.System.Data.DataColumn
        
        Private columnLG_TransDate As Global.System.Data.DataColumn
        
        Private columnLG_CiaName As Global.System.Data.DataColumn
        
        Private columnLG_RIFCia As Global.System.Data.DataColumn
        
        Private columnLG_CiaBank As Global.System.Data.DataColumn
        
        Private columnLG_CiaMobile As Global.System.Data.DataColumn
        
        Private columnLG_TransAmt As Global.System.Data.DataColumn
        
        Private columnLG_CBankSN As Global.System.Data.DataColumn
        
        Private columnLG_CBankID As Global.System.Data.DataColumn
        
        Private columnLG_CMobile As Global.System.Data.DataColumn
        
        Private columnLG_SMSBody As Global.System.Data.DataColumn
        
        Private columnLG_SMSResp As Global.System.Data.DataColumn
        
        Private columnLG_SMSTimeS As Global.System.Data.DataColumn
        
        Private columnLG_UserTrans As Global.System.Data.DataColumn
        
        Private columnLG_FechaTran As Global.System.Data.DataColumn
        
        Private columnLG_HoraTrans As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MRS_TLog"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LG_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLG_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LG_TransDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLG_TransDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LG_CiaNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLG_CiaName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LG_RIFCiaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLG_RIFCia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LG_CiaBankColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLG_CiaBank
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LG_CiaMobileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLG_CiaMobile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LG_TransAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLG_TransAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LG_CBankSNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLG_CBankSN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LG_CBankIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLG_CBankID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LG_CMobileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLG_CMobile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LG_SMSBodyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLG_SMSBody
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LG_SMSRespColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLG_SMSResp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LG_SMSTimeSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLG_SMSTimeS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LG_UserTransColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLG_UserTrans
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LG_FechaTranColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLG_FechaTran
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LG_HoraTransColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLG_HoraTrans
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MRS_TLogRow
            Get
                Return CType(Me.Rows(index),MRS_TLogRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_TLogRowChanging As MRS_TLogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_TLogRowChanged As MRS_TLogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_TLogRowDeleting As MRS_TLogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_TLogRowDeleted As MRS_TLogRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddMRS_TLogRow(ByVal row As MRS_TLogRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddMRS_TLogRow(ByVal LG_TransDate As String, ByVal LG_CiaName As String, ByVal LG_RIFCia As String, ByVal LG_CiaBank As String, ByVal LG_CiaMobile As String, ByVal LG_TransAmt As Double, ByVal LG_CBankSN As String, ByVal LG_CBankID As String, ByVal LG_CMobile As String, ByVal LG_SMSBody As String, ByVal LG_SMSResp As String, ByVal LG_SMSTimeS As Date, ByVal LG_UserTrans As String, ByVal LG_FechaTran As Date, ByVal LG_HoraTrans As Date) As MRS_TLogRow
            Dim rowMRS_TLogRow As MRS_TLogRow = CType(Me.NewRow,MRS_TLogRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, LG_TransDate, LG_CiaName, LG_RIFCia, LG_CiaBank, LG_CiaMobile, LG_TransAmt, LG_CBankSN, LG_CBankID, LG_CMobile, LG_SMSBody, LG_SMSResp, LG_SMSTimeS, LG_UserTrans, LG_FechaTran, LG_HoraTrans}
            rowMRS_TLogRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMRS_TLogRow)
            Return rowMRS_TLogRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByLG_Id(ByVal LG_Id As Integer) As MRS_TLogRow
            Return CType(Me.Rows.Find(New Object() {LG_Id}),MRS_TLogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MRS_TLogDataTable = CType(MyBase.Clone,MRS_TLogDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MRS_TLogDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnLG_Id = MyBase.Columns("LG_Id")
            Me.columnLG_TransDate = MyBase.Columns("LG_TransDate")
            Me.columnLG_CiaName = MyBase.Columns("LG_CiaName")
            Me.columnLG_RIFCia = MyBase.Columns("LG_RIFCia")
            Me.columnLG_CiaBank = MyBase.Columns("LG_CiaBank")
            Me.columnLG_CiaMobile = MyBase.Columns("LG_CiaMobile")
            Me.columnLG_TransAmt = MyBase.Columns("LG_TransAmt")
            Me.columnLG_CBankSN = MyBase.Columns("LG_CBankSN")
            Me.columnLG_CBankID = MyBase.Columns("LG_CBankID")
            Me.columnLG_CMobile = MyBase.Columns("LG_CMobile")
            Me.columnLG_SMSBody = MyBase.Columns("LG_SMSBody")
            Me.columnLG_SMSResp = MyBase.Columns("LG_SMSResp")
            Me.columnLG_SMSTimeS = MyBase.Columns("LG_SMSTimeS")
            Me.columnLG_UserTrans = MyBase.Columns("LG_UserTrans")
            Me.columnLG_FechaTran = MyBase.Columns("LG_FechaTran")
            Me.columnLG_HoraTrans = MyBase.Columns("LG_HoraTrans")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnLG_Id = New Global.System.Data.DataColumn("LG_Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLG_Id)
            Me.columnLG_TransDate = New Global.System.Data.DataColumn("LG_TransDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLG_TransDate)
            Me.columnLG_CiaName = New Global.System.Data.DataColumn("LG_CiaName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLG_CiaName)
            Me.columnLG_RIFCia = New Global.System.Data.DataColumn("LG_RIFCia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLG_RIFCia)
            Me.columnLG_CiaBank = New Global.System.Data.DataColumn("LG_CiaBank", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLG_CiaBank)
            Me.columnLG_CiaMobile = New Global.System.Data.DataColumn("LG_CiaMobile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLG_CiaMobile)
            Me.columnLG_TransAmt = New Global.System.Data.DataColumn("LG_TransAmt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLG_TransAmt)
            Me.columnLG_CBankSN = New Global.System.Data.DataColumn("LG_CBankSN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLG_CBankSN)
            Me.columnLG_CBankID = New Global.System.Data.DataColumn("LG_CBankID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLG_CBankID)
            Me.columnLG_CMobile = New Global.System.Data.DataColumn("LG_CMobile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLG_CMobile)
            Me.columnLG_SMSBody = New Global.System.Data.DataColumn("LG_SMSBody", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLG_SMSBody)
            Me.columnLG_SMSResp = New Global.System.Data.DataColumn("LG_SMSResp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLG_SMSResp)
            Me.columnLG_SMSTimeS = New Global.System.Data.DataColumn("LG_SMSTimeS", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLG_SMSTimeS)
            Me.columnLG_UserTrans = New Global.System.Data.DataColumn("LG_UserTrans", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLG_UserTrans)
            Me.columnLG_FechaTran = New Global.System.Data.DataColumn("LG_FechaTran", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLG_FechaTran)
            Me.columnLG_HoraTrans = New Global.System.Data.DataColumn("LG_HoraTrans", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLG_HoraTrans)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnLG_Id}, true))
            Me.columnLG_Id.AutoIncrement = true
            Me.columnLG_Id.AutoIncrementSeed = -1
            Me.columnLG_Id.AutoIncrementStep = -1
            Me.columnLG_Id.AllowDBNull = false
            Me.columnLG_Id.ReadOnly = true
            Me.columnLG_Id.Unique = true
            Me.columnLG_TransDate.MaxLength = 255
            Me.columnLG_CiaName.MaxLength = 255
            Me.columnLG_RIFCia.MaxLength = 255
            Me.columnLG_CiaBank.MaxLength = 255
            Me.columnLG_CiaMobile.MaxLength = 255
            Me.columnLG_CBankSN.MaxLength = 255
            Me.columnLG_CBankID.MaxLength = 255
            Me.columnLG_CMobile.MaxLength = 255
            Me.columnLG_SMSBody.MaxLength = 255
            Me.columnLG_SMSResp.MaxLength = 255
            Me.columnLG_UserTrans.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewMRS_TLogRow() As MRS_TLogRow
            Return CType(Me.NewRow,MRS_TLogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MRS_TLogRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MRS_TLogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MRS_TLogRowChangedEvent) Is Nothing) Then
                RaiseEvent MRS_TLogRowChanged(Me, New MRS_TLogRowChangeEvent(CType(e.Row,MRS_TLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MRS_TLogRowChangingEvent) Is Nothing) Then
                RaiseEvent MRS_TLogRowChanging(Me, New MRS_TLogRowChangeEvent(CType(e.Row,MRS_TLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MRS_TLogRowDeletedEvent) Is Nothing) Then
                RaiseEvent MRS_TLogRowDeleted(Me, New MRS_TLogRowChangeEvent(CType(e.Row,MRS_TLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MRS_TLogRowDeletingEvent) Is Nothing) Then
                RaiseEvent MRS_TLogRowDeleting(Me, New MRS_TLogRowChangeEvent(CType(e.Row,MRS_TLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveMRS_TLogRow(ByVal row As MRS_TLogRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PMovilDS = New PMovilDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MRS_TLogDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MRS_ISOBnkDataTable
        Inherits Global.System.Data.TypedTableBase(Of MRS_ISOBnkRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnBankCode As Global.System.Data.DataColumn
        
        Private columnBankNme As Global.System.Data.DataColumn
        
        Private columnBankType As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MRS_ISOBnk"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BankCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBankCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BankNmeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBankNme
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BankTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBankType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MRS_ISOBnkRow
            Get
                Return CType(Me.Rows(index),MRS_ISOBnkRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_ISOBnkRowChanging As MRS_ISOBnkRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_ISOBnkRowChanged As MRS_ISOBnkRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_ISOBnkRowDeleting As MRS_ISOBnkRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_ISOBnkRowDeleted As MRS_ISOBnkRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddMRS_ISOBnkRow(ByVal row As MRS_ISOBnkRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddMRS_ISOBnkRow(ByVal BankCode As String, ByVal BankNme As String, ByVal BankType As String) As MRS_ISOBnkRow
            Dim rowMRS_ISOBnkRow As MRS_ISOBnkRow = CType(Me.NewRow,MRS_ISOBnkRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, BankCode, BankNme, BankType}
            rowMRS_ISOBnkRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMRS_ISOBnkRow)
            Return rowMRS_ISOBnkRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindById(ByVal Id As Integer) As MRS_ISOBnkRow
            Return CType(Me.Rows.Find(New Object() {Id}),MRS_ISOBnkRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MRS_ISOBnkDataTable = CType(MyBase.Clone,MRS_ISOBnkDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MRS_ISOBnkDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnBankCode = MyBase.Columns("BankCode")
            Me.columnBankNme = MyBase.Columns("BankNme")
            Me.columnBankType = MyBase.Columns("BankType")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnBankCode = New Global.System.Data.DataColumn("BankCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBankCode)
            Me.columnBankNme = New Global.System.Data.DataColumn("BankNme", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBankNme)
            Me.columnBankType = New Global.System.Data.DataColumn("BankType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBankType)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AutoIncrement = true
            Me.columnId.AutoIncrementSeed = -1
            Me.columnId.AutoIncrementStep = -1
            Me.columnId.AllowDBNull = false
            Me.columnId.ReadOnly = true
            Me.columnId.Unique = true
            Me.columnBankCode.MaxLength = 255
            Me.columnBankNme.MaxLength = 255
            Me.columnBankType.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewMRS_ISOBnkRow() As MRS_ISOBnkRow
            Return CType(Me.NewRow,MRS_ISOBnkRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MRS_ISOBnkRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MRS_ISOBnkRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MRS_ISOBnkRowChangedEvent) Is Nothing) Then
                RaiseEvent MRS_ISOBnkRowChanged(Me, New MRS_ISOBnkRowChangeEvent(CType(e.Row,MRS_ISOBnkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MRS_ISOBnkRowChangingEvent) Is Nothing) Then
                RaiseEvent MRS_ISOBnkRowChanging(Me, New MRS_ISOBnkRowChangeEvent(CType(e.Row,MRS_ISOBnkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MRS_ISOBnkRowDeletedEvent) Is Nothing) Then
                RaiseEvent MRS_ISOBnkRowDeleted(Me, New MRS_ISOBnkRowChangeEvent(CType(e.Row,MRS_ISOBnkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MRS_ISOBnkRowDeletingEvent) Is Nothing) Then
                RaiseEvent MRS_ISOBnkRowDeleting(Me, New MRS_ISOBnkRowChangeEvent(CType(e.Row,MRS_ISOBnkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveMRS_ISOBnkRow(ByVal row As MRS_ISOBnkRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PMovilDS = New PMovilDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MRS_ISOBnkDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MRS_UsersDataTable
        Inherits Global.System.Data.TypedTableBase(Of MRS_UsersRow)
        
        Private columnUSR_CedID As Global.System.Data.DataColumn
        
        Private columnUSR_eMail As Global.System.Data.DataColumn
        
        Private columnUSR_NUsr As Global.System.Data.DataColumn
        
        Private columnUSR_FName As Global.System.Data.DataColumn
        
        Private columnUSR_LName As Global.System.Data.DataColumn
        
        Private columnUSR_Passwd As Global.System.Data.DataColumn
        
        Private columnUSR_TipoU As Global.System.Data.DataColumn
        
        Private columnUSR_ModAv As Global.System.Data.DataColumn
        
        Private columnUSR_RCreated As Global.System.Data.DataColumn
        
        Private columnUSR_RUserC As Global.System.Data.DataColumn
        
        Private columnUSR_RUpdated As Global.System.Data.DataColumn
        
        Private columnUSR_RUserU As Global.System.Data.DataColumn
        
        Private columnUSR_RDeleted As Global.System.Data.DataColumn
        
        Private columnUSR_RUserD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MRS_Users"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property USR_CedIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSR_CedID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property USR_eMailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSR_eMail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property USR_NUsrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSR_NUsr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property USR_FNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSR_FName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property USR_LNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSR_LName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property USR_PasswdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSR_Passwd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property USR_TipoUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSR_TipoU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property USR_ModAvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSR_ModAv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property USR_RCreatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSR_RCreated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property USR_RUserCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSR_RUserC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property USR_RUpdatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSR_RUpdated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property USR_RUserUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSR_RUserU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property USR_RDeletedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSR_RDeleted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property USR_RUserDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSR_RUserD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MRS_UsersRow
            Get
                Return CType(Me.Rows(index),MRS_UsersRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_UsersRowChanging As MRS_UsersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_UsersRowChanged As MRS_UsersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_UsersRowDeleting As MRS_UsersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event MRS_UsersRowDeleted As MRS_UsersRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddMRS_UsersRow(ByVal row As MRS_UsersRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddMRS_UsersRow(ByVal USR_CedID As String, ByVal USR_eMail As String, ByVal USR_NUsr As String, ByVal USR_FName As String, ByVal USR_LName As String, ByVal USR_Passwd As String, ByVal USR_TipoU As String, ByVal USR_ModAv As String, ByVal USR_RCreated As Date, ByVal USR_RUserC As String, ByVal USR_RUpdated As Date, ByVal USR_RUserU As String, ByVal USR_RDeleted As Date, ByVal USR_RUserD As String) As MRS_UsersRow
            Dim rowMRS_UsersRow As MRS_UsersRow = CType(Me.NewRow,MRS_UsersRow)
            Dim columnValuesArray() As Object = New Object() {USR_CedID, USR_eMail, USR_NUsr, USR_FName, USR_LName, USR_Passwd, USR_TipoU, USR_ModAv, USR_RCreated, USR_RUserC, USR_RUpdated, USR_RUserU, USR_RDeleted, USR_RUserD}
            rowMRS_UsersRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMRS_UsersRow)
            Return rowMRS_UsersRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByUSR_CedID(ByVal USR_CedID As String) As MRS_UsersRow
            Return CType(Me.Rows.Find(New Object() {USR_CedID}),MRS_UsersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MRS_UsersDataTable = CType(MyBase.Clone,MRS_UsersDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MRS_UsersDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnUSR_CedID = MyBase.Columns("USR_CedID")
            Me.columnUSR_eMail = MyBase.Columns("USR_eMail")
            Me.columnUSR_NUsr = MyBase.Columns("USR_NUsr")
            Me.columnUSR_FName = MyBase.Columns("USR_FName")
            Me.columnUSR_LName = MyBase.Columns("USR_LName")
            Me.columnUSR_Passwd = MyBase.Columns("USR_Passwd")
            Me.columnUSR_TipoU = MyBase.Columns("USR_TipoU")
            Me.columnUSR_ModAv = MyBase.Columns("USR_ModAv")
            Me.columnUSR_RCreated = MyBase.Columns("USR_RCreated")
            Me.columnUSR_RUserC = MyBase.Columns("USR_RUserC")
            Me.columnUSR_RUpdated = MyBase.Columns("USR_RUpdated")
            Me.columnUSR_RUserU = MyBase.Columns("USR_RUserU")
            Me.columnUSR_RDeleted = MyBase.Columns("USR_RDeleted")
            Me.columnUSR_RUserD = MyBase.Columns("USR_RUserD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnUSR_CedID = New Global.System.Data.DataColumn("USR_CedID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSR_CedID)
            Me.columnUSR_eMail = New Global.System.Data.DataColumn("USR_eMail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSR_eMail)
            Me.columnUSR_NUsr = New Global.System.Data.DataColumn("USR_NUsr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSR_NUsr)
            Me.columnUSR_FName = New Global.System.Data.DataColumn("USR_FName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSR_FName)
            Me.columnUSR_LName = New Global.System.Data.DataColumn("USR_LName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSR_LName)
            Me.columnUSR_Passwd = New Global.System.Data.DataColumn("USR_Passwd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSR_Passwd)
            Me.columnUSR_TipoU = New Global.System.Data.DataColumn("USR_TipoU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSR_TipoU)
            Me.columnUSR_ModAv = New Global.System.Data.DataColumn("USR_ModAv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSR_ModAv)
            Me.columnUSR_RCreated = New Global.System.Data.DataColumn("USR_RCreated", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSR_RCreated)
            Me.columnUSR_RUserC = New Global.System.Data.DataColumn("USR_RUserC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSR_RUserC)
            Me.columnUSR_RUpdated = New Global.System.Data.DataColumn("USR_RUpdated", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSR_RUpdated)
            Me.columnUSR_RUserU = New Global.System.Data.DataColumn("USR_RUserU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSR_RUserU)
            Me.columnUSR_RDeleted = New Global.System.Data.DataColumn("USR_RDeleted", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSR_RDeleted)
            Me.columnUSR_RUserD = New Global.System.Data.DataColumn("USR_RUserD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSR_RUserD)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnUSR_CedID}, true))
            Me.columnUSR_CedID.AllowDBNull = false
            Me.columnUSR_CedID.Unique = true
            Me.columnUSR_CedID.MaxLength = 10
            Me.columnUSR_eMail.MaxLength = 70
            Me.columnUSR_NUsr.MaxLength = 255
            Me.columnUSR_FName.MaxLength = 255
            Me.columnUSR_LName.MaxLength = 255
            Me.columnUSR_Passwd.MaxLength = 255
            Me.columnUSR_TipoU.MaxLength = 255
            Me.columnUSR_ModAv.MaxLength = 255
            Me.columnUSR_RUserC.MaxLength = 255
            Me.columnUSR_RUserU.MaxLength = 255
            Me.columnUSR_RUserD.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewMRS_UsersRow() As MRS_UsersRow
            Return CType(Me.NewRow,MRS_UsersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MRS_UsersRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MRS_UsersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MRS_UsersRowChangedEvent) Is Nothing) Then
                RaiseEvent MRS_UsersRowChanged(Me, New MRS_UsersRowChangeEvent(CType(e.Row,MRS_UsersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MRS_UsersRowChangingEvent) Is Nothing) Then
                RaiseEvent MRS_UsersRowChanging(Me, New MRS_UsersRowChangeEvent(CType(e.Row,MRS_UsersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MRS_UsersRowDeletedEvent) Is Nothing) Then
                RaiseEvent MRS_UsersRowDeleted(Me, New MRS_UsersRowChangeEvent(CType(e.Row,MRS_UsersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MRS_UsersRowDeletingEvent) Is Nothing) Then
                RaiseEvent MRS_UsersRowDeleting(Me, New MRS_UsersRowChangeEvent(CType(e.Row,MRS_UsersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveMRS_UsersRow(ByVal row As MRS_UsersRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PMovilDS = New PMovilDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MRS_UsersDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MRS_FrecuentesRow
        Inherits Global.System.Data.DataRow
        
        Private tableMRS_Frecuentes As MRS_FrecuentesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMRS_Frecuentes = CType(Me.Table,MRS_FrecuentesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FRE_ID() As Integer
            Get
                Return CType(Me(Me.tableMRS_Frecuentes.FRE_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableMRS_Frecuentes.FRE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FRE_IDCust() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Frecuentes.FRE_IDCustColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FRE_IDCust' in table 'MRS_Frecuentes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Frecuentes.FRE_IDCustColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FRE_CustNme() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Frecuentes.FRE_CustNmeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FRE_CustNme' in table 'MRS_Frecuentes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Frecuentes.FRE_CustNmeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FRE_AliasC() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Frecuentes.FRE_AliasCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FRE_AliasC' in table 'MRS_Frecuentes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Frecuentes.FRE_AliasCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FRE_BankISO() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Frecuentes.FRE_BankISOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FRE_BankISO' in table 'MRS_Frecuentes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Frecuentes.FRE_BankISOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FRE_CustAC() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Frecuentes.FRE_CustACColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FRE_CustAC' in table 'MRS_Frecuentes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Frecuentes.FRE_CustACColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FRE_CustPh() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Frecuentes.FRE_CustPhColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FRE_CustPh' in table 'MRS_Frecuentes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Frecuentes.FRE_CustPhColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FRE_ProvC() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Frecuentes.FRE_ProvCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FRE_ProvC' in table 'MRS_Frecuentes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Frecuentes.FRE_ProvCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FRE_Empleado() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Frecuentes.FRE_EmpleadoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FRE_Empleado' in table 'MRS_Frecuentes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Frecuentes.FRE_EmpleadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FRE_CtaCP() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Frecuentes.FRE_CtaCPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FRE_CtaCP' in table 'MRS_Frecuentes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Frecuentes.FRE_CtaCPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FRE_CtaCG() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Frecuentes.FRE_CtaCGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FRE_CtaCG' in table 'MRS_Frecuentes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Frecuentes.FRE_CtaCGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FRE_CtaGto() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Frecuentes.FRE_CtaGtoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FRE_CtaGto' in table 'MRS_Frecuentes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Frecuentes.FRE_CtaGtoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFRE_IDCustNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Frecuentes.FRE_IDCustColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFRE_IDCustNull()
            Me(Me.tableMRS_Frecuentes.FRE_IDCustColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFRE_CustNmeNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Frecuentes.FRE_CustNmeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFRE_CustNmeNull()
            Me(Me.tableMRS_Frecuentes.FRE_CustNmeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFRE_AliasCNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Frecuentes.FRE_AliasCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFRE_AliasCNull()
            Me(Me.tableMRS_Frecuentes.FRE_AliasCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFRE_BankISONull() As Boolean
            Return Me.IsNull(Me.tableMRS_Frecuentes.FRE_BankISOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFRE_BankISONull()
            Me(Me.tableMRS_Frecuentes.FRE_BankISOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFRE_CustACNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Frecuentes.FRE_CustACColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFRE_CustACNull()
            Me(Me.tableMRS_Frecuentes.FRE_CustACColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFRE_CustPhNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Frecuentes.FRE_CustPhColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFRE_CustPhNull()
            Me(Me.tableMRS_Frecuentes.FRE_CustPhColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFRE_ProvCNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Frecuentes.FRE_ProvCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFRE_ProvCNull()
            Me(Me.tableMRS_Frecuentes.FRE_ProvCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFRE_EmpleadoNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Frecuentes.FRE_EmpleadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFRE_EmpleadoNull()
            Me(Me.tableMRS_Frecuentes.FRE_EmpleadoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFRE_CtaCPNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Frecuentes.FRE_CtaCPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFRE_CtaCPNull()
            Me(Me.tableMRS_Frecuentes.FRE_CtaCPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFRE_CtaCGNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Frecuentes.FRE_CtaCGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFRE_CtaCGNull()
            Me(Me.tableMRS_Frecuentes.FRE_CtaCGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFRE_CtaGtoNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Frecuentes.FRE_CtaGtoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFRE_CtaGtoNull()
            Me(Me.tableMRS_Frecuentes.FRE_CtaGtoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MRS_StructRow
        Inherits Global.System.Data.DataRow
        
        Private tableMRS_Struct As MRS_StructDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMRS_Struct = CType(Me.Table,MRS_StructDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DBS_Id() As Integer
            Get
                Return CType(Me(Me.tableMRS_Struct.DBS_IdColumn),Integer)
            End Get
            Set
                Me(Me.tableMRS_Struct.DBS_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DBS_DataBN() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Struct.DBS_DataBNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DBS_DataBN' in table 'MRS_Struct' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Struct.DBS_DataBNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DBS_Field() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Struct.DBS_FieldColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DBS_Field' in table 'MRS_Struct' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Struct.DBS_FieldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DBS_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Struct.DBS_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DBS_Type' in table 'MRS_Struct' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Struct.DBS_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DBS_LenF() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Struct.DBS_LenFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DBS_LenF' in table 'MRS_Struct' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Struct.DBS_LenFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDBS_DataBNNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Struct.DBS_DataBNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDBS_DataBNNull()
            Me(Me.tableMRS_Struct.DBS_DataBNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDBS_FieldNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Struct.DBS_FieldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDBS_FieldNull()
            Me(Me.tableMRS_Struct.DBS_FieldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDBS_TypeNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Struct.DBS_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDBS_TypeNull()
            Me(Me.tableMRS_Struct.DBS_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDBS_LenFNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Struct.DBS_LenFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDBS_LenFNull()
            Me(Me.tableMRS_Struct.DBS_LenFColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MRS_WorkMGRow
        Inherits Global.System.Data.DataRow
        
        Private tableMRS_WorkMG As MRS_WorkMGDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMRS_WorkMG = CType(Me.Table,MRS_WorkMGDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property WRK_Fecha() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMRS_WorkMG.WRK_FechaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WRK_Fecha' in table 'MRS_WorkMG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_WorkMG.WRK_FechaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property WRK_CodCta() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_WorkMG.WRK_CodCtaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WRK_CodCta' in table 'MRS_WorkMG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_WorkMG.WRK_CodCtaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property WRK_DesCta() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_WorkMG.WRK_DesCtaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WRK_DesCta' in table 'MRS_WorkMG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_WorkMG.WRK_DesCtaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property WRK_Compr() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_WorkMG.WRK_ComprColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WRK_Compr' in table 'MRS_WorkMG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_WorkMG.WRK_ComprColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property WRK_DesAs() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_WorkMG.WRK_DesAsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WRK_DesAs' in table 'MRS_WorkMG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_WorkMG.WRK_DesAsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property WRK_Debe() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMRS_WorkMG.WRK_DebeColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WRK_Debe' in table 'MRS_WorkMG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_WorkMG.WRK_DebeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property WRK_Haber() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMRS_WorkMG.WRK_HaberColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WRK_Haber' in table 'MRS_WorkMG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_WorkMG.WRK_HaberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property WRK_Saldo() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMRS_WorkMG.WRK_SaldoColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WRK_Saldo' in table 'MRS_WorkMG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_WorkMG.WRK_SaldoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsWRK_FechaNull() As Boolean
            Return Me.IsNull(Me.tableMRS_WorkMG.WRK_FechaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetWRK_FechaNull()
            Me(Me.tableMRS_WorkMG.WRK_FechaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsWRK_CodCtaNull() As Boolean
            Return Me.IsNull(Me.tableMRS_WorkMG.WRK_CodCtaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetWRK_CodCtaNull()
            Me(Me.tableMRS_WorkMG.WRK_CodCtaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsWRK_DesCtaNull() As Boolean
            Return Me.IsNull(Me.tableMRS_WorkMG.WRK_DesCtaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetWRK_DesCtaNull()
            Me(Me.tableMRS_WorkMG.WRK_DesCtaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsWRK_ComprNull() As Boolean
            Return Me.IsNull(Me.tableMRS_WorkMG.WRK_ComprColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetWRK_ComprNull()
            Me(Me.tableMRS_WorkMG.WRK_ComprColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsWRK_DesAsNull() As Boolean
            Return Me.IsNull(Me.tableMRS_WorkMG.WRK_DesAsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetWRK_DesAsNull()
            Me(Me.tableMRS_WorkMG.WRK_DesAsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsWRK_DebeNull() As Boolean
            Return Me.IsNull(Me.tableMRS_WorkMG.WRK_DebeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetWRK_DebeNull()
            Me(Me.tableMRS_WorkMG.WRK_DebeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsWRK_HaberNull() As Boolean
            Return Me.IsNull(Me.tableMRS_WorkMG.WRK_HaberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetWRK_HaberNull()
            Me(Me.tableMRS_WorkMG.WRK_HaberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsWRK_SaldoNull() As Boolean
            Return Me.IsNull(Me.tableMRS_WorkMG.WRK_SaldoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetWRK_SaldoNull()
            Me(Me.tableMRS_WorkMG.WRK_SaldoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MRS_DynamicsERow
        Inherits Global.System.Data.DataRow
        
        Private tableMRS_DynamicsE As MRS_DynamicsEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMRS_DynamicsE = CType(Me.Table,MRS_DynamicsEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tableMRS_DynamicsE.IdColumn),Integer)
            End Get
            Set
                Me(Me.tableMRS_DynamicsE.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DYN_OrgName() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_DynamicsE.DYN_OrgNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DYN_OrgName' in table 'MRS_DynamicsE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_DynamicsE.DYN_OrgNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DYN_RifNumb() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_DynamicsE.DYN_RifNumbColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DYN_RifNumb' in table 'MRS_DynamicsE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_DynamicsE.DYN_RifNumbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DYN_ACodMP() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_DynamicsE.DYN_ACodMPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DYN_ACodMP' in table 'MRS_DynamicsE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_DynamicsE.DYN_ACodMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DYN_MobileP() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_DynamicsE.DYN_MobilePColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DYN_MobileP' in table 'MRS_DynamicsE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_DynamicsE.DYN_MobilePColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DYN_BankCod() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_DynamicsE.DYN_BankCodColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DYN_BankCod' in table 'MRS_DynamicsE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_DynamicsE.DYN_BankCodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DYN_BankNme() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_DynamicsE.DYN_BankNmeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DYN_BankNme' in table 'MRS_DynamicsE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_DynamicsE.DYN_BankNmeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DYN_CodCtaCB() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_DynamicsE.DYN_CodCtaCBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DYN_CodCtaCB' in table 'MRS_DynamicsE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_DynamicsE.DYN_CodCtaCBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DYN_LteDPM() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMRS_DynamicsE.DYN_LteDPMColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DYN_LteDPM' in table 'MRS_DynamicsE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_DynamicsE.DYN_LteDPMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DYN_PagosM() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMRS_DynamicsE.DYN_PagosMColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DYN_PagosM' in table 'MRS_DynamicsE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_DynamicsE.DYN_PagosMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DYN_RestoPM() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMRS_DynamicsE.DYN_RestoPMColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DYN_RestoPM' in table 'MRS_DynamicsE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_DynamicsE.DYN_RestoPMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDYN_OrgNameNull() As Boolean
            Return Me.IsNull(Me.tableMRS_DynamicsE.DYN_OrgNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDYN_OrgNameNull()
            Me(Me.tableMRS_DynamicsE.DYN_OrgNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDYN_RifNumbNull() As Boolean
            Return Me.IsNull(Me.tableMRS_DynamicsE.DYN_RifNumbColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDYN_RifNumbNull()
            Me(Me.tableMRS_DynamicsE.DYN_RifNumbColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDYN_ACodMPNull() As Boolean
            Return Me.IsNull(Me.tableMRS_DynamicsE.DYN_ACodMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDYN_ACodMPNull()
            Me(Me.tableMRS_DynamicsE.DYN_ACodMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDYN_MobilePNull() As Boolean
            Return Me.IsNull(Me.tableMRS_DynamicsE.DYN_MobilePColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDYN_MobilePNull()
            Me(Me.tableMRS_DynamicsE.DYN_MobilePColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDYN_BankCodNull() As Boolean
            Return Me.IsNull(Me.tableMRS_DynamicsE.DYN_BankCodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDYN_BankCodNull()
            Me(Me.tableMRS_DynamicsE.DYN_BankCodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDYN_BankNmeNull() As Boolean
            Return Me.IsNull(Me.tableMRS_DynamicsE.DYN_BankNmeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDYN_BankNmeNull()
            Me(Me.tableMRS_DynamicsE.DYN_BankNmeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDYN_CodCtaCBNull() As Boolean
            Return Me.IsNull(Me.tableMRS_DynamicsE.DYN_CodCtaCBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDYN_CodCtaCBNull()
            Me(Me.tableMRS_DynamicsE.DYN_CodCtaCBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDYN_LteDPMNull() As Boolean
            Return Me.IsNull(Me.tableMRS_DynamicsE.DYN_LteDPMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDYN_LteDPMNull()
            Me(Me.tableMRS_DynamicsE.DYN_LteDPMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDYN_PagosMNull() As Boolean
            Return Me.IsNull(Me.tableMRS_DynamicsE.DYN_PagosMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDYN_PagosMNull()
            Me(Me.tableMRS_DynamicsE.DYN_PagosMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDYN_RestoPMNull() As Boolean
            Return Me.IsNull(Me.tableMRS_DynamicsE.DYN_RestoPMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDYN_RestoPMNull()
            Me(Me.tableMRS_DynamicsE.DYN_RestoPMColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MRS_CGPMovRow
        Inherits Global.System.Data.DataRow
        
        Private tableMRS_CGPMov As MRS_CGPMovDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMRS_CGPMov = CType(Me.Table,MRS_CGPMovDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_ID() As Integer
            Get
                Return CType(Me(Me.tableMRS_CGPMov.RPM_IDColumn),Integer)
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_TipoTran() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_TipoTranColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_TipoTran' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_TipoTranColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_FechaT() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_FechaTColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_FechaT' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_FechaTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_Benefit() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_BenefitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_Benefit' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_BenefitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_CIBenef() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_CIBenefColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_CIBenef' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_CIBenefColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_NMovB() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_NMovBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_NMovB' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_NMovBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_ISOBankB() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_ISOBankBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_ISOBankB' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_ISOBankBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_CiaNmeD() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_CiaNmeDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_CiaNmeD' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_CiaNmeDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_ISOBankD() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_ISOBankDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_ISOBankD' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_ISOBankDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_RIFCiaD() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_RIFCiaDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_RIFCiaD' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_RIFCiaDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_MovilD() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_MovilDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_MovilD' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_MovilDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_MtoTr() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_MtoTrColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_MtoTr' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_MtoTrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_Factura() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_FacturaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_Factura' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_FacturaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_NRefB() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_NRefBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_NRefB' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_NRefBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_CtaCble() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_CtaCbleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_CtaCble' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_CtaCbleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_MayorA() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_MayorAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_MayorA' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_MayorAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_DescAs() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_DescAsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_DescAs' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_DescAsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_NAsiento() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_NAsientoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_NAsiento' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_NAsientoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_TipoAs() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_TipoAsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_TipoAs' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_TipoAsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_UIDpm() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_UIDpmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_UIDpm' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_UIDpmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_FecReg() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_FecRegColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_FecReg' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_FecRegColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RPM_HraReg() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CGPMov.RPM_HraRegColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RPM_HraReg' in table 'MRS_CGPMov' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CGPMov.RPM_HraRegColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_TipoTranNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_TipoTranColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_TipoTranNull()
            Me(Me.tableMRS_CGPMov.RPM_TipoTranColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_FechaTNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_FechaTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_FechaTNull()
            Me(Me.tableMRS_CGPMov.RPM_FechaTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_BenefitNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_BenefitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_BenefitNull()
            Me(Me.tableMRS_CGPMov.RPM_BenefitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_CIBenefNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_CIBenefColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_CIBenefNull()
            Me(Me.tableMRS_CGPMov.RPM_CIBenefColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_NMovBNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_NMovBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_NMovBNull()
            Me(Me.tableMRS_CGPMov.RPM_NMovBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_ISOBankBNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_ISOBankBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_ISOBankBNull()
            Me(Me.tableMRS_CGPMov.RPM_ISOBankBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_CiaNmeDNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_CiaNmeDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_CiaNmeDNull()
            Me(Me.tableMRS_CGPMov.RPM_CiaNmeDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_ISOBankDNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_ISOBankDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_ISOBankDNull()
            Me(Me.tableMRS_CGPMov.RPM_ISOBankDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_RIFCiaDNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_RIFCiaDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_RIFCiaDNull()
            Me(Me.tableMRS_CGPMov.RPM_RIFCiaDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_MovilDNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_MovilDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_MovilDNull()
            Me(Me.tableMRS_CGPMov.RPM_MovilDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_MtoTrNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_MtoTrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_MtoTrNull()
            Me(Me.tableMRS_CGPMov.RPM_MtoTrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_FacturaNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_FacturaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_FacturaNull()
            Me(Me.tableMRS_CGPMov.RPM_FacturaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_NRefBNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_NRefBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_NRefBNull()
            Me(Me.tableMRS_CGPMov.RPM_NRefBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_CtaCbleNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_CtaCbleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_CtaCbleNull()
            Me(Me.tableMRS_CGPMov.RPM_CtaCbleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_MayorANull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_MayorAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_MayorANull()
            Me(Me.tableMRS_CGPMov.RPM_MayorAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_DescAsNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_DescAsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_DescAsNull()
            Me(Me.tableMRS_CGPMov.RPM_DescAsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_NAsientoNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_NAsientoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_NAsientoNull()
            Me(Me.tableMRS_CGPMov.RPM_NAsientoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_TipoAsNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_TipoAsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_TipoAsNull()
            Me(Me.tableMRS_CGPMov.RPM_TipoAsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_UIDpmNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_UIDpmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_UIDpmNull()
            Me(Me.tableMRS_CGPMov.RPM_UIDpmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_FecRegNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_FecRegColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_FecRegNull()
            Me(Me.tableMRS_CGPMov.RPM_FecRegColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRPM_HraRegNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CGPMov.RPM_HraRegColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRPM_HraRegNull()
            Me(Me.tableMRS_CGPMov.RPM_HraRegColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MRS_CatCtaRow
        Inherits Global.System.Data.DataRow
        
        Private tableMRS_CatCta As MRS_CatCtaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMRS_CatCta = CType(Me.Table,MRS_CatCtaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_CodigoCta() As String
            Get
                Return CType(Me(Me.tableMRS_CatCta.CG_CodigoCtaColumn),String)
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_CodigoCtaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_TipoCta() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_TipoCtaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_TipoCta' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_TipoCtaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_MayorA() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_MayorAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_MayorA' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_MayorAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_DescCta() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_DescCtaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_DescCta' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_DescCtaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_GrupoC() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_GrupoCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_GrupoC' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_GrupoCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_Sdo01() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_Sdo01Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_Sdo01' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_Sdo01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_Sdo02() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_Sdo02Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_Sdo02' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_Sdo02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_Sdo03() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_Sdo03Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_Sdo03' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_Sdo03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_Sdo04() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_Sdo04Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_Sdo04' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_Sdo04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_Sdo05() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_Sdo05Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_Sdo05' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_Sdo05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_Sdo06() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_Sdo06Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_Sdo06' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_Sdo06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_Sdo07() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_Sdo07Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_Sdo07' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_Sdo07Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_Sdo08() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_Sdo08Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_Sdo08' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_Sdo08Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_Sdo09() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_Sdo09Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_Sdo09' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_Sdo09Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_Sdo10() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_Sdo10Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_Sdo10' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_Sdo10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_Sdo11() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_Sdo11Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_Sdo11' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_Sdo11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_Sdo12() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_Sdo12Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_Sdo12' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_Sdo12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_CodCtaC() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_CodCtaCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_CodCtaC' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_CodCtaCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_UIDCrea() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_UIDCreaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_UIDCrea' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_UIDCreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_FecCrea() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_FecCreaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_FecCrea' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_FecCreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_HoraCr() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_HoraCrColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_HoraCr' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_HoraCrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_UIDMod() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_UIDModColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_UIDMod' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_UIDModColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_FecMod() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_FecModColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_FecMod' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_FecModColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CG_HoraMd() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMRS_CatCta.CG_HoraMdColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG_HoraMd' in table 'MRS_CatCta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_CatCta.CG_HoraMdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_TipoCtaNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_TipoCtaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_TipoCtaNull()
            Me(Me.tableMRS_CatCta.CG_TipoCtaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_MayorANull() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_MayorAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_MayorANull()
            Me(Me.tableMRS_CatCta.CG_MayorAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_DescCtaNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_DescCtaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_DescCtaNull()
            Me(Me.tableMRS_CatCta.CG_DescCtaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_GrupoCNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_GrupoCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_GrupoCNull()
            Me(Me.tableMRS_CatCta.CG_GrupoCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_Sdo01Null() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_Sdo01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_Sdo01Null()
            Me(Me.tableMRS_CatCta.CG_Sdo01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_Sdo02Null() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_Sdo02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_Sdo02Null()
            Me(Me.tableMRS_CatCta.CG_Sdo02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_Sdo03Null() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_Sdo03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_Sdo03Null()
            Me(Me.tableMRS_CatCta.CG_Sdo03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_Sdo04Null() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_Sdo04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_Sdo04Null()
            Me(Me.tableMRS_CatCta.CG_Sdo04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_Sdo05Null() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_Sdo05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_Sdo05Null()
            Me(Me.tableMRS_CatCta.CG_Sdo05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_Sdo06Null() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_Sdo06Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_Sdo06Null()
            Me(Me.tableMRS_CatCta.CG_Sdo06Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_Sdo07Null() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_Sdo07Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_Sdo07Null()
            Me(Me.tableMRS_CatCta.CG_Sdo07Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_Sdo08Null() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_Sdo08Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_Sdo08Null()
            Me(Me.tableMRS_CatCta.CG_Sdo08Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_Sdo09Null() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_Sdo09Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_Sdo09Null()
            Me(Me.tableMRS_CatCta.CG_Sdo09Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_Sdo10Null() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_Sdo10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_Sdo10Null()
            Me(Me.tableMRS_CatCta.CG_Sdo10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_Sdo11Null() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_Sdo11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_Sdo11Null()
            Me(Me.tableMRS_CatCta.CG_Sdo11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_Sdo12Null() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_Sdo12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_Sdo12Null()
            Me(Me.tableMRS_CatCta.CG_Sdo12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_CodCtaCNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_CodCtaCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_CodCtaCNull()
            Me(Me.tableMRS_CatCta.CG_CodCtaCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_UIDCreaNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_UIDCreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_UIDCreaNull()
            Me(Me.tableMRS_CatCta.CG_UIDCreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_FecCreaNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_FecCreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_FecCreaNull()
            Me(Me.tableMRS_CatCta.CG_FecCreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_HoraCrNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_HoraCrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_HoraCrNull()
            Me(Me.tableMRS_CatCta.CG_HoraCrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_UIDModNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_UIDModColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_UIDModNull()
            Me(Me.tableMRS_CatCta.CG_UIDModColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_FecModNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_FecModColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_FecModNull()
            Me(Me.tableMRS_CatCta.CG_FecModColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCG_HoraMdNull() As Boolean
            Return Me.IsNull(Me.tableMRS_CatCta.CG_HoraMdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCG_HoraMdNull()
            Me(Me.tableMRS_CatCta.CG_HoraMdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MRS_TLogRow
        Inherits Global.System.Data.DataRow
        
        Private tableMRS_TLog As MRS_TLogDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMRS_TLog = CType(Me.Table,MRS_TLogDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LG_Id() As Integer
            Get
                Return CType(Me(Me.tableMRS_TLog.LG_IdColumn),Integer)
            End Get
            Set
                Me(Me.tableMRS_TLog.LG_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LG_TransDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_TLog.LG_TransDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LG_TransDate' in table 'MRS_TLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_TLog.LG_TransDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LG_CiaName() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_TLog.LG_CiaNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LG_CiaName' in table 'MRS_TLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_TLog.LG_CiaNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LG_RIFCia() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_TLog.LG_RIFCiaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LG_RIFCia' in table 'MRS_TLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_TLog.LG_RIFCiaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LG_CiaBank() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_TLog.LG_CiaBankColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LG_CiaBank' in table 'MRS_TLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_TLog.LG_CiaBankColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LG_CiaMobile() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_TLog.LG_CiaMobileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LG_CiaMobile' in table 'MRS_TLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_TLog.LG_CiaMobileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LG_TransAmt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableMRS_TLog.LG_TransAmtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LG_TransAmt' in table 'MRS_TLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_TLog.LG_TransAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LG_CBankSN() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_TLog.LG_CBankSNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LG_CBankSN' in table 'MRS_TLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_TLog.LG_CBankSNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LG_CBankID() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_TLog.LG_CBankIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LG_CBankID' in table 'MRS_TLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_TLog.LG_CBankIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LG_CMobile() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_TLog.LG_CMobileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LG_CMobile' in table 'MRS_TLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_TLog.LG_CMobileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LG_SMSBody() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_TLog.LG_SMSBodyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LG_SMSBody' in table 'MRS_TLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_TLog.LG_SMSBodyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LG_SMSResp() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_TLog.LG_SMSRespColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LG_SMSResp' in table 'MRS_TLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_TLog.LG_SMSRespColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LG_SMSTimeS() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMRS_TLog.LG_SMSTimeSColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LG_SMSTimeS' in table 'MRS_TLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_TLog.LG_SMSTimeSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LG_UserTrans() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_TLog.LG_UserTransColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LG_UserTrans' in table 'MRS_TLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_TLog.LG_UserTransColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LG_FechaTran() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMRS_TLog.LG_FechaTranColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LG_FechaTran' in table 'MRS_TLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_TLog.LG_FechaTranColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LG_HoraTrans() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMRS_TLog.LG_HoraTransColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LG_HoraTrans' in table 'MRS_TLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_TLog.LG_HoraTransColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLG_TransDateNull() As Boolean
            Return Me.IsNull(Me.tableMRS_TLog.LG_TransDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLG_TransDateNull()
            Me(Me.tableMRS_TLog.LG_TransDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLG_CiaNameNull() As Boolean
            Return Me.IsNull(Me.tableMRS_TLog.LG_CiaNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLG_CiaNameNull()
            Me(Me.tableMRS_TLog.LG_CiaNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLG_RIFCiaNull() As Boolean
            Return Me.IsNull(Me.tableMRS_TLog.LG_RIFCiaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLG_RIFCiaNull()
            Me(Me.tableMRS_TLog.LG_RIFCiaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLG_CiaBankNull() As Boolean
            Return Me.IsNull(Me.tableMRS_TLog.LG_CiaBankColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLG_CiaBankNull()
            Me(Me.tableMRS_TLog.LG_CiaBankColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLG_CiaMobileNull() As Boolean
            Return Me.IsNull(Me.tableMRS_TLog.LG_CiaMobileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLG_CiaMobileNull()
            Me(Me.tableMRS_TLog.LG_CiaMobileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLG_TransAmtNull() As Boolean
            Return Me.IsNull(Me.tableMRS_TLog.LG_TransAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLG_TransAmtNull()
            Me(Me.tableMRS_TLog.LG_TransAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLG_CBankSNNull() As Boolean
            Return Me.IsNull(Me.tableMRS_TLog.LG_CBankSNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLG_CBankSNNull()
            Me(Me.tableMRS_TLog.LG_CBankSNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLG_CBankIDNull() As Boolean
            Return Me.IsNull(Me.tableMRS_TLog.LG_CBankIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLG_CBankIDNull()
            Me(Me.tableMRS_TLog.LG_CBankIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLG_CMobileNull() As Boolean
            Return Me.IsNull(Me.tableMRS_TLog.LG_CMobileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLG_CMobileNull()
            Me(Me.tableMRS_TLog.LG_CMobileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLG_SMSBodyNull() As Boolean
            Return Me.IsNull(Me.tableMRS_TLog.LG_SMSBodyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLG_SMSBodyNull()
            Me(Me.tableMRS_TLog.LG_SMSBodyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLG_SMSRespNull() As Boolean
            Return Me.IsNull(Me.tableMRS_TLog.LG_SMSRespColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLG_SMSRespNull()
            Me(Me.tableMRS_TLog.LG_SMSRespColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLG_SMSTimeSNull() As Boolean
            Return Me.IsNull(Me.tableMRS_TLog.LG_SMSTimeSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLG_SMSTimeSNull()
            Me(Me.tableMRS_TLog.LG_SMSTimeSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLG_UserTransNull() As Boolean
            Return Me.IsNull(Me.tableMRS_TLog.LG_UserTransColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLG_UserTransNull()
            Me(Me.tableMRS_TLog.LG_UserTransColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLG_FechaTranNull() As Boolean
            Return Me.IsNull(Me.tableMRS_TLog.LG_FechaTranColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLG_FechaTranNull()
            Me(Me.tableMRS_TLog.LG_FechaTranColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLG_HoraTransNull() As Boolean
            Return Me.IsNull(Me.tableMRS_TLog.LG_HoraTransColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLG_HoraTransNull()
            Me(Me.tableMRS_TLog.LG_HoraTransColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MRS_ISOBnkRow
        Inherits Global.System.Data.DataRow
        
        Private tableMRS_ISOBnk As MRS_ISOBnkDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMRS_ISOBnk = CType(Me.Table,MRS_ISOBnkDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tableMRS_ISOBnk.IdColumn),Integer)
            End Get
            Set
                Me(Me.tableMRS_ISOBnk.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BankCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_ISOBnk.BankCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BankCode' in table 'MRS_ISOBnk' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_ISOBnk.BankCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BankNme() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_ISOBnk.BankNmeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BankNme' in table 'MRS_ISOBnk' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_ISOBnk.BankNmeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BankType() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_ISOBnk.BankTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BankType' in table 'MRS_ISOBnk' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_ISOBnk.BankTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBankCodeNull() As Boolean
            Return Me.IsNull(Me.tableMRS_ISOBnk.BankCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBankCodeNull()
            Me(Me.tableMRS_ISOBnk.BankCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBankNmeNull() As Boolean
            Return Me.IsNull(Me.tableMRS_ISOBnk.BankNmeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBankNmeNull()
            Me(Me.tableMRS_ISOBnk.BankNmeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBankTypeNull() As Boolean
            Return Me.IsNull(Me.tableMRS_ISOBnk.BankTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBankTypeNull()
            Me(Me.tableMRS_ISOBnk.BankTypeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MRS_UsersRow
        Inherits Global.System.Data.DataRow
        
        Private tableMRS_Users As MRS_UsersDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMRS_Users = CType(Me.Table,MRS_UsersDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property USR_CedID() As String
            Get
                Return CType(Me(Me.tableMRS_Users.USR_CedIDColumn),String)
            End Get
            Set
                Me(Me.tableMRS_Users.USR_CedIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property USR_eMail() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Users.USR_eMailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USR_eMail' in table 'MRS_Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Users.USR_eMailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property USR_NUsr() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Users.USR_NUsrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USR_NUsr' in table 'MRS_Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Users.USR_NUsrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property USR_FName() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Users.USR_FNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USR_FName' in table 'MRS_Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Users.USR_FNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property USR_LName() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Users.USR_LNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USR_LName' in table 'MRS_Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Users.USR_LNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property USR_Passwd() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Users.USR_PasswdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USR_Passwd' in table 'MRS_Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Users.USR_PasswdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property USR_TipoU() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Users.USR_TipoUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USR_TipoU' in table 'MRS_Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Users.USR_TipoUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property USR_ModAv() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Users.USR_ModAvColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USR_ModAv' in table 'MRS_Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Users.USR_ModAvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property USR_RCreated() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Users.USR_RCreatedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USR_RCreated' in table 'MRS_Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Users.USR_RCreatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property USR_RUserC() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Users.USR_RUserCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USR_RUserC' in table 'MRS_Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Users.USR_RUserCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property USR_RUpdated() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Users.USR_RUpdatedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USR_RUpdated' in table 'MRS_Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Users.USR_RUpdatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property USR_RUserU() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Users.USR_RUserUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USR_RUserU' in table 'MRS_Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Users.USR_RUserUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property USR_RDeleted() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Users.USR_RDeletedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USR_RDeleted' in table 'MRS_Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Users.USR_RDeletedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property USR_RUserD() As String
            Get
                Try 
                    Return CType(Me(Me.tableMRS_Users.USR_RUserDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USR_RUserD' in table 'MRS_Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMRS_Users.USR_RUserDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUSR_eMailNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Users.USR_eMailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUSR_eMailNull()
            Me(Me.tableMRS_Users.USR_eMailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUSR_NUsrNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Users.USR_NUsrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUSR_NUsrNull()
            Me(Me.tableMRS_Users.USR_NUsrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUSR_FNameNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Users.USR_FNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUSR_FNameNull()
            Me(Me.tableMRS_Users.USR_FNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUSR_LNameNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Users.USR_LNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUSR_LNameNull()
            Me(Me.tableMRS_Users.USR_LNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUSR_PasswdNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Users.USR_PasswdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUSR_PasswdNull()
            Me(Me.tableMRS_Users.USR_PasswdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUSR_TipoUNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Users.USR_TipoUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUSR_TipoUNull()
            Me(Me.tableMRS_Users.USR_TipoUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUSR_ModAvNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Users.USR_ModAvColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUSR_ModAvNull()
            Me(Me.tableMRS_Users.USR_ModAvColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUSR_RCreatedNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Users.USR_RCreatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUSR_RCreatedNull()
            Me(Me.tableMRS_Users.USR_RCreatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUSR_RUserCNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Users.USR_RUserCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUSR_RUserCNull()
            Me(Me.tableMRS_Users.USR_RUserCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUSR_RUpdatedNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Users.USR_RUpdatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUSR_RUpdatedNull()
            Me(Me.tableMRS_Users.USR_RUpdatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUSR_RUserUNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Users.USR_RUserUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUSR_RUserUNull()
            Me(Me.tableMRS_Users.USR_RUserUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUSR_RDeletedNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Users.USR_RDeletedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUSR_RDeletedNull()
            Me(Me.tableMRS_Users.USR_RDeletedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUSR_RUserDNull() As Boolean
            Return Me.IsNull(Me.tableMRS_Users.USR_RUserDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUSR_RUserDNull()
            Me(Me.tableMRS_Users.USR_RUserDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class MRS_FrecuentesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MRS_FrecuentesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As MRS_FrecuentesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As MRS_FrecuentesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class MRS_StructRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MRS_StructRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As MRS_StructRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As MRS_StructRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class MRS_WorkMGRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MRS_WorkMGRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As MRS_WorkMGRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As MRS_WorkMGRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class MRS_DynamicsERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MRS_DynamicsERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As MRS_DynamicsERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As MRS_DynamicsERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class MRS_CGPMovRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MRS_CGPMovRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As MRS_CGPMovRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As MRS_CGPMovRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class MRS_CatCtaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MRS_CatCtaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As MRS_CatCtaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As MRS_CatCtaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class MRS_TLogRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MRS_TLogRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As MRS_TLogRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As MRS_TLogRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class MRS_ISOBnkRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MRS_ISOBnkRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As MRS_ISOBnkRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As MRS_ISOBnkRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class MRS_UsersRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MRS_UsersRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As MRS_UsersRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As MRS_UsersRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace PMovilDSTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MRS_FrecuentesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MRS_Frecuentes"
            tableMapping.ColumnMappings.Add("FRE_ID", "FRE_ID")
            tableMapping.ColumnMappings.Add("FRE_IDCust", "FRE_IDCust")
            tableMapping.ColumnMappings.Add("FRE_CustNme", "FRE_CustNme")
            tableMapping.ColumnMappings.Add("FRE_AliasC", "FRE_AliasC")
            tableMapping.ColumnMappings.Add("FRE_BankISO", "FRE_BankISO")
            tableMapping.ColumnMappings.Add("FRE_CustAC", "FRE_CustAC")
            tableMapping.ColumnMappings.Add("FRE_CustPh", "FRE_CustPh")
            tableMapping.ColumnMappings.Add("FRE_ProvC", "FRE_ProvC")
            tableMapping.ColumnMappings.Add("FRE_Empleado", "FRE_Empleado")
            tableMapping.ColumnMappings.Add("FRE_CtaCP", "FRE_CtaCP")
            tableMapping.ColumnMappings.Add("FRE_CtaCG", "FRE_CtaCG")
            tableMapping.ColumnMappings.Add("FRE_CtaGto", "FRE_CtaGto")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [MRS_Frecuentes] WHERE (([FRE_ID] = ?) AND ((? = 1 AND [FRE_IDCust] I"& _ 
                "S NULL) OR ([FRE_IDCust] = ?)) AND ((? = 1 AND [FRE_CustNme] IS NULL) OR ([FRE_C"& _ 
                "ustNme] = ?)) AND ((? = 1 AND [FRE_AliasC] IS NULL) OR ([FRE_AliasC] = ?)) AND ("& _ 
                "(? = 1 AND [FRE_BankISO] IS NULL) OR ([FRE_BankISO] = ?)) AND ((? = 1 AND [FRE_C"& _ 
                "ustAC] IS NULL) OR ([FRE_CustAC] = ?)) AND ((? = 1 AND [FRE_CustPh] IS NULL) OR "& _ 
                "([FRE_CustPh] = ?)) AND ((? = 1 AND [FRE_ProvC] IS NULL) OR ([FRE_ProvC] = ?)) A"& _ 
                "ND ((? = 1 AND [FRE_Empleado] IS NULL) OR ([FRE_Empleado] = ?)) AND ((? = 1 AND "& _ 
                "[FRE_CtaCP] IS NULL) OR ([FRE_CtaCP] = ?)) AND ((? = 1 AND [FRE_CtaCG] IS NULL) "& _ 
                "OR ([FRE_CtaCG] = ?)) AND ((? = 1 AND [FRE_CtaGto] IS NULL) OR ([FRE_CtaGto] = ?"& _ 
                ")))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_ID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_IDCust", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_IDCust", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_IDCust", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_IDCust", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_CustNme", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CustNme", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_CustNme", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CustNme", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_AliasC", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_AliasC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_AliasC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_AliasC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_BankISO", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_BankISO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_BankISO", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_BankISO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_CustAC", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CustAC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_CustAC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CustAC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_CustPh", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CustPh", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_CustPh", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CustPh", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_ProvC", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_ProvC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_ProvC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_ProvC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_Empleado", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_Empleado", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_Empleado", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_Empleado", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_CtaCP", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CtaCP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_CtaCP", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CtaCP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_CtaCG", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CtaCG", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_CtaCG", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CtaCG", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_CtaGto", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CtaGto", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_CtaGto", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CtaGto", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [MRS_Frecuentes] ([FRE_IDCust], [FRE_CustNme], [FRE_AliasC], [FRE_Ban"& _ 
                "kISO], [FRE_CustAC], [FRE_CustPh], [FRE_ProvC], [FRE_Empleado], [FRE_CtaCP], [FR"& _ 
                "E_CtaCG], [FRE_CtaGto]) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_IDCust", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_IDCust", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_CustNme", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CustNme", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_AliasC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_AliasC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_BankISO", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_BankISO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_CustAC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CustAC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_CustPh", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CustPh", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_ProvC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_ProvC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_Empleado", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_Empleado", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_CtaCP", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CtaCP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_CtaCG", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CtaCG", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_CtaGto", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CtaGto", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [MRS_Frecuentes] SET [FRE_IDCust] = ?, [FRE_CustNme] = ?, [FRE_AliasC] = ?"& _ 
                ", [FRE_BankISO] = ?, [FRE_CustAC] = ?, [FRE_CustPh] = ?, [FRE_ProvC] = ?, [FRE_E"& _ 
                "mpleado] = ?, [FRE_CtaCP] = ?, [FRE_CtaCG] = ?, [FRE_CtaGto] = ? WHERE (([FRE_ID"& _ 
                "] = ?) AND ((? = 1 AND [FRE_IDCust] IS NULL) OR ([FRE_IDCust] = ?)) AND ((? = 1 "& _ 
                "AND [FRE_CustNme] IS NULL) OR ([FRE_CustNme] = ?)) AND ((? = 1 AND [FRE_AliasC] "& _ 
                "IS NULL) OR ([FRE_AliasC] = ?)) AND ((? = 1 AND [FRE_BankISO] IS NULL) OR ([FRE_"& _ 
                "BankISO] = ?)) AND ((? = 1 AND [FRE_CustAC] IS NULL) OR ([FRE_CustAC] = ?)) AND "& _ 
                "((? = 1 AND [FRE_CustPh] IS NULL) OR ([FRE_CustPh] = ?)) AND ((? = 1 AND [FRE_Pr"& _ 
                "ovC] IS NULL) OR ([FRE_ProvC] = ?)) AND ((? = 1 AND [FRE_Empleado] IS NULL) OR ("& _ 
                "[FRE_Empleado] = ?)) AND ((? = 1 AND [FRE_CtaCP] IS NULL) OR ([FRE_CtaCP] = ?)) "& _ 
                "AND ((? = 1 AND [FRE_CtaCG] IS NULL) OR ([FRE_CtaCG] = ?)) AND ((? = 1 AND [FRE_"& _ 
                "CtaGto] IS NULL) OR ([FRE_CtaGto] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_IDCust", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_IDCust", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_CustNme", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CustNme", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_AliasC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_AliasC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_BankISO", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_BankISO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_CustAC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CustAC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_CustPh", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CustPh", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_ProvC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_ProvC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_Empleado", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_Empleado", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_CtaCP", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CtaCP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_CtaCG", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CtaCG", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FRE_CtaGto", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CtaGto", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_ID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_IDCust", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_IDCust", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_IDCust", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_IDCust", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_CustNme", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CustNme", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_CustNme", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CustNme", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_AliasC", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_AliasC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_AliasC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_AliasC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_BankISO", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_BankISO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_BankISO", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_BankISO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_CustAC", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CustAC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_CustAC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CustAC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_CustPh", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CustPh", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_CustPh", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CustPh", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_ProvC", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_ProvC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_ProvC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_ProvC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_Empleado", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_Empleado", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_Empleado", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_Empleado", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_CtaCP", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CtaCP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_CtaCP", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CtaCP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_CtaCG", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CtaCG", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_CtaCG", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CtaCG", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FRE_CtaGto", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CtaGto", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FRE_CtaGto", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FRE_CtaGto", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.PMovilD.My.MySettings.Default.PMDConnect
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT FRE_ID, FRE_IDCust, FRE_CustNme, FRE_AliasC, FRE_BankISO, FRE_CustAC, FRE_"& _ 
                "CustPh, FRE_ProvC, FRE_Empleado, FRE_CtaCP, FRE_CtaCG, FRE_CtaGto FROM MRS_Frecu"& _ 
                "entes"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PMovilDS.MRS_FrecuentesDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PMovilDS.MRS_FrecuentesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PMovilDS.MRS_FrecuentesDataTable = New PMovilDS.MRS_FrecuentesDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PMovilDS.MRS_FrecuentesDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PMovilDS) As Integer
            Return Me.Adapter.Update(dataSet, "MRS_Frecuentes")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FRE_ID As Integer, ByVal Original_FRE_IDCust As String, ByVal Original_FRE_CustNme As String, ByVal Original_FRE_AliasC As String, ByVal Original_FRE_BankISO As String, ByVal Original_FRE_CustAC As String, ByVal Original_FRE_CustPh As String, ByVal Original_FRE_ProvC As String, ByVal Original_FRE_Empleado As String, ByVal Original_FRE_CtaCP As String, ByVal Original_FRE_CtaCG As String, ByVal Original_FRE_CtaGto As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FRE_ID,Integer)
            If (Original_FRE_IDCust Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_IDCust")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_FRE_IDCust,String)
            End If
            If (Original_FRE_CustNme Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_CustNme")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_FRE_CustNme,String)
            End If
            If (Original_FRE_AliasC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_AliasC")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_FRE_AliasC,String)
            End If
            If (Original_FRE_BankISO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_BankISO")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_FRE_BankISO,String)
            End If
            If (Original_FRE_CustAC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_CustAC")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_FRE_CustAC,String)
            End If
            If (Original_FRE_CustPh Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_CustPh")
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_FRE_CustPh,String)
            End If
            If (Original_FRE_ProvC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_ProvC")
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_FRE_ProvC,String)
            End If
            If (Original_FRE_Empleado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_Empleado")
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_FRE_Empleado,String)
            End If
            If (Original_FRE_CtaCP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_CtaCP")
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_FRE_CtaCP,String)
            End If
            If (Original_FRE_CtaCG Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_CtaCG")
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_FRE_CtaCG,String)
            End If
            If (Original_FRE_CtaGto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_CtaGto")
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_FRE_CtaGto,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FRE_IDCust As String, ByVal FRE_CustNme As String, ByVal FRE_AliasC As String, ByVal FRE_BankISO As String, ByVal FRE_CustAC As String, ByVal FRE_CustPh As String, ByVal FRE_ProvC As String, ByVal FRE_Empleado As String, ByVal FRE_CtaCP As String, ByVal FRE_CtaCG As String, ByVal FRE_CtaGto As String) As Integer
            If (FRE_IDCust Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_IDCust")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(FRE_IDCust,String)
            End If
            If (FRE_CustNme Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_CustNme")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(FRE_CustNme,String)
            End If
            If (FRE_AliasC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_AliasC")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(FRE_AliasC,String)
            End If
            If (FRE_BankISO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_BankISO")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(FRE_BankISO,String)
            End If
            If (FRE_CustAC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_CustAC")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(FRE_CustAC,String)
            End If
            If (FRE_CustPh Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_CustPh")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(FRE_CustPh,String)
            End If
            If (FRE_ProvC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_ProvC")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(FRE_ProvC,String)
            End If
            If (FRE_Empleado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_Empleado")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(FRE_Empleado,String)
            End If
            If (FRE_CtaCP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_CtaCP")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(FRE_CtaCP,String)
            End If
            If (FRE_CtaCG Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_CtaCG")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(FRE_CtaCG,String)
            End If
            If (FRE_CtaGto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_CtaGto")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(FRE_CtaGto,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal FRE_IDCust As String,  _
                    ByVal FRE_CustNme As String,  _
                    ByVal FRE_AliasC As String,  _
                    ByVal FRE_BankISO As String,  _
                    ByVal FRE_CustAC As String,  _
                    ByVal FRE_CustPh As String,  _
                    ByVal FRE_ProvC As String,  _
                    ByVal FRE_Empleado As String,  _
                    ByVal FRE_CtaCP As String,  _
                    ByVal FRE_CtaCG As String,  _
                    ByVal FRE_CtaGto As String,  _
                    ByVal Original_FRE_ID As Integer,  _
                    ByVal Original_FRE_IDCust As String,  _
                    ByVal Original_FRE_CustNme As String,  _
                    ByVal Original_FRE_AliasC As String,  _
                    ByVal Original_FRE_BankISO As String,  _
                    ByVal Original_FRE_CustAC As String,  _
                    ByVal Original_FRE_CustPh As String,  _
                    ByVal Original_FRE_ProvC As String,  _
                    ByVal Original_FRE_Empleado As String,  _
                    ByVal Original_FRE_CtaCP As String,  _
                    ByVal Original_FRE_CtaCG As String,  _
                    ByVal Original_FRE_CtaGto As String) As Integer
            If (FRE_IDCust Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_IDCust")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FRE_IDCust,String)
            End If
            If (FRE_CustNme Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_CustNme")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(FRE_CustNme,String)
            End If
            If (FRE_AliasC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_AliasC")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(FRE_AliasC,String)
            End If
            If (FRE_BankISO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_BankISO")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(FRE_BankISO,String)
            End If
            If (FRE_CustAC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_CustAC")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(FRE_CustAC,String)
            End If
            If (FRE_CustPh Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_CustPh")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(FRE_CustPh,String)
            End If
            If (FRE_ProvC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_ProvC")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(FRE_ProvC,String)
            End If
            If (FRE_Empleado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_Empleado")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(FRE_Empleado,String)
            End If
            If (FRE_CtaCP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_CtaCP")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(FRE_CtaCP,String)
            End If
            If (FRE_CtaCG Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_CtaCG")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(FRE_CtaCG,String)
            End If
            If (FRE_CtaGto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FRE_CtaGto")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(FRE_CtaGto,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_FRE_ID,Integer)
            If (Original_FRE_IDCust Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_IDCust")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_FRE_IDCust,String)
            End If
            If (Original_FRE_CustNme Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_CustNme")
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_FRE_CustNme,String)
            End If
            If (Original_FRE_AliasC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_AliasC")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_FRE_AliasC,String)
            End If
            If (Original_FRE_BankISO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_BankISO")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_FRE_BankISO,String)
            End If
            If (Original_FRE_CustAC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_CustAC")
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_FRE_CustAC,String)
            End If
            If (Original_FRE_CustPh Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_CustPh")
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_FRE_CustPh,String)
            End If
            If (Original_FRE_ProvC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_ProvC")
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_FRE_ProvC,String)
            End If
            If (Original_FRE_Empleado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_Empleado")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_FRE_Empleado,String)
            End If
            If (Original_FRE_CtaCP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_CtaCP")
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_FRE_CtaCP,String)
            End If
            If (Original_FRE_CtaCG Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_CtaCG")
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_FRE_CtaCG,String)
            End If
            If (Original_FRE_CtaGto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FRE_CtaGto")
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_FRE_CtaGto,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MRS_StructTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MRS_Struct"
            tableMapping.ColumnMappings.Add("DBS_Id", "DBS_Id")
            tableMapping.ColumnMappings.Add("DBS_DataBN", "DBS_DataBN")
            tableMapping.ColumnMappings.Add("DBS_Field", "DBS_Field")
            tableMapping.ColumnMappings.Add("DBS_Type", "DBS_Type")
            tableMapping.ColumnMappings.Add("DBS_LenF", "DBS_LenF")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [MRS_Struct] WHERE (([DBS_Id] = ?) AND ((? = 1 AND [DBS_DataBN] IS NU"& _ 
                "LL) OR ([DBS_DataBN] = ?)) AND ((? = 1 AND [DBS_Field] IS NULL) OR ([DBS_Field] "& _ 
                "= ?)) AND ((? = 1 AND [DBS_Type] IS NULL) OR ([DBS_Type] = ?)) AND ((? = 1 AND ["& _ 
                "DBS_LenF] IS NULL) OR ([DBS_LenF] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DBS_Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DBS_DataBN", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_DataBN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DBS_DataBN", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_DataBN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DBS_Field", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_Field", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DBS_Field", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_Field", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DBS_Type", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DBS_Type", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DBS_LenF", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_LenF", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DBS_LenF", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_LenF", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [MRS_Struct] ([DBS_DataBN], [DBS_Field], [DBS_Type], [DBS_LenF]) VALU"& _ 
                "ES (?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DBS_DataBN", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_DataBN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DBS_Field", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_Field", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DBS_Type", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DBS_LenF", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_LenF", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [MRS_Struct] SET [DBS_DataBN] = ?, [DBS_Field] = ?, [DBS_Type] = ?, [DBS_L"& _ 
                "enF] = ? WHERE (([DBS_Id] = ?) AND ((? = 1 AND [DBS_DataBN] IS NULL) OR ([DBS_Da"& _ 
                "taBN] = ?)) AND ((? = 1 AND [DBS_Field] IS NULL) OR ([DBS_Field] = ?)) AND ((? ="& _ 
                " 1 AND [DBS_Type] IS NULL) OR ([DBS_Type] = ?)) AND ((? = 1 AND [DBS_LenF] IS NU"& _ 
                "LL) OR ([DBS_LenF] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DBS_DataBN", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_DataBN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DBS_Field", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_Field", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DBS_Type", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DBS_LenF", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_LenF", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DBS_Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DBS_DataBN", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_DataBN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DBS_DataBN", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_DataBN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DBS_Field", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_Field", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DBS_Field", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_Field", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DBS_Type", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DBS_Type", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DBS_LenF", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_LenF", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DBS_LenF", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DBS_LenF", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.PMovilD.My.MySettings.Default.PMDConnect
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DBS_Id, DBS_DataBN, DBS_Field, DBS_Type, DBS_LenF FROM MRS_Struct"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PMovilDS.MRS_StructDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PMovilDS.MRS_StructDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PMovilDS.MRS_StructDataTable = New PMovilDS.MRS_StructDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PMovilDS.MRS_StructDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PMovilDS) As Integer
            Return Me.Adapter.Update(dataSet, "MRS_Struct")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_DBS_Id As Integer, ByVal Original_DBS_DataBN As String, ByVal Original_DBS_Field As String, ByVal Original_DBS_Type As String, ByVal Original_DBS_LenF As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_DBS_Id,Integer)
            If (Original_DBS_DataBN Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DBS_DataBN")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_DBS_DataBN,String)
            End If
            If (Original_DBS_Field Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DBS_Field")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_DBS_Field,String)
            End If
            If (Original_DBS_Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DBS_Type")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_DBS_Type,String)
            End If
            If (Original_DBS_LenF Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DBS_LenF")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_DBS_LenF,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal DBS_DataBN As String, ByVal DBS_Field As String, ByVal DBS_Type As String, ByVal DBS_LenF As String) As Integer
            If (DBS_DataBN Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DBS_DataBN")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(DBS_DataBN,String)
            End If
            If (DBS_Field Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DBS_Field")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DBS_Field,String)
            End If
            If (DBS_Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DBS_Type")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DBS_Type,String)
            End If
            If (DBS_LenF Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DBS_LenF")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(DBS_LenF,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DBS_DataBN As String, ByVal DBS_Field As String, ByVal DBS_Type As String, ByVal DBS_LenF As String, ByVal Original_DBS_Id As Integer, ByVal Original_DBS_DataBN As String, ByVal Original_DBS_Field As String, ByVal Original_DBS_Type As String, ByVal Original_DBS_LenF As String) As Integer
            If (DBS_DataBN Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DBS_DataBN")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(DBS_DataBN,String)
            End If
            If (DBS_Field Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DBS_Field")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(DBS_Field,String)
            End If
            If (DBS_Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DBS_Type")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DBS_Type,String)
            End If
            If (DBS_LenF Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DBS_LenF")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DBS_LenF,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_DBS_Id,Integer)
            If (Original_DBS_DataBN Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DBS_DataBN")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_DBS_DataBN,String)
            End If
            If (Original_DBS_Field Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DBS_Field")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_DBS_Field,String)
            End If
            If (Original_DBS_Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DBS_Type")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_DBS_Type,String)
            End If
            If (Original_DBS_LenF Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DBS_LenF")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_DBS_LenF,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MRS_WorkMGTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MRS_WorkMG"
            tableMapping.ColumnMappings.Add("WRK_Fecha", "WRK_Fecha")
            tableMapping.ColumnMappings.Add("WRK_CodCta", "WRK_CodCta")
            tableMapping.ColumnMappings.Add("WRK_DesCta", "WRK_DesCta")
            tableMapping.ColumnMappings.Add("WRK_Compr", "WRK_Compr")
            tableMapping.ColumnMappings.Add("WRK_DesAs", "WRK_DesAs")
            tableMapping.ColumnMappings.Add("WRK_Debe", "WRK_Debe")
            tableMapping.ColumnMappings.Add("WRK_Haber", "WRK_Haber")
            tableMapping.ColumnMappings.Add("WRK_Saldo", "WRK_Saldo")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [MRS_WorkMG] ([WRK_Fecha], [WRK_CodCta], [WRK_DesCta], [WRK_Compr], ["& _ 
                "WRK_DesAs], [WRK_Debe], [WRK_Haber], [WRK_Saldo]) VALUES (?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ")"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("WRK_Fecha", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WRK_Fecha", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("WRK_CodCta", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WRK_CodCta", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("WRK_DesCta", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WRK_DesCta", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("WRK_Compr", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WRK_Compr", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("WRK_DesAs", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WRK_DesAs", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("WRK_Debe", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WRK_Debe", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("WRK_Haber", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WRK_Haber", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("WRK_Saldo", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WRK_Saldo", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.PMovilD.My.MySettings.Default.PMDConnect
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT WRK_Fecha, WRK_CodCta, WRK_DesCta, WRK_Compr, WRK_DesAs, WRK_Debe, WRK_Hab"& _ 
                "er, WRK_Saldo FROM MRS_WorkMG"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PMovilDS.MRS_WorkMGDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PMovilDS.MRS_WorkMGDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PMovilDS.MRS_WorkMGDataTable = New PMovilDS.MRS_WorkMGDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PMovilDS.MRS_WorkMGDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PMovilDS) As Integer
            Return Me.Adapter.Update(dataSet, "MRS_WorkMG")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal WRK_Fecha As Date, ByVal WRK_CodCta As String, ByVal WRK_DesCta As String, ByVal WRK_Compr As String, ByVal WRK_DesAs As String, ByVal WRK_Debe As Double, ByVal WRK_Haber As Double, ByVal WRK_Saldo As Double) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(WRK_Fecha,Date)
            If (WRK_CodCta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("WRK_CodCta")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(WRK_CodCta,String)
            End If
            If (WRK_DesCta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("WRK_DesCta")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(WRK_DesCta,String)
            End If
            If (WRK_Compr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("WRK_Compr")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(WRK_Compr,String)
            End If
            If (WRK_DesAs Is Nothing) Then
                Throw New Global.System.ArgumentNullException("WRK_DesAs")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(WRK_DesAs,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(WRK_Debe,Double)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(WRK_Haber,Double)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(WRK_Saldo,Double)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MRS_DynamicsETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MRS_DynamicsE"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("DYN_OrgName", "DYN_OrgName")
            tableMapping.ColumnMappings.Add("DYN_RifNumb", "DYN_RifNumb")
            tableMapping.ColumnMappings.Add("DYN_ACodMP", "DYN_ACodMP")
            tableMapping.ColumnMappings.Add("DYN_MobileP", "DYN_MobileP")
            tableMapping.ColumnMappings.Add("DYN_BankCod", "DYN_BankCod")
            tableMapping.ColumnMappings.Add("DYN_BankNme", "DYN_BankNme")
            tableMapping.ColumnMappings.Add("DYN_CodCtaCB", "DYN_CodCtaCB")
            tableMapping.ColumnMappings.Add("DYN_LteDPM", "DYN_LteDPM")
            tableMapping.ColumnMappings.Add("DYN_PagosM", "DYN_PagosM")
            tableMapping.ColumnMappings.Add("DYN_RestoPM", "DYN_RestoPM")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [MRS_DynamicsE] WHERE (([Id] = ?) AND ((? = 1 AND [DYN_OrgName] IS NU"& _ 
                "LL) OR ([DYN_OrgName] = ?)) AND ((? = 1 AND [DYN_RifNumb] IS NULL) OR ([DYN_RifN"& _ 
                "umb] = ?)) AND ((? = 1 AND [DYN_ACodMP] IS NULL) OR ([DYN_ACodMP] = ?)) AND ((? "& _ 
                "= 1 AND [DYN_MobileP] IS NULL) OR ([DYN_MobileP] = ?)) AND ((? = 1 AND [DYN_Bank"& _ 
                "Cod] IS NULL) OR ([DYN_BankCod] = ?)) AND ((? = 1 AND [DYN_BankNme] IS NULL) OR "& _ 
                "([DYN_BankNme] = ?)) AND ((? = 1 AND [DYN_CodCtaCB] IS NULL) OR ([DYN_CodCtaCB] "& _ 
                "= ?)) AND ((? = 1 AND [DYN_LteDPM] IS NULL) OR ([DYN_LteDPM] = ?)) AND ((? = 1 A"& _ 
                "ND [DYN_PagosM] IS NULL) OR ([DYN_PagosM] = ?)) AND ((? = 1 AND [DYN_RestoPM] IS"& _ 
                " NULL) OR ([DYN_RestoPM] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DYN_OrgName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_OrgName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DYN_OrgName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_OrgName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DYN_RifNumb", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_RifNumb", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DYN_RifNumb", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_RifNumb", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DYN_ACodMP", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_ACodMP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DYN_ACodMP", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_ACodMP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DYN_MobileP", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_MobileP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DYN_MobileP", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_MobileP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DYN_BankCod", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_BankCod", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DYN_BankCod", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_BankCod", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DYN_BankNme", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_BankNme", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DYN_BankNme", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_BankNme", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DYN_CodCtaCB", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_CodCtaCB", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DYN_CodCtaCB", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_CodCtaCB", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DYN_LteDPM", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_LteDPM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DYN_LteDPM", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_LteDPM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DYN_PagosM", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_PagosM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DYN_PagosM", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_PagosM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DYN_RestoPM", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_RestoPM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DYN_RestoPM", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_RestoPM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [MRS_DynamicsE] ([DYN_OrgName], [DYN_RifNumb], [DYN_ACodMP], [DYN_Mob"& _ 
                "ileP], [DYN_BankCod], [DYN_BankNme], [DYN_CodCtaCB], [DYN_LteDPM], [DYN_PagosM],"& _ 
                " [DYN_RestoPM]) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DYN_OrgName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_OrgName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DYN_RifNumb", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_RifNumb", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DYN_ACodMP", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_ACodMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DYN_MobileP", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_MobileP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DYN_BankCod", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_BankCod", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DYN_BankNme", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_BankNme", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DYN_CodCtaCB", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_CodCtaCB", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DYN_LteDPM", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_LteDPM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DYN_PagosM", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_PagosM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DYN_RestoPM", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_RestoPM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [MRS_DynamicsE] SET [DYN_OrgName] = ?, [DYN_RifNumb] = ?, [DYN_ACodMP] = ?"& _ 
                ", [DYN_MobileP] = ?, [DYN_BankCod] = ?, [DYN_BankNme] = ?, [DYN_CodCtaCB] = ?, ["& _ 
                "DYN_LteDPM] = ?, [DYN_PagosM] = ?, [DYN_RestoPM] = ? WHERE (([Id] = ?) AND ((? ="& _ 
                " 1 AND [DYN_OrgName] IS NULL) OR ([DYN_OrgName] = ?)) AND ((? = 1 AND [DYN_RifNu"& _ 
                "mb] IS NULL) OR ([DYN_RifNumb] = ?)) AND ((? = 1 AND [DYN_ACodMP] IS NULL) OR (["& _ 
                "DYN_ACodMP] = ?)) AND ((? = 1 AND [DYN_MobileP] IS NULL) OR ([DYN_MobileP] = ?))"& _ 
                " AND ((? = 1 AND [DYN_BankCod] IS NULL) OR ([DYN_BankCod] = ?)) AND ((? = 1 AND "& _ 
                "[DYN_BankNme] IS NULL) OR ([DYN_BankNme] = ?)) AND ((? = 1 AND [DYN_CodCtaCB] IS"& _ 
                " NULL) OR ([DYN_CodCtaCB] = ?)) AND ((? = 1 AND [DYN_LteDPM] IS NULL) OR ([DYN_L"& _ 
                "teDPM] = ?)) AND ((? = 1 AND [DYN_PagosM] IS NULL) OR ([DYN_PagosM] = ?)) AND (("& _ 
                "? = 1 AND [DYN_RestoPM] IS NULL) OR ([DYN_RestoPM] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DYN_OrgName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_OrgName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DYN_RifNumb", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_RifNumb", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DYN_ACodMP", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_ACodMP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DYN_MobileP", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_MobileP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DYN_BankCod", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_BankCod", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DYN_BankNme", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_BankNme", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DYN_CodCtaCB", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_CodCtaCB", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DYN_LteDPM", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_LteDPM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DYN_PagosM", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_PagosM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DYN_RestoPM", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_RestoPM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DYN_OrgName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_OrgName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DYN_OrgName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_OrgName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DYN_RifNumb", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_RifNumb", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DYN_RifNumb", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_RifNumb", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DYN_ACodMP", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_ACodMP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DYN_ACodMP", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_ACodMP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DYN_MobileP", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_MobileP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DYN_MobileP", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_MobileP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DYN_BankCod", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_BankCod", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DYN_BankCod", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_BankCod", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DYN_BankNme", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_BankNme", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DYN_BankNme", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_BankNme", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DYN_CodCtaCB", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_CodCtaCB", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DYN_CodCtaCB", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_CodCtaCB", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DYN_LteDPM", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_LteDPM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DYN_LteDPM", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_LteDPM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DYN_PagosM", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_PagosM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DYN_PagosM", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_PagosM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DYN_RestoPM", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_RestoPM", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DYN_RestoPM", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DYN_RestoPM", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.PMovilD.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, DYN_OrgName, DYN_RifNumb, DYN_ACodMP, DYN_MobileP, DYN_BankCod, DYN_Ba"& _ 
                "nkNme, DYN_CodCtaCB, DYN_LteDPM, DYN_PagosM, DYN_RestoPM FROM MRS_DynamicsE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PMovilDS.MRS_DynamicsEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PMovilDS.MRS_DynamicsEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PMovilDS.MRS_DynamicsEDataTable = New PMovilDS.MRS_DynamicsEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PMovilDS.MRS_DynamicsEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PMovilDS) As Integer
            Return Me.Adapter.Update(dataSet, "MRS_DynamicsE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Id As Integer, ByVal Original_DYN_OrgName As String, ByVal Original_DYN_RifNumb As String, ByVal Original_DYN_ACodMP As String, ByVal Original_DYN_MobileP As String, ByVal Original_DYN_BankCod As String, ByVal Original_DYN_BankNme As String, ByVal Original_DYN_CodCtaCB As String, ByVal Original_DYN_LteDPM As Double, ByVal Original_DYN_PagosM As Double, ByVal Original_DYN_RestoPM As Double) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Id,Integer)
            If (Original_DYN_OrgName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DYN_OrgName")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_DYN_OrgName,String)
            End If
            If (Original_DYN_RifNumb Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DYN_RifNumb")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_DYN_RifNumb,String)
            End If
            If (Original_DYN_ACodMP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DYN_ACodMP")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_DYN_ACodMP,String)
            End If
            If (Original_DYN_MobileP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DYN_MobileP")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_DYN_MobileP,String)
            End If
            If (Original_DYN_BankCod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DYN_BankCod")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_DYN_BankCod,String)
            End If
            If (Original_DYN_BankNme Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DYN_BankNme")
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_DYN_BankNme,String)
            End If
            If (Original_DYN_CodCtaCB Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DYN_CodCtaCB")
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_DYN_CodCtaCB,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_DYN_LteDPM,Double)
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_DYN_PagosM,Double)
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_DYN_RestoPM,Double)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal DYN_OrgName As String, ByVal DYN_RifNumb As String, ByVal DYN_ACodMP As String, ByVal DYN_MobileP As String, ByVal DYN_BankCod As String, ByVal DYN_BankNme As String, ByVal DYN_CodCtaCB As String, ByVal DYN_LteDPM As Double, ByVal DYN_PagosM As Double, ByVal DYN_RestoPM As Double) As Integer
            If (DYN_OrgName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DYN_OrgName")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(DYN_OrgName,String)
            End If
            If (DYN_RifNumb Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DYN_RifNumb")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DYN_RifNumb,String)
            End If
            If (DYN_ACodMP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DYN_ACodMP")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DYN_ACodMP,String)
            End If
            If (DYN_MobileP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DYN_MobileP")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(DYN_MobileP,String)
            End If
            If (DYN_BankCod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DYN_BankCod")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(DYN_BankCod,String)
            End If
            If (DYN_BankNme Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DYN_BankNme")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DYN_BankNme,String)
            End If
            If (DYN_CodCtaCB Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DYN_CodCtaCB")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(DYN_CodCtaCB,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(DYN_LteDPM,Double)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(DYN_PagosM,Double)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(DYN_RestoPM,Double)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal DYN_OrgName As String,  _
                    ByVal DYN_RifNumb As String,  _
                    ByVal DYN_ACodMP As String,  _
                    ByVal DYN_MobileP As String,  _
                    ByVal DYN_BankCod As String,  _
                    ByVal DYN_BankNme As String,  _
                    ByVal DYN_CodCtaCB As String,  _
                    ByVal DYN_LteDPM As Double,  _
                    ByVal DYN_PagosM As Double,  _
                    ByVal DYN_RestoPM As Double,  _
                    ByVal Original_Id As Integer,  _
                    ByVal Original_DYN_OrgName As String,  _
                    ByVal Original_DYN_RifNumb As String,  _
                    ByVal Original_DYN_ACodMP As String,  _
                    ByVal Original_DYN_MobileP As String,  _
                    ByVal Original_DYN_BankCod As String,  _
                    ByVal Original_DYN_BankNme As String,  _
                    ByVal Original_DYN_CodCtaCB As String,  _
                    ByVal Original_DYN_LteDPM As Double,  _
                    ByVal Original_DYN_PagosM As Double,  _
                    ByVal Original_DYN_RestoPM As Double) As Integer
            If (DYN_OrgName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DYN_OrgName")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(DYN_OrgName,String)
            End If
            If (DYN_RifNumb Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DYN_RifNumb")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(DYN_RifNumb,String)
            End If
            If (DYN_ACodMP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DYN_ACodMP")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DYN_ACodMP,String)
            End If
            If (DYN_MobileP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DYN_MobileP")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DYN_MobileP,String)
            End If
            If (DYN_BankCod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DYN_BankCod")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(DYN_BankCod,String)
            End If
            If (DYN_BankNme Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DYN_BankNme")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(DYN_BankNme,String)
            End If
            If (DYN_CodCtaCB Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DYN_CodCtaCB")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(DYN_CodCtaCB,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(DYN_LteDPM,Double)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(DYN_PagosM,Double)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(DYN_RestoPM,Double)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_Id,Integer)
            If (Original_DYN_OrgName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DYN_OrgName")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_DYN_OrgName,String)
            End If
            If (Original_DYN_RifNumb Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DYN_RifNumb")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_DYN_RifNumb,String)
            End If
            If (Original_DYN_ACodMP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DYN_ACodMP")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_DYN_ACodMP,String)
            End If
            If (Original_DYN_MobileP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DYN_MobileP")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_DYN_MobileP,String)
            End If
            If (Original_DYN_BankCod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DYN_BankCod")
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_DYN_BankCod,String)
            End If
            If (Original_DYN_BankNme Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DYN_BankNme")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_DYN_BankNme,String)
            End If
            If (Original_DYN_CodCtaCB Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DYN_CodCtaCB")
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_DYN_CodCtaCB,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_DYN_LteDPM,Double)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_DYN_PagosM,Double)
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_DYN_RestoPM,Double)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MRS_CGPMovTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MRS_CGPMov"
            tableMapping.ColumnMappings.Add("RPM_ID", "RPM_ID")
            tableMapping.ColumnMappings.Add("RPM_TipoTran", "RPM_TipoTran")
            tableMapping.ColumnMappings.Add("RPM_FechaT", "RPM_FechaT")
            tableMapping.ColumnMappings.Add("RPM_Benefit", "RPM_Benefit")
            tableMapping.ColumnMappings.Add("RPM_CIBenef", "RPM_CIBenef")
            tableMapping.ColumnMappings.Add("RPM_NMovB", "RPM_NMovB")
            tableMapping.ColumnMappings.Add("RPM_ISOBankB", "RPM_ISOBankB")
            tableMapping.ColumnMappings.Add("RPM_CiaNmeD", "RPM_CiaNmeD")
            tableMapping.ColumnMappings.Add("RPM_ISOBankD", "RPM_ISOBankD")
            tableMapping.ColumnMappings.Add("RPM_RIFCiaD", "RPM_RIFCiaD")
            tableMapping.ColumnMappings.Add("RPM_MovilD", "RPM_MovilD")
            tableMapping.ColumnMappings.Add("RPM_MtoTr", "RPM_MtoTr")
            tableMapping.ColumnMappings.Add("RPM_Factura", "RPM_Factura")
            tableMapping.ColumnMappings.Add("RPM_NRefB", "RPM_NRefB")
            tableMapping.ColumnMappings.Add("RPM_CtaCble", "RPM_CtaCble")
            tableMapping.ColumnMappings.Add("RPM_MayorA", "RPM_MayorA")
            tableMapping.ColumnMappings.Add("RPM_DescAs", "RPM_DescAs")
            tableMapping.ColumnMappings.Add("RPM_NAsiento", "RPM_NAsiento")
            tableMapping.ColumnMappings.Add("RPM_TipoAs", "RPM_TipoAs")
            tableMapping.ColumnMappings.Add("RPM_UIDpm", "RPM_UIDpm")
            tableMapping.ColumnMappings.Add("RPM_FecReg", "RPM_FecReg")
            tableMapping.ColumnMappings.Add("RPM_HraReg", "RPM_HraReg")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [MRS_CGPMov] WHERE (([RPM_ID] = ?) AND ((? = 1 AND [RPM_TipoTran] IS "& _ 
                "NULL) OR ([RPM_TipoTran] = ?)) AND ((? = 1 AND [RPM_FechaT] IS NULL) OR ([RPM_Fe"& _ 
                "chaT] = ?)) AND ((? = 1 AND [RPM_Benefit] IS NULL) OR ([RPM_Benefit] = ?)) AND ("& _ 
                "(? = 1 AND [RPM_CIBenef] IS NULL) OR ([RPM_CIBenef] = ?)) AND ((? = 1 AND [RPM_N"& _ 
                "MovB] IS NULL) OR ([RPM_NMovB] = ?)) AND ((? = 1 AND [RPM_ISOBankB] IS NULL) OR "& _ 
                "([RPM_ISOBankB] = ?)) AND ((? = 1 AND [RPM_CiaNmeD] IS NULL) OR ([RPM_CiaNmeD] ="& _ 
                " ?)) AND ((? = 1 AND [RPM_ISOBankD] IS NULL) OR ([RPM_ISOBankD] = ?)) AND ((? = "& _ 
                "1 AND [RPM_RIFCiaD] IS NULL) OR ([RPM_RIFCiaD] = ?)) AND ((? = 1 AND [RPM_MovilD"& _ 
                "] IS NULL) OR ([RPM_MovilD] = ?)) AND ((? = 1 AND [RPM_MtoTr] IS NULL) OR ([RPM_"& _ 
                "MtoTr] = ?)) AND ((? = 1 AND [RPM_Factura] IS NULL) OR ([RPM_Factura] = ?)) AND "& _ 
                "((? = 1 AND [RPM_NRefB] IS NULL) OR ([RPM_NRefB] = ?)) AND ((? = 1 AND [RPM_CtaC"& _ 
                "ble] IS NULL) OR ([RPM_CtaCble] = ?)) AND ((? = 1 AND [RPM_MayorA] IS NULL) OR ("& _ 
                "[RPM_MayorA] = ?)) AND ((? = 1 AND [RPM_DescAs] IS NULL) OR ([RPM_DescAs] = ?)) "& _ 
                "AND ((? = 1 AND [RPM_NAsiento] IS NULL) OR ([RPM_NAsiento] = ?)) AND ((? = 1 AND"& _ 
                " [RPM_TipoAs] IS NULL) OR ([RPM_TipoAs] = ?)) AND ((? = 1 AND [RPM_UIDpm] IS NUL"& _ 
                "L) OR ([RPM_UIDpm] = ?)) AND ((? = 1 AND [RPM_FecReg] IS NULL) OR ([RPM_FecReg] "& _ 
                "= ?)) AND ((? = 1 AND [RPM_HraReg] IS NULL) OR ([RPM_HraReg] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_ID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_TipoTran", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_TipoTran", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_TipoTran", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_TipoTran", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_FechaT", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_FechaT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_FechaT", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_FechaT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_Benefit", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_Benefit", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_Benefit", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_Benefit", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_CIBenef", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_CIBenef", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_CIBenef", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_CIBenef", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_NMovB", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_NMovB", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_NMovB", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_NMovB", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_ISOBankB", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_ISOBankB", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_ISOBankB", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_ISOBankB", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_CiaNmeD", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_CiaNmeD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_CiaNmeD", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_CiaNmeD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_ISOBankD", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_ISOBankD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_ISOBankD", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_ISOBankD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_RIFCiaD", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_RIFCiaD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_RIFCiaD", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_RIFCiaD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_MovilD", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_MovilD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_MovilD", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_MovilD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_MtoTr", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_MtoTr", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_MtoTr", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_MtoTr", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_Factura", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_Factura", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_Factura", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_Factura", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_NRefB", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_NRefB", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_NRefB", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_NRefB", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_CtaCble", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_CtaCble", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_CtaCble", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_CtaCble", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_MayorA", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_MayorA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_MayorA", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_MayorA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_DescAs", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_DescAs", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_DescAs", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_DescAs", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_NAsiento", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_NAsiento", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_NAsiento", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_NAsiento", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_TipoAs", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_TipoAs", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_TipoAs", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_TipoAs", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_UIDpm", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_UIDpm", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_UIDpm", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_UIDpm", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_FecReg", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_FecReg", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_FecReg", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_FecReg", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_HraReg", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_HraReg", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_HraReg", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_HraReg", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [MRS_CGPMov] ([RPM_TipoTran], [RPM_FechaT], [RPM_Benefit], [RPM_CIBen"& _ 
                "ef], [RPM_NMovB], [RPM_ISOBankB], [RPM_CiaNmeD], [RPM_ISOBankD], [RPM_RIFCiaD], "& _ 
                "[RPM_MovilD], [RPM_MtoTr], [RPM_Factura], [RPM_NRefB], [RPM_CtaCble], [RPM_Mayor"& _ 
                "A], [RPM_DescAs], [RPM_NAsiento], [RPM_TipoAs], [RPM_UIDpm], [RPM_FecReg], [RPM_"& _ 
                "HraReg]) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_TipoTran", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_TipoTran", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_FechaT", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_FechaT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_Benefit", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_Benefit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_CIBenef", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_CIBenef", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_NMovB", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_NMovB", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_ISOBankB", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_ISOBankB", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_CiaNmeD", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_CiaNmeD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_ISOBankD", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_ISOBankD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_RIFCiaD", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_RIFCiaD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_MovilD", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_MovilD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_MtoTr", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_MtoTr", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_Factura", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_Factura", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_NRefB", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_NRefB", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_CtaCble", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_CtaCble", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_MayorA", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_MayorA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_DescAs", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_DescAs", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_NAsiento", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_NAsiento", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_TipoAs", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_TipoAs", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_UIDpm", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_UIDpm", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_FecReg", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_FecReg", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_HraReg", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_HraReg", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [MRS_CGPMov] SET [RPM_TipoTran] = ?, [RPM_FechaT] = ?, [RPM_Benefit] = ?, "& _ 
                "[RPM_CIBenef] = ?, [RPM_NMovB] = ?, [RPM_ISOBankB] = ?, [RPM_CiaNmeD] = ?, [RPM_"& _ 
                "ISOBankD] = ?, [RPM_RIFCiaD] = ?, [RPM_MovilD] = ?, [RPM_MtoTr] = ?, [RPM_Factur"& _ 
                "a] = ?, [RPM_NRefB] = ?, [RPM_CtaCble] = ?, [RPM_MayorA] = ?, [RPM_DescAs] = ?, "& _ 
                "[RPM_NAsiento] = ?, [RPM_TipoAs] = ?, [RPM_UIDpm] = ?, [RPM_FecReg] = ?, [RPM_Hr"& _ 
                "aReg] = ? WHERE (([RPM_ID] = ?) AND ((? = 1 AND [RPM_TipoTran] IS NULL) OR ([RPM"& _ 
                "_TipoTran] = ?)) AND ((? = 1 AND [RPM_FechaT] IS NULL) OR ([RPM_FechaT] = ?)) AN"& _ 
                "D ((? = 1 AND [RPM_Benefit] IS NULL) OR ([RPM_Benefit] = ?)) AND ((? = 1 AND [RP"& _ 
                "M_CIBenef] IS NULL) OR ([RPM_CIBenef] = ?)) AND ((? = 1 AND [RPM_NMovB] IS NULL)"& _ 
                " OR ([RPM_NMovB] = ?)) AND ((? = 1 AND [RPM_ISOBankB] IS NULL) OR ([RPM_ISOBankB"& _ 
                "] = ?)) AND ((? = 1 AND [RPM_CiaNmeD] IS NULL) OR ([RPM_CiaNmeD] = ?)) AND ((? ="& _ 
                " 1 AND [RPM_ISOBankD] IS NULL) OR ([RPM_ISOBankD] = ?)) AND ((? = 1 AND [RPM_RIF"& _ 
                "CiaD] IS NULL) OR ([RPM_RIFCiaD] = ?)) AND ((? = 1 AND [RPM_MovilD] IS NULL) OR "& _ 
                "([RPM_MovilD] = ?)) AND ((? = 1 AND [RPM_MtoTr] IS NULL) OR ([RPM_MtoTr] = ?)) A"& _ 
                "ND ((? = 1 AND [RPM_Factura] IS NULL) OR ([RPM_Factura] = ?)) AND ((? = 1 AND [R"& _ 
                "PM_NRefB] IS NULL) OR ([RPM_NRefB] = ?)) AND ((? = 1 AND [RPM_CtaCble] IS NULL) "& _ 
                "OR ([RPM_CtaCble] = ?)) AND ((? = 1 AND [RPM_MayorA] IS NULL) OR ([RPM_MayorA] ="& _ 
                " ?)) AND ((? = 1 AND [RPM_DescAs] IS NULL) OR ([RPM_DescAs] = ?)) AND ((? = 1 AN"& _ 
                "D [RPM_NAsiento] IS NULL) OR ([RPM_NAsiento] = ?)) AND ((? = 1 AND [RPM_TipoAs] "& _ 
                "IS NULL) OR ([RPM_TipoAs] = ?)) AND ((? = 1 AND [RPM_UIDpm] IS NULL) OR ([RPM_UI"& _ 
                "Dpm] = ?)) AND ((? = 1 AND [RPM_FecReg] IS NULL) OR ([RPM_FecReg] = ?)) AND ((? "& _ 
                "= 1 AND [RPM_HraReg] IS NULL) OR ([RPM_HraReg] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_TipoTran", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_TipoTran", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_FechaT", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_FechaT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_Benefit", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_Benefit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_CIBenef", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_CIBenef", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_NMovB", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_NMovB", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_ISOBankB", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_ISOBankB", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_CiaNmeD", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_CiaNmeD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_ISOBankD", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_ISOBankD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_RIFCiaD", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_RIFCiaD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_MovilD", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_MovilD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_MtoTr", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_MtoTr", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_Factura", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_Factura", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_NRefB", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_NRefB", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_CtaCble", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_CtaCble", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_MayorA", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_MayorA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_DescAs", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_DescAs", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_NAsiento", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_NAsiento", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_TipoAs", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_TipoAs", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_UIDpm", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_UIDpm", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_FecReg", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_FecReg", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RPM_HraReg", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_HraReg", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_ID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_TipoTran", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_TipoTran", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_TipoTran", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_TipoTran", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_FechaT", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_FechaT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_FechaT", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_FechaT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_Benefit", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_Benefit", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_Benefit", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_Benefit", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_CIBenef", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_CIBenef", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_CIBenef", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_CIBenef", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_NMovB", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_NMovB", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_NMovB", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_NMovB", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_ISOBankB", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_ISOBankB", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_ISOBankB", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_ISOBankB", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_CiaNmeD", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_CiaNmeD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_CiaNmeD", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_CiaNmeD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_ISOBankD", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_ISOBankD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_ISOBankD", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_ISOBankD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_RIFCiaD", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_RIFCiaD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_RIFCiaD", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_RIFCiaD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_MovilD", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_MovilD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_MovilD", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_MovilD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_MtoTr", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_MtoTr", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_MtoTr", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_MtoTr", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_Factura", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_Factura", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_Factura", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_Factura", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_NRefB", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_NRefB", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_NRefB", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_NRefB", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_CtaCble", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_CtaCble", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_CtaCble", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_CtaCble", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_MayorA", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_MayorA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_MayorA", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_MayorA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_DescAs", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_DescAs", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_DescAs", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_DescAs", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_NAsiento", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_NAsiento", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_NAsiento", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_NAsiento", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_TipoAs", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_TipoAs", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_TipoAs", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_TipoAs", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_UIDpm", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_UIDpm", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_UIDpm", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_UIDpm", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_FecReg", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_FecReg", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_FecReg", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_FecReg", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RPM_HraReg", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_HraReg", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RPM_HraReg", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RPM_HraReg", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.PMovilD.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT RPM_ID, RPM_TipoTran, RPM_FechaT, RPM_Benefit, RPM_CIBenef, RPM_NMovB, RPM"& _ 
                "_ISOBankB, RPM_CiaNmeD, RPM_ISOBankD, RPM_RIFCiaD, RPM_MovilD, RPM_MtoTr, RPM_Fa"& _ 
                "ctura, RPM_NRefB, RPM_CtaCble, RPM_MayorA, RPM_DescAs, RPM_NAsiento, RPM_TipoAs,"& _ 
                " RPM_UIDpm, RPM_FecReg, RPM_HraReg FROM MRS_CGPMov"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PMovilDS.MRS_CGPMovDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PMovilDS.MRS_CGPMovDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PMovilDS.MRS_CGPMovDataTable = New PMovilDS.MRS_CGPMovDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PMovilDS.MRS_CGPMovDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PMovilDS) As Integer
            Return Me.Adapter.Update(dataSet, "MRS_CGPMov")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_RPM_ID As Integer,  _
                    ByVal Original_RPM_TipoTran As String,  _
                    ByVal Original_RPM_FechaT As Date,  _
                    ByVal Original_RPM_Benefit As String,  _
                    ByVal Original_RPM_CIBenef As String,  _
                    ByVal Original_RPM_NMovB As String,  _
                    ByVal Original_RPM_ISOBankB As String,  _
                    ByVal Original_RPM_CiaNmeD As String,  _
                    ByVal Original_RPM_ISOBankD As String,  _
                    ByVal Original_RPM_RIFCiaD As String,  _
                    ByVal Original_RPM_MovilD As String,  _
                    ByVal Original_RPM_MtoTr As Double,  _
                    ByVal Original_RPM_Factura As String,  _
                    ByVal Original_RPM_NRefB As String,  _
                    ByVal Original_RPM_CtaCble As String,  _
                    ByVal Original_RPM_MayorA As String,  _
                    ByVal Original_RPM_DescAs As String,  _
                    ByVal Original_RPM_NAsiento As String,  _
                    ByVal Original_RPM_TipoAs As String,  _
                    ByVal Original_RPM_UIDpm As String,  _
                    ByVal Original_RPM_FecReg As Date,  _
                    ByVal Original_RPM_HraReg As Date) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_RPM_ID,Integer)
            If (Original_RPM_TipoTran Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_TipoTran")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_RPM_TipoTran,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_RPM_FechaT,Date)
            If (Original_RPM_Benefit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_Benefit")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_RPM_Benefit,String)
            End If
            If (Original_RPM_CIBenef Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_CIBenef")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_RPM_CIBenef,String)
            End If
            If (Original_RPM_NMovB Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_NMovB")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_RPM_NMovB,String)
            End If
            If (Original_RPM_ISOBankB Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_ISOBankB")
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_RPM_ISOBankB,String)
            End If
            If (Original_RPM_CiaNmeD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_CiaNmeD")
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_RPM_CiaNmeD,String)
            End If
            If (Original_RPM_ISOBankD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_ISOBankD")
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_RPM_ISOBankD,String)
            End If
            If (Original_RPM_RIFCiaD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_RIFCiaD")
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_RPM_RIFCiaD,String)
            End If
            If (Original_RPM_MovilD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_MovilD")
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_RPM_MovilD,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_RPM_MtoTr,Double)
            If (Original_RPM_Factura Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_Factura")
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_RPM_Factura,String)
            End If
            If (Original_RPM_NRefB Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_NRefB")
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_RPM_NRefB,String)
            End If
            If (Original_RPM_CtaCble Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_CtaCble")
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_RPM_CtaCble,String)
            End If
            If (Original_RPM_MayorA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_MayorA")
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_RPM_MayorA,String)
            End If
            If (Original_RPM_DescAs Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_DescAs")
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_RPM_DescAs,String)
            End If
            If (Original_RPM_NAsiento Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_NAsiento")
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_RPM_NAsiento,String)
            End If
            If (Original_RPM_TipoAs Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_TipoAs")
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_RPM_TipoAs,String)
            End If
            If (Original_RPM_UIDpm Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_UIDpm")
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_RPM_UIDpm,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_RPM_FecReg,Date)
            Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_RPM_HraReg,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal RPM_TipoTran As String,  _
                    ByVal RPM_FechaT As Date,  _
                    ByVal RPM_Benefit As String,  _
                    ByVal RPM_CIBenef As String,  _
                    ByVal RPM_NMovB As String,  _
                    ByVal RPM_ISOBankB As String,  _
                    ByVal RPM_CiaNmeD As String,  _
                    ByVal RPM_ISOBankD As String,  _
                    ByVal RPM_RIFCiaD As String,  _
                    ByVal RPM_MovilD As String,  _
                    ByVal RPM_MtoTr As Double,  _
                    ByVal RPM_Factura As String,  _
                    ByVal RPM_NRefB As String,  _
                    ByVal RPM_CtaCble As String,  _
                    ByVal RPM_MayorA As String,  _
                    ByVal RPM_DescAs As String,  _
                    ByVal RPM_NAsiento As String,  _
                    ByVal RPM_TipoAs As String,  _
                    ByVal RPM_UIDpm As String,  _
                    ByVal RPM_FecReg As Date,  _
                    ByVal RPM_HraReg As Date) As Integer
            If (RPM_TipoTran Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_TipoTran")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(RPM_TipoTran,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(RPM_FechaT,Date)
            If (RPM_Benefit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_Benefit")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(RPM_Benefit,String)
            End If
            If (RPM_CIBenef Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_CIBenef")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(RPM_CIBenef,String)
            End If
            If (RPM_NMovB Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_NMovB")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(RPM_NMovB,String)
            End If
            If (RPM_ISOBankB Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_ISOBankB")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(RPM_ISOBankB,String)
            End If
            If (RPM_CiaNmeD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_CiaNmeD")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(RPM_CiaNmeD,String)
            End If
            If (RPM_ISOBankD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_ISOBankD")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(RPM_ISOBankD,String)
            End If
            If (RPM_RIFCiaD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_RIFCiaD")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(RPM_RIFCiaD,String)
            End If
            If (RPM_MovilD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_MovilD")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(RPM_MovilD,String)
            End If
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(RPM_MtoTr,Double)
            If (RPM_Factura Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_Factura")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(RPM_Factura,String)
            End If
            If (RPM_NRefB Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_NRefB")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(RPM_NRefB,String)
            End If
            If (RPM_CtaCble Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_CtaCble")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(RPM_CtaCble,String)
            End If
            If (RPM_MayorA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_MayorA")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(RPM_MayorA,String)
            End If
            If (RPM_DescAs Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_DescAs")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(RPM_DescAs,String)
            End If
            If (RPM_NAsiento Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_NAsiento")
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(RPM_NAsiento,String)
            End If
            If (RPM_TipoAs Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_TipoAs")
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(RPM_TipoAs,String)
            End If
            If (RPM_UIDpm Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_UIDpm")
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(RPM_UIDpm,String)
            End If
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(RPM_FecReg,Date)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(RPM_HraReg,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal RPM_TipoTran As String,  _
                    ByVal RPM_FechaT As Date,  _
                    ByVal RPM_Benefit As String,  _
                    ByVal RPM_CIBenef As String,  _
                    ByVal RPM_NMovB As String,  _
                    ByVal RPM_ISOBankB As String,  _
                    ByVal RPM_CiaNmeD As String,  _
                    ByVal RPM_ISOBankD As String,  _
                    ByVal RPM_RIFCiaD As String,  _
                    ByVal RPM_MovilD As String,  _
                    ByVal RPM_MtoTr As Double,  _
                    ByVal RPM_Factura As String,  _
                    ByVal RPM_NRefB As String,  _
                    ByVal RPM_CtaCble As String,  _
                    ByVal RPM_MayorA As String,  _
                    ByVal RPM_DescAs As String,  _
                    ByVal RPM_NAsiento As String,  _
                    ByVal RPM_TipoAs As String,  _
                    ByVal RPM_UIDpm As String,  _
                    ByVal RPM_FecReg As Date,  _
                    ByVal RPM_HraReg As Date,  _
                    ByVal Original_RPM_ID As Integer,  _
                    ByVal Original_RPM_TipoTran As String,  _
                    ByVal Original_RPM_FechaT As Date,  _
                    ByVal Original_RPM_Benefit As String,  _
                    ByVal Original_RPM_CIBenef As String,  _
                    ByVal Original_RPM_NMovB As String,  _
                    ByVal Original_RPM_ISOBankB As String,  _
                    ByVal Original_RPM_CiaNmeD As String,  _
                    ByVal Original_RPM_ISOBankD As String,  _
                    ByVal Original_RPM_RIFCiaD As String,  _
                    ByVal Original_RPM_MovilD As String,  _
                    ByVal Original_RPM_MtoTr As Double,  _
                    ByVal Original_RPM_Factura As String,  _
                    ByVal Original_RPM_NRefB As String,  _
                    ByVal Original_RPM_CtaCble As String,  _
                    ByVal Original_RPM_MayorA As String,  _
                    ByVal Original_RPM_DescAs As String,  _
                    ByVal Original_RPM_NAsiento As String,  _
                    ByVal Original_RPM_TipoAs As String,  _
                    ByVal Original_RPM_UIDpm As String,  _
                    ByVal Original_RPM_FecReg As Date,  _
                    ByVal Original_RPM_HraReg As Date) As Integer
            If (RPM_TipoTran Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_TipoTran")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(RPM_TipoTran,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(RPM_FechaT,Date)
            If (RPM_Benefit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_Benefit")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(RPM_Benefit,String)
            End If
            If (RPM_CIBenef Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_CIBenef")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(RPM_CIBenef,String)
            End If
            If (RPM_NMovB Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_NMovB")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(RPM_NMovB,String)
            End If
            If (RPM_ISOBankB Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_ISOBankB")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(RPM_ISOBankB,String)
            End If
            If (RPM_CiaNmeD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_CiaNmeD")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(RPM_CiaNmeD,String)
            End If
            If (RPM_ISOBankD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_ISOBankD")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(RPM_ISOBankD,String)
            End If
            If (RPM_RIFCiaD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_RIFCiaD")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(RPM_RIFCiaD,String)
            End If
            If (RPM_MovilD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_MovilD")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(RPM_MovilD,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(RPM_MtoTr,Double)
            If (RPM_Factura Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_Factura")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(RPM_Factura,String)
            End If
            If (RPM_NRefB Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_NRefB")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(RPM_NRefB,String)
            End If
            If (RPM_CtaCble Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_CtaCble")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(RPM_CtaCble,String)
            End If
            If (RPM_MayorA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_MayorA")
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(RPM_MayorA,String)
            End If
            If (RPM_DescAs Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_DescAs")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(RPM_DescAs,String)
            End If
            If (RPM_NAsiento Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_NAsiento")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(RPM_NAsiento,String)
            End If
            If (RPM_TipoAs Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_TipoAs")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(RPM_TipoAs,String)
            End If
            If (RPM_UIDpm Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RPM_UIDpm")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(RPM_UIDpm,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(RPM_FecReg,Date)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(RPM_HraReg,Date)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_RPM_ID,Integer)
            If (Original_RPM_TipoTran Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_TipoTran")
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_RPM_TipoTran,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_RPM_FechaT,Date)
            If (Original_RPM_Benefit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_Benefit")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_RPM_Benefit,String)
            End If
            If (Original_RPM_CIBenef Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_CIBenef")
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_RPM_CIBenef,String)
            End If
            If (Original_RPM_NMovB Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_NMovB")
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_RPM_NMovB,String)
            End If
            If (Original_RPM_ISOBankB Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_ISOBankB")
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_RPM_ISOBankB,String)
            End If
            If (Original_RPM_CiaNmeD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_CiaNmeD")
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_RPM_CiaNmeD,String)
            End If
            If (Original_RPM_ISOBankD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_ISOBankD")
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_RPM_ISOBankD,String)
            End If
            If (Original_RPM_RIFCiaD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_RIFCiaD")
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_RPM_RIFCiaD,String)
            End If
            If (Original_RPM_MovilD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_MovilD")
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_RPM_MovilD,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_RPM_MtoTr,Double)
            If (Original_RPM_Factura Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_Factura")
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_RPM_Factura,String)
            End If
            If (Original_RPM_NRefB Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_NRefB")
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_RPM_NRefB,String)
            End If
            If (Original_RPM_CtaCble Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_CtaCble")
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_RPM_CtaCble,String)
            End If
            If (Original_RPM_MayorA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_MayorA")
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_RPM_MayorA,String)
            End If
            If (Original_RPM_DescAs Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_DescAs")
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_RPM_DescAs,String)
            End If
            If (Original_RPM_NAsiento Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_NAsiento")
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_RPM_NAsiento,String)
            End If
            If (Original_RPM_TipoAs Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_TipoAs")
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_RPM_TipoAs,String)
            End If
            If (Original_RPM_UIDpm Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RPM_UIDpm")
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_RPM_UIDpm,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_RPM_FecReg,Date)
            Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_RPM_HraReg,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MRS_CatCtaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MRS_CatCta"
            tableMapping.ColumnMappings.Add("CG_CodigoCta", "CG_CodigoCta")
            tableMapping.ColumnMappings.Add("CG_TipoCta", "CG_TipoCta")
            tableMapping.ColumnMappings.Add("CG_MayorA", "CG_MayorA")
            tableMapping.ColumnMappings.Add("CG_DescCta", "CG_DescCta")
            tableMapping.ColumnMappings.Add("CG_GrupoC", "CG_GrupoC")
            tableMapping.ColumnMappings.Add("CG_Sdo01", "CG_Sdo01")
            tableMapping.ColumnMappings.Add("CG_Sdo02", "CG_Sdo02")
            tableMapping.ColumnMappings.Add("CG_Sdo03", "CG_Sdo03")
            tableMapping.ColumnMappings.Add("CG_Sdo04", "CG_Sdo04")
            tableMapping.ColumnMappings.Add("CG_Sdo05", "CG_Sdo05")
            tableMapping.ColumnMappings.Add("CG_Sdo06", "CG_Sdo06")
            tableMapping.ColumnMappings.Add("CG_Sdo07", "CG_Sdo07")
            tableMapping.ColumnMappings.Add("CG_Sdo08", "CG_Sdo08")
            tableMapping.ColumnMappings.Add("CG_Sdo09", "CG_Sdo09")
            tableMapping.ColumnMappings.Add("CG_Sdo10", "CG_Sdo10")
            tableMapping.ColumnMappings.Add("CG_Sdo11", "CG_Sdo11")
            tableMapping.ColumnMappings.Add("CG_Sdo12", "CG_Sdo12")
            tableMapping.ColumnMappings.Add("CG_CodCtaC", "CG_CodCtaC")
            tableMapping.ColumnMappings.Add("CG_UIDCrea", "CG_UIDCrea")
            tableMapping.ColumnMappings.Add("CG_FecCrea", "CG_FecCrea")
            tableMapping.ColumnMappings.Add("CG_HoraCr", "CG_HoraCr")
            tableMapping.ColumnMappings.Add("CG_UIDMod", "CG_UIDMod")
            tableMapping.ColumnMappings.Add("CG_FecMod", "CG_FecMod")
            tableMapping.ColumnMappings.Add("CG_HoraMd", "CG_HoraMd")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [MRS_CatCta] WHERE (([CG_CodigoCta] = ?) AND ((? = 1 AND [CG_TipoCta]"& _ 
                " IS NULL) OR ([CG_TipoCta] = ?)) AND ((? = 1 AND [CG_MayorA] IS NULL) OR ([CG_Ma"& _ 
                "yorA] = ?)) AND ((? = 1 AND [CG_DescCta] IS NULL) OR ([CG_DescCta] = ?)) AND ((?"& _ 
                " = 1 AND [CG_GrupoC] IS NULL) OR ([CG_GrupoC] = ?)) AND ((? = 1 AND [CG_Sdo01] I"& _ 
                "S NULL) OR ([CG_Sdo01] = ?)) AND ((? = 1 AND [CG_Sdo02] IS NULL) OR ([CG_Sdo02] "& _ 
                "= ?)) AND ((? = 1 AND [CG_Sdo03] IS NULL) OR ([CG_Sdo03] = ?)) AND ((? = 1 AND ["& _ 
                "CG_Sdo04] IS NULL) OR ([CG_Sdo04] = ?)) AND ((? = 1 AND [CG_Sdo05] IS NULL) OR ("& _ 
                "[CG_Sdo05] = ?)) AND ((? = 1 AND [CG_Sdo06] IS NULL) OR ([CG_Sdo06] = ?)) AND (("& _ 
                "? = 1 AND [CG_Sdo07] IS NULL) OR ([CG_Sdo07] = ?)) AND ((? = 1 AND [CG_Sdo08] IS"& _ 
                " NULL) OR ([CG_Sdo08] = ?)) AND ((? = 1 AND [CG_Sdo09] IS NULL) OR ([CG_Sdo09] ="& _ 
                " ?)) AND ((? = 1 AND [CG_Sdo10] IS NULL) OR ([CG_Sdo10] = ?)) AND ((? = 1 AND [C"& _ 
                "G_Sdo11] IS NULL) OR ([CG_Sdo11] = ?)) AND ((? = 1 AND [CG_Sdo12] IS NULL) OR (["& _ 
                "CG_Sdo12] = ?)) AND ((? = 1 AND [CG_CodCtaC] IS NULL) OR ([CG_CodCtaC] = ?)) AND"& _ 
                " ((? = 1 AND [CG_UIDCrea] IS NULL) OR ([CG_UIDCrea] = ?)) AND ((? = 1 AND [CG_Fe"& _ 
                "cCrea] IS NULL) OR ([CG_FecCrea] = ?)) AND ((? = 1 AND [CG_HoraCr] IS NULL) OR ("& _ 
                "[CG_HoraCr] = ?)) AND ((? = 1 AND [CG_UIDMod] IS NULL) OR ([CG_UIDMod] = ?)) AND"& _ 
                " ((? = 1 AND [CG_FecMod] IS NULL) OR ([CG_FecMod] = ?)) AND ((? = 1 AND [CG_Hora"& _ 
                "Md] IS NULL) OR ([CG_HoraMd] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_CodigoCta", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_CodigoCta", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_TipoCta", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_TipoCta", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_TipoCta", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_TipoCta", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_MayorA", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_MayorA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_MayorA", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_MayorA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_DescCta", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_DescCta", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_DescCta", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_DescCta", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_GrupoC", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_GrupoC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_GrupoC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_GrupoC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo01", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo01", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo01", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo01", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo02", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo02", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo02", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo02", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo03", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo03", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo03", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo03", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo04", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo04", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo04", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo04", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo05", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo05", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo05", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo05", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo06", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo06", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo06", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo06", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo07", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo07", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo07", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo07", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo08", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo08", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo08", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo08", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo09", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo09", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo09", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo09", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo10", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo10", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo10", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo10", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo11", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo11", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo11", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo11", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo12", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo12", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo12", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo12", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_CodCtaC", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_CodCtaC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_CodCtaC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_CodCtaC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_UIDCrea", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_UIDCrea", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_UIDCrea", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_UIDCrea", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_FecCrea", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_FecCrea", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_FecCrea", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_FecCrea", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_HoraCr", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_HoraCr", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_HoraCr", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_HoraCr", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_UIDMod", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_UIDMod", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_UIDMod", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_UIDMod", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_FecMod", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_FecMod", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_FecMod", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_FecMod", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_HoraMd", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_HoraMd", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_HoraMd", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_HoraMd", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [MRS_CatCta] ([CG_CodigoCta], [CG_TipoCta], [CG_MayorA], [CG_DescCta]"& _ 
                ", [CG_GrupoC], [CG_Sdo01], [CG_Sdo02], [CG_Sdo03], [CG_Sdo04], [CG_Sdo05], [CG_S"& _ 
                "do06], [CG_Sdo07], [CG_Sdo08], [CG_Sdo09], [CG_Sdo10], [CG_Sdo11], [CG_Sdo12], ["& _ 
                "CG_CodCtaC], [CG_UIDCrea], [CG_FecCrea], [CG_HoraCr], [CG_UIDMod], [CG_FecMod], "& _ 
                "[CG_HoraMd]) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"& _ 
                " ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_CodigoCta", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_CodigoCta", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_TipoCta", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_TipoCta", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_MayorA", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_MayorA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_DescCta", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_DescCta", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_GrupoC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_GrupoC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo01", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo01", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo02", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo02", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo03", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo03", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo04", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo04", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo05", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo05", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo06", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo06", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo07", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo07", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo08", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo08", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo09", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo09", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo10", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo10", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo11", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo11", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo12", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo12", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_CodCtaC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_CodCtaC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_UIDCrea", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_UIDCrea", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_FecCrea", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_FecCrea", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_HoraCr", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_HoraCr", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_UIDMod", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_UIDMod", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_FecMod", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_FecMod", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_HoraMd", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_HoraMd", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [MRS_CatCta] SET [CG_CodigoCta] = ?, [CG_TipoCta] = ?, [CG_MayorA] = ?, [C"& _ 
                "G_DescCta] = ?, [CG_GrupoC] = ?, [CG_Sdo01] = ?, [CG_Sdo02] = ?, [CG_Sdo03] = ?,"& _ 
                " [CG_Sdo04] = ?, [CG_Sdo05] = ?, [CG_Sdo06] = ?, [CG_Sdo07] = ?, [CG_Sdo08] = ?,"& _ 
                " [CG_Sdo09] = ?, [CG_Sdo10] = ?, [CG_Sdo11] = ?, [CG_Sdo12] = ?, [CG_CodCtaC] = "& _ 
                "?, [CG_UIDCrea] = ?, [CG_FecCrea] = ?, [CG_HoraCr] = ?, [CG_UIDMod] = ?, [CG_Fec"& _ 
                "Mod] = ?, [CG_HoraMd] = ? WHERE (([CG_CodigoCta] = ?) AND ((? = 1 AND [CG_TipoCt"& _ 
                "a] IS NULL) OR ([CG_TipoCta] = ?)) AND ((? = 1 AND [CG_MayorA] IS NULL) OR ([CG_"& _ 
                "MayorA] = ?)) AND ((? = 1 AND [CG_DescCta] IS NULL) OR ([CG_DescCta] = ?)) AND ("& _ 
                "(? = 1 AND [CG_GrupoC] IS NULL) OR ([CG_GrupoC] = ?)) AND ((? = 1 AND [CG_Sdo01]"& _ 
                " IS NULL) OR ([CG_Sdo01] = ?)) AND ((? = 1 AND [CG_Sdo02] IS NULL) OR ([CG_Sdo02"& _ 
                "] = ?)) AND ((? = 1 AND [CG_Sdo03] IS NULL) OR ([CG_Sdo03] = ?)) AND ((? = 1 AND"& _ 
                " [CG_Sdo04] IS NULL) OR ([CG_Sdo04] = ?)) AND ((? = 1 AND [CG_Sdo05] IS NULL) OR"& _ 
                " ([CG_Sdo05] = ?)) AND ((? = 1 AND [CG_Sdo06] IS NULL) OR ([CG_Sdo06] = ?)) AND "& _ 
                "((? = 1 AND [CG_Sdo07] IS NULL) OR ([CG_Sdo07] = ?)) AND ((? = 1 AND [CG_Sdo08] "& _ 
                "IS NULL) OR ([CG_Sdo08] = ?)) AND ((? = 1 AND [CG_Sdo09] IS NULL) OR ([CG_Sdo09]"& _ 
                " = ?)) AND ((? = 1 AND [CG_Sdo10] IS NULL) OR ([CG_Sdo10] = ?)) AND ((? = 1 AND "& _ 
                "[CG_Sdo11] IS NULL) OR ([CG_Sdo11] = ?)) AND ((? = 1 AND [CG_Sdo12] IS NULL) OR "& _ 
                "([CG_Sdo12] = ?)) AND ((? = 1 AND [CG_CodCtaC] IS NULL) OR ([CG_CodCtaC] = ?)) A"& _ 
                "ND ((? = 1 AND [CG_UIDCrea] IS NULL) OR ([CG_UIDCrea] = ?)) AND ((? = 1 AND [CG_"& _ 
                "FecCrea] IS NULL) OR ([CG_FecCrea] = ?)) AND ((? = 1 AND [CG_HoraCr] IS NULL) OR"& _ 
                " ([CG_HoraCr] = ?)) AND ((? = 1 AND [CG_UIDMod] IS NULL) OR ([CG_UIDMod] = ?)) A"& _ 
                "ND ((? = 1 AND [CG_FecMod] IS NULL) OR ([CG_FecMod] = ?)) AND ((? = 1 AND [CG_Ho"& _ 
                "raMd] IS NULL) OR ([CG_HoraMd] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_CodigoCta", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_CodigoCta", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_TipoCta", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_TipoCta", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_MayorA", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_MayorA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_DescCta", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_DescCta", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_GrupoC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_GrupoC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo01", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo01", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo02", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo02", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo03", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo03", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo04", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo04", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo05", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo05", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo06", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo06", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo07", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo07", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo08", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo08", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo09", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo09", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo10", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo10", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo11", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo11", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_Sdo12", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo12", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_CodCtaC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_CodCtaC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_UIDCrea", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_UIDCrea", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_FecCrea", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_FecCrea", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_HoraCr", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_HoraCr", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_UIDMod", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_UIDMod", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_FecMod", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_FecMod", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CG_HoraMd", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_HoraMd", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_CodigoCta", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_CodigoCta", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_TipoCta", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_TipoCta", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_TipoCta", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_TipoCta", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_MayorA", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_MayorA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_MayorA", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_MayorA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_DescCta", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_DescCta", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_DescCta", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_DescCta", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_GrupoC", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_GrupoC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_GrupoC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_GrupoC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo01", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo01", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo01", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo01", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo02", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo02", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo02", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo02", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo03", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo03", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo03", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo03", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo04", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo04", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo04", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo04", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo05", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo05", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo05", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo05", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo06", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo06", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo06", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo06", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo07", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo07", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo07", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo07", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo08", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo08", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo08", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo08", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo09", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo09", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo09", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo09", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo10", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo10", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo10", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo10", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo11", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo11", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo11", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo11", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_Sdo12", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo12", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_Sdo12", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_Sdo12", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_CodCtaC", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_CodCtaC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_CodCtaC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_CodCtaC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_UIDCrea", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_UIDCrea", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_UIDCrea", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_UIDCrea", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_FecCrea", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_FecCrea", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_FecCrea", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_FecCrea", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_HoraCr", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_HoraCr", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_HoraCr", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_HoraCr", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_UIDMod", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_UIDMod", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_UIDMod", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_UIDMod", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_FecMod", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_FecMod", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_FecMod", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_FecMod", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CG_HoraMd", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_HoraMd", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CG_HoraMd", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CG_HoraMd", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.PMovilD.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CG_CodigoCta, CG_TipoCta, CG_MayorA, CG_DescCta, CG_GrupoC, CG_Sdo01, CG_S"& _ 
                "do02, CG_Sdo03, CG_Sdo04, CG_Sdo05, CG_Sdo06, CG_Sdo07, CG_Sdo08, CG_Sdo09, CG_S"& _ 
                "do10, CG_Sdo11, CG_Sdo12, CG_CodCtaC, CG_UIDCrea, CG_FecCrea, CG_HoraCr, CG_UIDM"& _ 
                "od, CG_FecMod, CG_HoraMd FROM MRS_CatCta"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PMovilDS.MRS_CatCtaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PMovilDS.MRS_CatCtaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PMovilDS.MRS_CatCtaDataTable = New PMovilDS.MRS_CatCtaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PMovilDS.MRS_CatCtaDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PMovilDS) As Integer
            Return Me.Adapter.Update(dataSet, "MRS_CatCta")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CG_CodigoCta As String,  _
                    ByVal Original_CG_TipoCta As String,  _
                    ByVal Original_CG_MayorA As String,  _
                    ByVal Original_CG_DescCta As String,  _
                    ByVal Original_CG_GrupoC As String,  _
                    ByVal Original_CG_Sdo01 As Double,  _
                    ByVal Original_CG_Sdo02 As Double,  _
                    ByVal Original_CG_Sdo03 As Double,  _
                    ByVal Original_CG_Sdo04 As Double,  _
                    ByVal Original_CG_Sdo05 As Double,  _
                    ByVal Original_CG_Sdo06 As Double,  _
                    ByVal Original_CG_Sdo07 As Double,  _
                    ByVal Original_CG_Sdo08 As Double,  _
                    ByVal Original_CG_Sdo09 As Double,  _
                    ByVal Original_CG_Sdo10 As Double,  _
                    ByVal Original_CG_Sdo11 As Double,  _
                    ByVal Original_CG_Sdo12 As Double,  _
                    ByVal Original_CG_CodCtaC As String,  _
                    ByVal Original_CG_UIDCrea As String,  _
                    ByVal Original_CG_FecCrea As Date,  _
                    ByVal Original_CG_HoraCr As Date,  _
                    ByVal Original_CG_UIDMod As String,  _
                    ByVal Original_CG_FecMod As Date,  _
                    ByVal Original_CG_HoraMd As Date) As Integer
            If (Original_CG_CodigoCta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CG_CodigoCta")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CG_CodigoCta,String)
            End If
            If (Original_CG_TipoCta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CG_TipoCta")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CG_TipoCta,String)
            End If
            If (Original_CG_MayorA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CG_MayorA")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CG_MayorA,String)
            End If
            If (Original_CG_DescCta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CG_DescCta")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_CG_DescCta,String)
            End If
            If (Original_CG_GrupoC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CG_GrupoC")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_CG_GrupoC,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_CG_Sdo01,Double)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_CG_Sdo02,Double)
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_CG_Sdo03,Double)
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_CG_Sdo04,Double)
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_CG_Sdo05,Double)
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_CG_Sdo06,Double)
            Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_CG_Sdo07,Double)
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_CG_Sdo08,Double)
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_CG_Sdo09,Double)
            Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_CG_Sdo10,Double)
            Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_CG_Sdo11,Double)
            Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_CG_Sdo12,Double)
            If (Original_CG_CodCtaC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CG_CodCtaC")
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_CG_CodCtaC,String)
            End If
            If (Original_CG_UIDCrea Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CG_UIDCrea")
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_CG_UIDCrea,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_CG_FecCrea,Date)
            Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_CG_HoraCr,Date)
            If (Original_CG_UIDMod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CG_UIDMod")
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_CG_UIDMod,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_CG_FecMod,Date)
            Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_CG_HoraMd,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CG_CodigoCta As String,  _
                    ByVal CG_TipoCta As String,  _
                    ByVal CG_MayorA As String,  _
                    ByVal CG_DescCta As String,  _
                    ByVal CG_GrupoC As String,  _
                    ByVal CG_Sdo01 As Double,  _
                    ByVal CG_Sdo02 As Double,  _
                    ByVal CG_Sdo03 As Double,  _
                    ByVal CG_Sdo04 As Double,  _
                    ByVal CG_Sdo05 As Double,  _
                    ByVal CG_Sdo06 As Double,  _
                    ByVal CG_Sdo07 As Double,  _
                    ByVal CG_Sdo08 As Double,  _
                    ByVal CG_Sdo09 As Double,  _
                    ByVal CG_Sdo10 As Double,  _
                    ByVal CG_Sdo11 As Double,  _
                    ByVal CG_Sdo12 As Double,  _
                    ByVal CG_CodCtaC As String,  _
                    ByVal CG_UIDCrea As String,  _
                    ByVal CG_FecCrea As Date,  _
                    ByVal CG_HoraCr As Date,  _
                    ByVal CG_UIDMod As String,  _
                    ByVal CG_FecMod As Date,  _
                    ByVal CG_HoraMd As Date) As Integer
            If (CG_CodigoCta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CG_CodigoCta")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CG_CodigoCta,String)
            End If
            If (CG_TipoCta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CG_TipoCta")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CG_TipoCta,String)
            End If
            If (CG_MayorA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CG_MayorA")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CG_MayorA,String)
            End If
            If (CG_DescCta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CG_DescCta")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CG_DescCta,String)
            End If
            If (CG_GrupoC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CG_GrupoC")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CG_GrupoC,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(CG_Sdo01,Double)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(CG_Sdo02,Double)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(CG_Sdo03,Double)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(CG_Sdo04,Double)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(CG_Sdo05,Double)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(CG_Sdo06,Double)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(CG_Sdo07,Double)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(CG_Sdo08,Double)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(CG_Sdo09,Double)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(CG_Sdo10,Double)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(CG_Sdo11,Double)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(CG_Sdo12,Double)
            If (CG_CodCtaC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CG_CodCtaC")
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(CG_CodCtaC,String)
            End If
            If (CG_UIDCrea Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CG_UIDCrea")
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(CG_UIDCrea,String)
            End If
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(CG_FecCrea,Date)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(CG_HoraCr,Date)
            If (CG_UIDMod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CG_UIDMod")
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(CG_UIDMod,String)
            End If
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(CG_FecMod,Date)
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(CG_HoraMd,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CG_CodigoCta As String,  _
                    ByVal CG_TipoCta As String,  _
                    ByVal CG_MayorA As String,  _
                    ByVal CG_DescCta As String,  _
                    ByVal CG_GrupoC As String,  _
                    ByVal CG_Sdo01 As Double,  _
                    ByVal CG_Sdo02 As Double,  _
                    ByVal CG_Sdo03 As Double,  _
                    ByVal CG_Sdo04 As Double,  _
                    ByVal CG_Sdo05 As Double,  _
                    ByVal CG_Sdo06 As Double,  _
                    ByVal CG_Sdo07 As Double,  _
                    ByVal CG_Sdo08 As Double,  _
                    ByVal CG_Sdo09 As Double,  _
                    ByVal CG_Sdo10 As Double,  _
                    ByVal CG_Sdo11 As Double,  _
                    ByVal CG_Sdo12 As Double,  _
                    ByVal CG_CodCtaC As String,  _
                    ByVal CG_UIDCrea As String,  _
                    ByVal CG_FecCrea As Date,  _
                    ByVal CG_HoraCr As Date,  _
                    ByVal CG_UIDMod As String,  _
                    ByVal CG_FecMod As Date,  _
                    ByVal CG_HoraMd As Date,  _
                    ByVal Original_CG_CodigoCta As String,  _
                    ByVal Original_CG_TipoCta As String,  _
                    ByVal Original_CG_MayorA As String,  _
                    ByVal Original_CG_DescCta As String,  _
                    ByVal Original_CG_GrupoC As String,  _
                    ByVal Original_CG_Sdo01 As Double,  _
                    ByVal Original_CG_Sdo02 As Double,  _
                    ByVal Original_CG_Sdo03 As Double,  _
                    ByVal Original_CG_Sdo04 As Double,  _
                    ByVal Original_CG_Sdo05 As Double,  _
                    ByVal Original_CG_Sdo06 As Double,  _
                    ByVal Original_CG_Sdo07 As Double,  _
                    ByVal Original_CG_Sdo08 As Double,  _
                    ByVal Original_CG_Sdo09 As Double,  _
                    ByVal Original_CG_Sdo10 As Double,  _
                    ByVal Original_CG_Sdo11 As Double,  _
                    ByVal Original_CG_Sdo12 As Double,  _
                    ByVal Original_CG_CodCtaC As String,  _
                    ByVal Original_CG_UIDCrea As String,  _
                    ByVal Original_CG_FecCrea As Date,  _
                    ByVal Original_CG_HoraCr As Date,  _
                    ByVal Original_CG_UIDMod As String,  _
                    ByVal Original_CG_FecMod As Date,  _
                    ByVal Original_CG_HoraMd As Date) As Integer
            If (CG_CodigoCta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CG_CodigoCta")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CG_CodigoCta,String)
            End If
            If (CG_TipoCta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CG_TipoCta")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CG_TipoCta,String)
            End If
            If (CG_MayorA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CG_MayorA")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CG_MayorA,String)
            End If
            If (CG_DescCta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CG_DescCta")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CG_DescCta,String)
            End If
            If (CG_GrupoC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CG_GrupoC")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CG_GrupoC,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CG_Sdo01,Double)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CG_Sdo02,Double)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CG_Sdo03,Double)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CG_Sdo04,Double)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CG_Sdo05,Double)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(CG_Sdo06,Double)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(CG_Sdo07,Double)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(CG_Sdo08,Double)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(CG_Sdo09,Double)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(CG_Sdo10,Double)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(CG_Sdo11,Double)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(CG_Sdo12,Double)
            If (CG_CodCtaC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CG_CodCtaC")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(CG_CodCtaC,String)
            End If
            If (CG_UIDCrea Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CG_UIDCrea")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(CG_UIDCrea,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(CG_FecCrea,Date)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(CG_HoraCr,Date)
            If (CG_UIDMod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CG_UIDMod")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(CG_UIDMod,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(CG_FecMod,Date)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(CG_HoraMd,Date)
            If (Original_CG_CodigoCta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CG_CodigoCta")
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_CG_CodigoCta,String)
            End If
            If (Original_CG_TipoCta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CG_TipoCta")
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_CG_TipoCta,String)
            End If
            If (Original_CG_MayorA Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CG_MayorA")
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_CG_MayorA,String)
            End If
            If (Original_CG_DescCta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CG_DescCta")
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_CG_DescCta,String)
            End If
            If (Original_CG_GrupoC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CG_GrupoC")
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_CG_GrupoC,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_CG_Sdo01,Double)
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_CG_Sdo02,Double)
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_CG_Sdo03,Double)
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_CG_Sdo04,Double)
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_CG_Sdo05,Double)
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_CG_Sdo06,Double)
            Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_CG_Sdo07,Double)
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_CG_Sdo08,Double)
            Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_CG_Sdo09,Double)
            Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_CG_Sdo10,Double)
            Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_CG_Sdo11,Double)
            Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_CG_Sdo12,Double)
            If (Original_CG_CodCtaC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CG_CodCtaC")
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_CG_CodCtaC,String)
            End If
            If (Original_CG_UIDCrea Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CG_UIDCrea")
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_CG_UIDCrea,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_CG_FecCrea,Date)
            Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_CG_HoraCr,Date)
            If (Original_CG_UIDMod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CG_UIDMod")
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_CG_UIDMod,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_CG_FecMod,Date)
            Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_CG_HoraMd,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CG_TipoCta As String,  _
                    ByVal CG_MayorA As String,  _
                    ByVal CG_DescCta As String,  _
                    ByVal CG_GrupoC As String,  _
                    ByVal CG_Sdo01 As Double,  _
                    ByVal CG_Sdo02 As Double,  _
                    ByVal CG_Sdo03 As Double,  _
                    ByVal CG_Sdo04 As Double,  _
                    ByVal CG_Sdo05 As Double,  _
                    ByVal CG_Sdo06 As Double,  _
                    ByVal CG_Sdo07 As Double,  _
                    ByVal CG_Sdo08 As Double,  _
                    ByVal CG_Sdo09 As Double,  _
                    ByVal CG_Sdo10 As Double,  _
                    ByVal CG_Sdo11 As Double,  _
                    ByVal CG_Sdo12 As Double,  _
                    ByVal CG_CodCtaC As String,  _
                    ByVal CG_UIDCrea As String,  _
                    ByVal CG_FecCrea As Date,  _
                    ByVal CG_HoraCr As Date,  _
                    ByVal CG_UIDMod As String,  _
                    ByVal CG_FecMod As Date,  _
                    ByVal CG_HoraMd As Date,  _
                    ByVal Original_CG_CodigoCta As String,  _
                    ByVal Original_CG_TipoCta As String,  _
                    ByVal Original_CG_MayorA As String,  _
                    ByVal Original_CG_DescCta As String,  _
                    ByVal Original_CG_GrupoC As String,  _
                    ByVal Original_CG_Sdo01 As Double,  _
                    ByVal Original_CG_Sdo02 As Double,  _
                    ByVal Original_CG_Sdo03 As Double,  _
                    ByVal Original_CG_Sdo04 As Double,  _
                    ByVal Original_CG_Sdo05 As Double,  _
                    ByVal Original_CG_Sdo06 As Double,  _
                    ByVal Original_CG_Sdo07 As Double,  _
                    ByVal Original_CG_Sdo08 As Double,  _
                    ByVal Original_CG_Sdo09 As Double,  _
                    ByVal Original_CG_Sdo10 As Double,  _
                    ByVal Original_CG_Sdo11 As Double,  _
                    ByVal Original_CG_Sdo12 As Double,  _
                    ByVal Original_CG_CodCtaC As String,  _
                    ByVal Original_CG_UIDCrea As String,  _
                    ByVal Original_CG_FecCrea As Date,  _
                    ByVal Original_CG_HoraCr As Date,  _
                    ByVal Original_CG_UIDMod As String,  _
                    ByVal Original_CG_FecMod As Date,  _
                    ByVal Original_CG_HoraMd As Date) As Integer
            Return Me.Update(Original_CG_CodigoCta, CG_TipoCta, CG_MayorA, CG_DescCta, CG_GrupoC, CG_Sdo01, CG_Sdo02, CG_Sdo03, CG_Sdo04, CG_Sdo05, CG_Sdo06, CG_Sdo07, CG_Sdo08, CG_Sdo09, CG_Sdo10, CG_Sdo11, CG_Sdo12, CG_CodCtaC, CG_UIDCrea, CG_FecCrea, CG_HoraCr, CG_UIDMod, CG_FecMod, CG_HoraMd, Original_CG_CodigoCta, Original_CG_TipoCta, Original_CG_MayorA, Original_CG_DescCta, Original_CG_GrupoC, Original_CG_Sdo01, Original_CG_Sdo02, Original_CG_Sdo03, Original_CG_Sdo04, Original_CG_Sdo05, Original_CG_Sdo06, Original_CG_Sdo07, Original_CG_Sdo08, Original_CG_Sdo09, Original_CG_Sdo10, Original_CG_Sdo11, Original_CG_Sdo12, Original_CG_CodCtaC, Original_CG_UIDCrea, Original_CG_FecCrea, Original_CG_HoraCr, Original_CG_UIDMod, Original_CG_FecMod, Original_CG_HoraMd)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MRS_TLogTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MRS_TLog"
            tableMapping.ColumnMappings.Add("LG_Id", "LG_Id")
            tableMapping.ColumnMappings.Add("LG_TransDate", "LG_TransDate")
            tableMapping.ColumnMappings.Add("LG_CiaName", "LG_CiaName")
            tableMapping.ColumnMappings.Add("LG_RIFCia", "LG_RIFCia")
            tableMapping.ColumnMappings.Add("LG_CiaBank", "LG_CiaBank")
            tableMapping.ColumnMappings.Add("LG_CiaMobile", "LG_CiaMobile")
            tableMapping.ColumnMappings.Add("LG_TransAmt", "LG_TransAmt")
            tableMapping.ColumnMappings.Add("LG_CBankSN", "LG_CBankSN")
            tableMapping.ColumnMappings.Add("LG_CBankID", "LG_CBankID")
            tableMapping.ColumnMappings.Add("LG_CMobile", "LG_CMobile")
            tableMapping.ColumnMappings.Add("LG_SMSBody", "LG_SMSBody")
            tableMapping.ColumnMappings.Add("LG_SMSResp", "LG_SMSResp")
            tableMapping.ColumnMappings.Add("LG_SMSTimeS", "LG_SMSTimeS")
            tableMapping.ColumnMappings.Add("LG_UserTrans", "LG_UserTrans")
            tableMapping.ColumnMappings.Add("LG_FechaTran", "LG_FechaTran")
            tableMapping.ColumnMappings.Add("LG_HoraTrans", "LG_HoraTrans")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [MRS_TLog] WHERE (([LG_Id] = ?) AND ((? = 1 AND [LG_TransDate] IS NUL"& _ 
                "L) OR ([LG_TransDate] = ?)) AND ((? = 1 AND [LG_CiaName] IS NULL) OR ([LG_CiaNam"& _ 
                "e] = ?)) AND ((? = 1 AND [LG_RIFCia] IS NULL) OR ([LG_RIFCia] = ?)) AND ((? = 1 "& _ 
                "AND [LG_CiaBank] IS NULL) OR ([LG_CiaBank] = ?)) AND ((? = 1 AND [LG_CiaMobile] "& _ 
                "IS NULL) OR ([LG_CiaMobile] = ?)) AND ((? = 1 AND [LG_TransAmt] IS NULL) OR ([LG"& _ 
                "_TransAmt] = ?)) AND ((? = 1 AND [LG_CBankSN] IS NULL) OR ([LG_CBankSN] = ?)) AN"& _ 
                "D ((? = 1 AND [LG_CBankID] IS NULL) OR ([LG_CBankID] = ?)) AND ((? = 1 AND [LG_C"& _ 
                "Mobile] IS NULL) OR ([LG_CMobile] = ?)) AND ((? = 1 AND [LG_SMSBody] IS NULL) OR"& _ 
                " ([LG_SMSBody] = ?)) AND ((? = 1 AND [LG_SMSResp] IS NULL) OR ([LG_SMSResp] = ?)"& _ 
                ") AND ((? = 1 AND [LG_SMSTimeS] IS NULL) OR ([LG_SMSTimeS] = ?)) AND ((? = 1 AND"& _ 
                " [LG_UserTrans] IS NULL) OR ([LG_UserTrans] = ?)) AND ((? = 1 AND [LG_FechaTran]"& _ 
                " IS NULL) OR ([LG_FechaTran] = ?)) AND ((? = 1 AND [LG_HoraTrans] IS NULL) OR (["& _ 
                "LG_HoraTrans] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_TransDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_TransDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_TransDate", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_TransDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_CiaName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CiaName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_CiaName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CiaName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_RIFCia", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_RIFCia", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_RIFCia", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_RIFCia", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_CiaBank", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CiaBank", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_CiaBank", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CiaBank", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_CiaMobile", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CiaMobile", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_CiaMobile", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CiaMobile", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_TransAmt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_TransAmt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_TransAmt", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_TransAmt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_CBankSN", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CBankSN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_CBankSN", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CBankSN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_CBankID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CBankID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_CBankID", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CBankID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_CMobile", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CMobile", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_CMobile", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CMobile", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_SMSBody", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_SMSBody", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_SMSBody", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_SMSBody", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_SMSResp", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_SMSResp", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_SMSResp", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_SMSResp", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_SMSTimeS", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_SMSTimeS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_SMSTimeS", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_SMSTimeS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_UserTrans", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_UserTrans", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_UserTrans", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_UserTrans", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_FechaTran", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_FechaTran", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_FechaTran", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_FechaTran", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_HoraTrans", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_HoraTrans", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_HoraTrans", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_HoraTrans", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [MRS_TLog] ([LG_TransDate], [LG_CiaName], [LG_RIFCia], [LG_CiaBank], "& _ 
                "[LG_CiaMobile], [LG_TransAmt], [LG_CBankSN], [LG_CBankID], [LG_CMobile], [LG_SMS"& _ 
                "Body], [LG_SMSResp], [LG_SMSTimeS], [LG_UserTrans], [LG_FechaTran], [LG_HoraTran"& _ 
                "s]) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_TransDate", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_TransDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_CiaName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CiaName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_RIFCia", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_RIFCia", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_CiaBank", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CiaBank", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_CiaMobile", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CiaMobile", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_TransAmt", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_TransAmt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_CBankSN", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CBankSN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_CBankID", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CBankID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_CMobile", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CMobile", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_SMSBody", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_SMSBody", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_SMSResp", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_SMSResp", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_SMSTimeS", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_SMSTimeS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_UserTrans", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_UserTrans", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_FechaTran", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_FechaTran", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_HoraTrans", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_HoraTrans", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [MRS_TLog] SET [LG_TransDate] = ?, [LG_CiaName] = ?, [LG_RIFCia] = ?, [LG_"& _ 
                "CiaBank] = ?, [LG_CiaMobile] = ?, [LG_TransAmt] = ?, [LG_CBankSN] = ?, [LG_CBank"& _ 
                "ID] = ?, [LG_CMobile] = ?, [LG_SMSBody] = ?, [LG_SMSResp] = ?, [LG_SMSTimeS] = ?"& _ 
                ", [LG_UserTrans] = ?, [LG_FechaTran] = ?, [LG_HoraTrans] = ? WHERE (([LG_Id] = ?"& _ 
                ") AND ((? = 1 AND [LG_TransDate] IS NULL) OR ([LG_TransDate] = ?)) AND ((? = 1 A"& _ 
                "ND [LG_CiaName] IS NULL) OR ([LG_CiaName] = ?)) AND ((? = 1 AND [LG_RIFCia] IS N"& _ 
                "ULL) OR ([LG_RIFCia] = ?)) AND ((? = 1 AND [LG_CiaBank] IS NULL) OR ([LG_CiaBank"& _ 
                "] = ?)) AND ((? = 1 AND [LG_CiaMobile] IS NULL) OR ([LG_CiaMobile] = ?)) AND ((?"& _ 
                " = 1 AND [LG_TransAmt] IS NULL) OR ([LG_TransAmt] = ?)) AND ((? = 1 AND [LG_CBan"& _ 
                "kSN] IS NULL) OR ([LG_CBankSN] = ?)) AND ((? = 1 AND [LG_CBankID] IS NULL) OR (["& _ 
                "LG_CBankID] = ?)) AND ((? = 1 AND [LG_CMobile] IS NULL) OR ([LG_CMobile] = ?)) A"& _ 
                "ND ((? = 1 AND [LG_SMSBody] IS NULL) OR ([LG_SMSBody] = ?)) AND ((? = 1 AND [LG_"& _ 
                "SMSResp] IS NULL) OR ([LG_SMSResp] = ?)) AND ((? = 1 AND [LG_SMSTimeS] IS NULL) "& _ 
                "OR ([LG_SMSTimeS] = ?)) AND ((? = 1 AND [LG_UserTrans] IS NULL) OR ([LG_UserTran"& _ 
                "s] = ?)) AND ((? = 1 AND [LG_FechaTran] IS NULL) OR ([LG_FechaTran] = ?)) AND (("& _ 
                "? = 1 AND [LG_HoraTrans] IS NULL) OR ([LG_HoraTrans] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_TransDate", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_TransDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_CiaName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CiaName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_RIFCia", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_RIFCia", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_CiaBank", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CiaBank", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_CiaMobile", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CiaMobile", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_TransAmt", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_TransAmt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_CBankSN", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CBankSN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_CBankID", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CBankID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_CMobile", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CMobile", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_SMSBody", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_SMSBody", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_SMSResp", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_SMSResp", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_SMSTimeS", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_SMSTimeS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_UserTrans", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_UserTrans", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_FechaTran", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_FechaTran", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LG_HoraTrans", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_HoraTrans", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_TransDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_TransDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_TransDate", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_TransDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_CiaName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CiaName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_CiaName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CiaName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_RIFCia", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_RIFCia", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_RIFCia", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_RIFCia", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_CiaBank", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CiaBank", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_CiaBank", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CiaBank", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_CiaMobile", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CiaMobile", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_CiaMobile", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CiaMobile", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_TransAmt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_TransAmt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_TransAmt", Global.System.Data.Odbc.OdbcType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_TransAmt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_CBankSN", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CBankSN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_CBankSN", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CBankSN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_CBankID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CBankID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_CBankID", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CBankID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_CMobile", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CMobile", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_CMobile", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_CMobile", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_SMSBody", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_SMSBody", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_SMSBody", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_SMSBody", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_SMSResp", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_SMSResp", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_SMSResp", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_SMSResp", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_SMSTimeS", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_SMSTimeS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_SMSTimeS", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_SMSTimeS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_UserTrans", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_UserTrans", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_UserTrans", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_UserTrans", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_FechaTran", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_FechaTran", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_FechaTran", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_FechaTran", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LG_HoraTrans", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_HoraTrans", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LG_HoraTrans", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LG_HoraTrans", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.PMovilD.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT LG_Id, LG_TransDate, LG_CiaName, LG_RIFCia, LG_CiaBank, LG_CiaMobile, LG_T"& _ 
                "ransAmt, LG_CBankSN, LG_CBankID, LG_CMobile, LG_SMSBody, LG_SMSResp, LG_SMSTimeS"& _ 
                ", LG_UserTrans, LG_FechaTran, LG_HoraTrans FROM MRS_TLog"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PMovilDS.MRS_TLogDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PMovilDS.MRS_TLogDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PMovilDS.MRS_TLogDataTable = New PMovilDS.MRS_TLogDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PMovilDS.MRS_TLogDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PMovilDS) As Integer
            Return Me.Adapter.Update(dataSet, "MRS_TLog")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_LG_Id As Integer,  _
                    ByVal Original_LG_TransDate As String,  _
                    ByVal Original_LG_CiaName As String,  _
                    ByVal Original_LG_RIFCia As String,  _
                    ByVal Original_LG_CiaBank As String,  _
                    ByVal Original_LG_CiaMobile As String,  _
                    ByVal Original_LG_TransAmt As Double,  _
                    ByVal Original_LG_CBankSN As String,  _
                    ByVal Original_LG_CBankID As String,  _
                    ByVal Original_LG_CMobile As String,  _
                    ByVal Original_LG_SMSBody As String,  _
                    ByVal Original_LG_SMSResp As String,  _
                    ByVal Original_LG_SMSTimeS As Date,  _
                    ByVal Original_LG_UserTrans As String,  _
                    ByVal Original_LG_FechaTran As Date,  _
                    ByVal Original_LG_HoraTrans As Date) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_LG_Id,Integer)
            If (Original_LG_TransDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_TransDate")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_LG_TransDate,String)
            End If
            If (Original_LG_CiaName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_CiaName")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_LG_CiaName,String)
            End If
            If (Original_LG_RIFCia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_RIFCia")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_LG_RIFCia,String)
            End If
            If (Original_LG_CiaBank Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_CiaBank")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_LG_CiaBank,String)
            End If
            If (Original_LG_CiaMobile Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_CiaMobile")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_LG_CiaMobile,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_LG_TransAmt,Double)
            If (Original_LG_CBankSN Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_CBankSN")
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_LG_CBankSN,String)
            End If
            If (Original_LG_CBankID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_CBankID")
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_LG_CBankID,String)
            End If
            If (Original_LG_CMobile Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_CMobile")
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_LG_CMobile,String)
            End If
            If (Original_LG_SMSBody Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_SMSBody")
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_LG_SMSBody,String)
            End If
            If (Original_LG_SMSResp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_SMSResp")
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_LG_SMSResp,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_LG_SMSTimeS,Date)
            If (Original_LG_UserTrans Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_UserTrans")
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_LG_UserTrans,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_LG_FechaTran,Date)
            Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_LG_HoraTrans,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal LG_TransDate As String, ByVal LG_CiaName As String, ByVal LG_RIFCia As String, ByVal LG_CiaBank As String, ByVal LG_CiaMobile As String, ByVal LG_TransAmt As Double, ByVal LG_CBankSN As String, ByVal LG_CBankID As String, ByVal LG_CMobile As String, ByVal LG_SMSBody As String, ByVal LG_SMSResp As String, ByVal LG_SMSTimeS As Date, ByVal LG_UserTrans As String, ByVal LG_FechaTran As Date, ByVal LG_HoraTrans As Date) As Integer
            If (LG_TransDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_TransDate")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(LG_TransDate,String)
            End If
            If (LG_CiaName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_CiaName")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(LG_CiaName,String)
            End If
            If (LG_RIFCia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_RIFCia")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(LG_RIFCia,String)
            End If
            If (LG_CiaBank Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_CiaBank")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(LG_CiaBank,String)
            End If
            If (LG_CiaMobile Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_CiaMobile")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(LG_CiaMobile,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(LG_TransAmt,Double)
            If (LG_CBankSN Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_CBankSN")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(LG_CBankSN,String)
            End If
            If (LG_CBankID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_CBankID")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(LG_CBankID,String)
            End If
            If (LG_CMobile Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_CMobile")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(LG_CMobile,String)
            End If
            If (LG_SMSBody Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_SMSBody")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(LG_SMSBody,String)
            End If
            If (LG_SMSResp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_SMSResp")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(LG_SMSResp,String)
            End If
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(LG_SMSTimeS,Date)
            If (LG_UserTrans Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_UserTrans")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(LG_UserTrans,String)
            End If
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(LG_FechaTran,Date)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(LG_HoraTrans,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal LG_TransDate As String,  _
                    ByVal LG_CiaName As String,  _
                    ByVal LG_RIFCia As String,  _
                    ByVal LG_CiaBank As String,  _
                    ByVal LG_CiaMobile As String,  _
                    ByVal LG_TransAmt As Double,  _
                    ByVal LG_CBankSN As String,  _
                    ByVal LG_CBankID As String,  _
                    ByVal LG_CMobile As String,  _
                    ByVal LG_SMSBody As String,  _
                    ByVal LG_SMSResp As String,  _
                    ByVal LG_SMSTimeS As Date,  _
                    ByVal LG_UserTrans As String,  _
                    ByVal LG_FechaTran As Date,  _
                    ByVal LG_HoraTrans As Date,  _
                    ByVal Original_LG_Id As Integer,  _
                    ByVal Original_LG_TransDate As String,  _
                    ByVal Original_LG_CiaName As String,  _
                    ByVal Original_LG_RIFCia As String,  _
                    ByVal Original_LG_CiaBank As String,  _
                    ByVal Original_LG_CiaMobile As String,  _
                    ByVal Original_LG_TransAmt As Double,  _
                    ByVal Original_LG_CBankSN As String,  _
                    ByVal Original_LG_CBankID As String,  _
                    ByVal Original_LG_CMobile As String,  _
                    ByVal Original_LG_SMSBody As String,  _
                    ByVal Original_LG_SMSResp As String,  _
                    ByVal Original_LG_SMSTimeS As Date,  _
                    ByVal Original_LG_UserTrans As String,  _
                    ByVal Original_LG_FechaTran As Date,  _
                    ByVal Original_LG_HoraTrans As Date) As Integer
            If (LG_TransDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_TransDate")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(LG_TransDate,String)
            End If
            If (LG_CiaName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_CiaName")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(LG_CiaName,String)
            End If
            If (LG_RIFCia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_RIFCia")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(LG_RIFCia,String)
            End If
            If (LG_CiaBank Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_CiaBank")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(LG_CiaBank,String)
            End If
            If (LG_CiaMobile Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_CiaMobile")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(LG_CiaMobile,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(LG_TransAmt,Double)
            If (LG_CBankSN Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_CBankSN")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(LG_CBankSN,String)
            End If
            If (LG_CBankID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_CBankID")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(LG_CBankID,String)
            End If
            If (LG_CMobile Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_CMobile")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(LG_CMobile,String)
            End If
            If (LG_SMSBody Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_SMSBody")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(LG_SMSBody,String)
            End If
            If (LG_SMSResp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_SMSResp")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(LG_SMSResp,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(LG_SMSTimeS,Date)
            If (LG_UserTrans Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LG_UserTrans")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(LG_UserTrans,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(LG_FechaTran,Date)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(LG_HoraTrans,Date)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_LG_Id,Integer)
            If (Original_LG_TransDate Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_TransDate")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_LG_TransDate,String)
            End If
            If (Original_LG_CiaName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_CiaName")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_LG_CiaName,String)
            End If
            If (Original_LG_RIFCia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_RIFCia")
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_LG_RIFCia,String)
            End If
            If (Original_LG_CiaBank Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_CiaBank")
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_LG_CiaBank,String)
            End If
            If (Original_LG_CiaMobile Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_CiaMobile")
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_LG_CiaMobile,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_LG_TransAmt,Double)
            If (Original_LG_CBankSN Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_CBankSN")
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_LG_CBankSN,String)
            End If
            If (Original_LG_CBankID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_CBankID")
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_LG_CBankID,String)
            End If
            If (Original_LG_CMobile Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_CMobile")
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_LG_CMobile,String)
            End If
            If (Original_LG_SMSBody Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_SMSBody")
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_LG_SMSBody,String)
            End If
            If (Original_LG_SMSResp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_SMSResp")
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_LG_SMSResp,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_LG_SMSTimeS,Date)
            If (Original_LG_UserTrans Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LG_UserTrans")
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_LG_UserTrans,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_LG_FechaTran,Date)
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_LG_HoraTrans,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MRS_ISOBnkTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MRS_ISOBnk"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("BankCode", "BankCode")
            tableMapping.ColumnMappings.Add("BankNme", "BankNme")
            tableMapping.ColumnMappings.Add("BankType", "BankType")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [MRS_ISOBnk] WHERE (([Id] = ?) AND ((? = 1 AND [BankCode] IS NULL) OR"& _ 
                " ([BankCode] = ?)) AND ((? = 1 AND [BankNme] IS NULL) OR ([BankNme] = ?)) AND (("& _ 
                "? = 1 AND [BankType] IS NULL) OR ([BankType] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BankCode", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BankCode", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BankCode", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BankCode", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BankNme", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BankNme", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BankNme", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BankNme", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BankType", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BankType", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BankType", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BankType", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [MRS_ISOBnk] ([BankCode], [BankNme], [BankType]) VALUES (?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BankCode", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BankCode", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BankNme", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BankNme", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BankType", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BankType", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [MRS_ISOBnk] SET [BankCode] = ?, [BankNme] = ?, [BankType] = ? WHERE (([Id"& _ 
                "] = ?) AND ((? = 1 AND [BankCode] IS NULL) OR ([BankCode] = ?)) AND ((? = 1 AND "& _ 
                "[BankNme] IS NULL) OR ([BankNme] = ?)) AND ((? = 1 AND [BankType] IS NULL) OR (["& _ 
                "BankType] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BankCode", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BankCode", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BankNme", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BankNme", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BankType", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BankType", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BankCode", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BankCode", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BankCode", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BankCode", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BankNme", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BankNme", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BankNme", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BankNme", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BankType", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BankType", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BankType", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BankType", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.PMovilD.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, BankCode, BankNme, BankType FROM MRS_ISOBnk"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PMovilDS.MRS_ISOBnkDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PMovilDS.MRS_ISOBnkDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PMovilDS.MRS_ISOBnkDataTable = New PMovilDS.MRS_ISOBnkDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PMovilDS.MRS_ISOBnkDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PMovilDS) As Integer
            Return Me.Adapter.Update(dataSet, "MRS_ISOBnk")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Id As Integer, ByVal Original_BankCode As String, ByVal Original_BankNme As String, ByVal Original_BankType As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Id,Integer)
            If (Original_BankCode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_BankCode,String)
            End If
            If (Original_BankNme Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_BankNme,String)
            End If
            If (Original_BankType Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_BankType,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal BankCode As String, ByVal BankNme As String, ByVal BankType As String) As Integer
            If (BankCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(BankCode,String)
            End If
            If (BankNme Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(BankNme,String)
            End If
            If (BankType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(BankType,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal BankCode As String, ByVal BankNme As String, ByVal BankType As String, ByVal Original_Id As Integer, ByVal Original_BankCode As String, ByVal Original_BankNme As String, ByVal Original_BankType As String) As Integer
            If (BankCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(BankCode,String)
            End If
            If (BankNme Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(BankNme,String)
            End If
            If (BankType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(BankType,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_Id,Integer)
            If (Original_BankCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_BankCode,String)
            End If
            If (Original_BankNme Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_BankNme,String)
            End If
            If (Original_BankType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_BankType,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MRS_UsersTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MRS_Users"
            tableMapping.ColumnMappings.Add("USR_CedID", "USR_CedID")
            tableMapping.ColumnMappings.Add("USR_eMail", "USR_eMail")
            tableMapping.ColumnMappings.Add("USR_NUsr", "USR_NUsr")
            tableMapping.ColumnMappings.Add("USR_FName", "USR_FName")
            tableMapping.ColumnMappings.Add("USR_LName", "USR_LName")
            tableMapping.ColumnMappings.Add("USR_Passwd", "USR_Passwd")
            tableMapping.ColumnMappings.Add("USR_TipoU", "USR_TipoU")
            tableMapping.ColumnMappings.Add("USR_ModAv", "USR_ModAv")
            tableMapping.ColumnMappings.Add("USR_RCreated", "USR_RCreated")
            tableMapping.ColumnMappings.Add("USR_RUserC", "USR_RUserC")
            tableMapping.ColumnMappings.Add("USR_RUpdated", "USR_RUpdated")
            tableMapping.ColumnMappings.Add("USR_RUserU", "USR_RUserU")
            tableMapping.ColumnMappings.Add("USR_RDeleted", "USR_RDeleted")
            tableMapping.ColumnMappings.Add("USR_RUserD", "USR_RUserD")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [MRS_Users] WHERE (([USR_CedID] = ?) AND ((? = 1 AND [USR_eMail] IS N"& _ 
                "ULL) OR ([USR_eMail] = ?)) AND ((? = 1 AND [USR_NUsr] IS NULL) OR ([USR_NUsr] = "& _ 
                "?)) AND ((? = 1 AND [USR_FName] IS NULL) OR ([USR_FName] = ?)) AND ((? = 1 AND ["& _ 
                "USR_LName] IS NULL) OR ([USR_LName] = ?)) AND ((? = 1 AND [USR_Passwd] IS NULL) "& _ 
                "OR ([USR_Passwd] = ?)) AND ((? = 1 AND [USR_TipoU] IS NULL) OR ([USR_TipoU] = ?)"& _ 
                ") AND ((? = 1 AND [USR_ModAv] IS NULL) OR ([USR_ModAv] = ?)) AND ((? = 1 AND [US"& _ 
                "R_RCreated] IS NULL) OR ([USR_RCreated] = ?)) AND ((? = 1 AND [USR_RUserC] IS NU"& _ 
                "LL) OR ([USR_RUserC] = ?)) AND ((? = 1 AND [USR_RUpdated] IS NULL) OR ([USR_RUpd"& _ 
                "ated] = ?)) AND ((? = 1 AND [USR_RUserU] IS NULL) OR ([USR_RUserU] = ?)) AND ((?"& _ 
                " = 1 AND [USR_RDeleted] IS NULL) OR ([USR_RDeleted] = ?)) AND ((? = 1 AND [USR_R"& _ 
                "UserD] IS NULL) OR ([USR_RUserD] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_CedID", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_CedID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_eMail", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_eMail", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_eMail", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_eMail", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_NUsr", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_NUsr", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_NUsr", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_NUsr", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_FName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_FName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_FName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_FName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_LName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_LName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_LName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_LName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_Passwd", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_Passwd", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_Passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_Passwd", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_TipoU", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_TipoU", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_TipoU", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_TipoU", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_ModAv", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_ModAv", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_ModAv", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_ModAv", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_RCreated", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RCreated", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_RCreated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RCreated", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_RUserC", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUserC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_RUserC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUserC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_RUpdated", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUpdated", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_RUpdated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUpdated", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_RUserU", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUserU", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_RUserU", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUserU", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_RDeleted", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RDeleted", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_RDeleted", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RDeleted", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_RUserD", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUserD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_RUserD", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUserD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [MRS_Users] ([USR_CedID], [USR_eMail], [USR_NUsr], [USR_FName], [USR_"& _ 
                "LName], [USR_Passwd], [USR_TipoU], [USR_ModAv], [USR_RCreated], [USR_RUserC], [U"& _ 
                "SR_RUpdated], [USR_RUserU], [USR_RDeleted], [USR_RUserD]) VALUES (?, ?, ?, ?, ?,"& _ 
                " ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_CedID", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_CedID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_eMail", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_eMail", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_NUsr", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_NUsr", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_FName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_FName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_LName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_LName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_Passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_Passwd", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_TipoU", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_TipoU", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_ModAv", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_ModAv", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_RCreated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RCreated", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_RUserC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUserC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_RUpdated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUpdated", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_RUserU", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUserU", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_RDeleted", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RDeleted", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_RUserD", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUserD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [MRS_Users] SET [USR_CedID] = ?, [USR_eMail] = ?, [USR_NUsr] = ?, [USR_FNa"& _ 
                "me] = ?, [USR_LName] = ?, [USR_Passwd] = ?, [USR_TipoU] = ?, [USR_ModAv] = ?, [U"& _ 
                "SR_RCreated] = ?, [USR_RUserC] = ?, [USR_RUpdated] = ?, [USR_RUserU] = ?, [USR_R"& _ 
                "Deleted] = ?, [USR_RUserD] = ? WHERE (([USR_CedID] = ?) AND ((? = 1 AND [USR_eMa"& _ 
                "il] IS NULL) OR ([USR_eMail] = ?)) AND ((? = 1 AND [USR_NUsr] IS NULL) OR ([USR_"& _ 
                "NUsr] = ?)) AND ((? = 1 AND [USR_FName] IS NULL) OR ([USR_FName] = ?)) AND ((? ="& _ 
                " 1 AND [USR_LName] IS NULL) OR ([USR_LName] = ?)) AND ((? = 1 AND [USR_Passwd] I"& _ 
                "S NULL) OR ([USR_Passwd] = ?)) AND ((? = 1 AND [USR_TipoU] IS NULL) OR ([USR_Tip"& _ 
                "oU] = ?)) AND ((? = 1 AND [USR_ModAv] IS NULL) OR ([USR_ModAv] = ?)) AND ((? = 1"& _ 
                " AND [USR_RCreated] IS NULL) OR ([USR_RCreated] = ?)) AND ((? = 1 AND [USR_RUser"& _ 
                "C] IS NULL) OR ([USR_RUserC] = ?)) AND ((? = 1 AND [USR_RUpdated] IS NULL) OR (["& _ 
                "USR_RUpdated] = ?)) AND ((? = 1 AND [USR_RUserU] IS NULL) OR ([USR_RUserU] = ?))"& _ 
                " AND ((? = 1 AND [USR_RDeleted] IS NULL) OR ([USR_RDeleted] = ?)) AND ((? = 1 AN"& _ 
                "D [USR_RUserD] IS NULL) OR ([USR_RUserD] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_CedID", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_CedID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_eMail", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_eMail", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_NUsr", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_NUsr", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_FName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_FName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_LName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_LName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_Passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_Passwd", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_TipoU", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_TipoU", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_ModAv", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_ModAv", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_RCreated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RCreated", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_RUserC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUserC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_RUpdated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUpdated", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_RUserU", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUserU", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_RDeleted", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RDeleted", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("USR_RUserD", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUserD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_CedID", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_CedID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_eMail", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_eMail", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_eMail", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_eMail", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_NUsr", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_NUsr", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_NUsr", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_NUsr", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_FName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_FName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_FName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_FName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_LName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_LName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_LName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_LName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_Passwd", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_Passwd", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_Passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_Passwd", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_TipoU", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_TipoU", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_TipoU", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_TipoU", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_ModAv", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_ModAv", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_ModAv", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_ModAv", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_RCreated", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RCreated", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_RCreated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RCreated", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_RUserC", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUserC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_RUserC", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUserC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_RUpdated", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUpdated", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_RUpdated", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUpdated", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_RUserU", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUserU", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_RUserU", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUserU", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_RDeleted", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RDeleted", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_RDeleted", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RDeleted", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_USR_RUserD", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUserD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_USR_RUserD", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USR_RUserD", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.PMovilD.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT USR_CedID, USR_eMail, USR_NUsr, USR_FName, USR_LName, USR_Passwd, USR_Tipo"& _ 
                "U, USR_ModAv, USR_RCreated, USR_RUserC, USR_RUpdated, USR_RUserU, USR_RDeleted, "& _ 
                "USR_RUserD FROM MRS_Users"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PMovilDS.MRS_UsersDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PMovilDS.MRS_UsersDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PMovilDS.MRS_UsersDataTable = New PMovilDS.MRS_UsersDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PMovilDS.MRS_UsersDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PMovilDS) As Integer
            Return Me.Adapter.Update(dataSet, "MRS_Users")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_USR_CedID As String, ByVal Original_USR_eMail As String, ByVal Original_USR_NUsr As String, ByVal Original_USR_FName As String, ByVal Original_USR_LName As String, ByVal Original_USR_Passwd As String, ByVal Original_USR_TipoU As String, ByVal Original_USR_ModAv As String, ByVal Original_USR_RCreated As Date, ByVal Original_USR_RUserC As String, ByVal Original_USR_RUpdated As Date, ByVal Original_USR_RUserU As String, ByVal Original_USR_RDeleted As Date, ByVal Original_USR_RUserD As String) As Integer
            If (Original_USR_CedID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_CedID")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_USR_CedID,String)
            End If
            If (Original_USR_eMail Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_eMail")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_USR_eMail,String)
            End If
            If (Original_USR_NUsr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_NUsr")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_USR_NUsr,String)
            End If
            If (Original_USR_FName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_FName")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_USR_FName,String)
            End If
            If (Original_USR_LName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_LName")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_USR_LName,String)
            End If
            If (Original_USR_Passwd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_Passwd")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_USR_Passwd,String)
            End If
            If (Original_USR_TipoU Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_TipoU")
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_USR_TipoU,String)
            End If
            If (Original_USR_ModAv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_ModAv")
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_USR_ModAv,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_USR_RCreated,Date)
            If (Original_USR_RUserC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_RUserC")
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_USR_RUserC,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_USR_RUpdated,Date)
            If (Original_USR_RUserU Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_RUserU")
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_USR_RUserU,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_USR_RDeleted,Date)
            If (Original_USR_RUserD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_RUserD")
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_USR_RUserD,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal USR_CedID As String, ByVal USR_eMail As String, ByVal USR_NUsr As String, ByVal USR_FName As String, ByVal USR_LName As String, ByVal USR_Passwd As String, ByVal USR_TipoU As String, ByVal USR_ModAv As String, ByVal USR_RCreated As Date, ByVal USR_RUserC As String, ByVal USR_RUpdated As Date, ByVal USR_RUserU As String, ByVal USR_RDeleted As Date, ByVal USR_RUserD As String) As Integer
            If (USR_CedID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_CedID")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(USR_CedID,String)
            End If
            If (USR_eMail Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_eMail")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(USR_eMail,String)
            End If
            If (USR_NUsr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_NUsr")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(USR_NUsr,String)
            End If
            If (USR_FName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_FName")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(USR_FName,String)
            End If
            If (USR_LName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_LName")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(USR_LName,String)
            End If
            If (USR_Passwd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_Passwd")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(USR_Passwd,String)
            End If
            If (USR_TipoU Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_TipoU")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(USR_TipoU,String)
            End If
            If (USR_ModAv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_ModAv")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(USR_ModAv,String)
            End If
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(USR_RCreated,Date)
            If (USR_RUserC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_RUserC")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(USR_RUserC,String)
            End If
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(USR_RUpdated,Date)
            If (USR_RUserU Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_RUserU")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(USR_RUserU,String)
            End If
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(USR_RDeleted,Date)
            If (USR_RUserD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_RUserD")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(USR_RUserD,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal USR_CedID As String,  _
                    ByVal USR_eMail As String,  _
                    ByVal USR_NUsr As String,  _
                    ByVal USR_FName As String,  _
                    ByVal USR_LName As String,  _
                    ByVal USR_Passwd As String,  _
                    ByVal USR_TipoU As String,  _
                    ByVal USR_ModAv As String,  _
                    ByVal USR_RCreated As Date,  _
                    ByVal USR_RUserC As String,  _
                    ByVal USR_RUpdated As Date,  _
                    ByVal USR_RUserU As String,  _
                    ByVal USR_RDeleted As Date,  _
                    ByVal USR_RUserD As String,  _
                    ByVal Original_USR_CedID As String,  _
                    ByVal Original_USR_eMail As String,  _
                    ByVal Original_USR_NUsr As String,  _
                    ByVal Original_USR_FName As String,  _
                    ByVal Original_USR_LName As String,  _
                    ByVal Original_USR_Passwd As String,  _
                    ByVal Original_USR_TipoU As String,  _
                    ByVal Original_USR_ModAv As String,  _
                    ByVal Original_USR_RCreated As Date,  _
                    ByVal Original_USR_RUserC As String,  _
                    ByVal Original_USR_RUpdated As Date,  _
                    ByVal Original_USR_RUserU As String,  _
                    ByVal Original_USR_RDeleted As Date,  _
                    ByVal Original_USR_RUserD As String) As Integer
            If (USR_CedID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_CedID")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(USR_CedID,String)
            End If
            If (USR_eMail Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_eMail")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(USR_eMail,String)
            End If
            If (USR_NUsr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_NUsr")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(USR_NUsr,String)
            End If
            If (USR_FName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_FName")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(USR_FName,String)
            End If
            If (USR_LName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_LName")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(USR_LName,String)
            End If
            If (USR_Passwd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_Passwd")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(USR_Passwd,String)
            End If
            If (USR_TipoU Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_TipoU")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(USR_TipoU,String)
            End If
            If (USR_ModAv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_ModAv")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(USR_ModAv,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(USR_RCreated,Date)
            If (USR_RUserC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_RUserC")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(USR_RUserC,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(USR_RUpdated,Date)
            If (USR_RUserU Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_RUserU")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(USR_RUserU,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(USR_RDeleted,Date)
            If (USR_RUserD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("USR_RUserD")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(USR_RUserD,String)
            End If
            If (Original_USR_CedID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_CedID")
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_USR_CedID,String)
            End If
            If (Original_USR_eMail Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_eMail")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_USR_eMail,String)
            End If
            If (Original_USR_NUsr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_NUsr")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_USR_NUsr,String)
            End If
            If (Original_USR_FName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_FName")
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_USR_FName,String)
            End If
            If (Original_USR_LName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_LName")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_USR_LName,String)
            End If
            If (Original_USR_Passwd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_Passwd")
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_USR_Passwd,String)
            End If
            If (Original_USR_TipoU Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_TipoU")
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_USR_TipoU,String)
            End If
            If (Original_USR_ModAv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_ModAv")
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_USR_ModAv,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_USR_RCreated,Date)
            If (Original_USR_RUserC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_RUserC")
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_USR_RUserC,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_USR_RUpdated,Date)
            If (Original_USR_RUserU Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_RUserU")
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_USR_RUserU,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_USR_RDeleted,Date)
            If (Original_USR_RUserD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_USR_RUserD")
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_USR_RUserD,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal USR_eMail As String,  _
                    ByVal USR_NUsr As String,  _
                    ByVal USR_FName As String,  _
                    ByVal USR_LName As String,  _
                    ByVal USR_Passwd As String,  _
                    ByVal USR_TipoU As String,  _
                    ByVal USR_ModAv As String,  _
                    ByVal USR_RCreated As Date,  _
                    ByVal USR_RUserC As String,  _
                    ByVal USR_RUpdated As Date,  _
                    ByVal USR_RUserU As String,  _
                    ByVal USR_RDeleted As Date,  _
                    ByVal USR_RUserD As String,  _
                    ByVal Original_USR_CedID As String,  _
                    ByVal Original_USR_eMail As String,  _
                    ByVal Original_USR_NUsr As String,  _
                    ByVal Original_USR_FName As String,  _
                    ByVal Original_USR_LName As String,  _
                    ByVal Original_USR_Passwd As String,  _
                    ByVal Original_USR_TipoU As String,  _
                    ByVal Original_USR_ModAv As String,  _
                    ByVal Original_USR_RCreated As Date,  _
                    ByVal Original_USR_RUserC As String,  _
                    ByVal Original_USR_RUpdated As Date,  _
                    ByVal Original_USR_RUserU As String,  _
                    ByVal Original_USR_RDeleted As Date,  _
                    ByVal Original_USR_RUserD As String) As Integer
            Return Me.Update(Original_USR_CedID, USR_eMail, USR_NUsr, USR_FName, USR_LName, USR_Passwd, USR_TipoU, USR_ModAv, USR_RCreated, USR_RUserC, USR_RUpdated, USR_RUserU, USR_RDeleted, USR_RUserD, Original_USR_CedID, Original_USR_eMail, Original_USR_NUsr, Original_USR_FName, Original_USR_LName, Original_USR_Passwd, Original_USR_TipoU, Original_USR_ModAv, Original_USR_RCreated, Original_USR_RUserC, Original_USR_RUpdated, Original_USR_RUserU, Original_USR_RDeleted, Original_USR_RUserD)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _mRS_FrecuentesTableAdapter As MRS_FrecuentesTableAdapter
        
        Private _mRS_StructTableAdapter As MRS_StructTableAdapter
        
        Private _mRS_WorkMGTableAdapter As MRS_WorkMGTableAdapter
        
        Private _mRS_DynamicsETableAdapter As MRS_DynamicsETableAdapter
        
        Private _mRS_CGPMovTableAdapter As MRS_CGPMovTableAdapter
        
        Private _mRS_CatCtaTableAdapter As MRS_CatCtaTableAdapter
        
        Private _mRS_TLogTableAdapter As MRS_TLogTableAdapter
        
        Private _mRS_ISOBnkTableAdapter As MRS_ISOBnkTableAdapter
        
        Private _mRS_UsersTableAdapter As MRS_UsersTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property MRS_FrecuentesTableAdapter() As MRS_FrecuentesTableAdapter
            Get
                Return Me._mRS_FrecuentesTableAdapter
            End Get
            Set
                Me._mRS_FrecuentesTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property MRS_StructTableAdapter() As MRS_StructTableAdapter
            Get
                Return Me._mRS_StructTableAdapter
            End Get
            Set
                Me._mRS_StructTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property MRS_WorkMGTableAdapter() As MRS_WorkMGTableAdapter
            Get
                Return Me._mRS_WorkMGTableAdapter
            End Get
            Set
                Me._mRS_WorkMGTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property MRS_DynamicsETableAdapter() As MRS_DynamicsETableAdapter
            Get
                Return Me._mRS_DynamicsETableAdapter
            End Get
            Set
                Me._mRS_DynamicsETableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property MRS_CGPMovTableAdapter() As MRS_CGPMovTableAdapter
            Get
                Return Me._mRS_CGPMovTableAdapter
            End Get
            Set
                Me._mRS_CGPMovTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property MRS_CatCtaTableAdapter() As MRS_CatCtaTableAdapter
            Get
                Return Me._mRS_CatCtaTableAdapter
            End Get
            Set
                Me._mRS_CatCtaTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property MRS_TLogTableAdapter() As MRS_TLogTableAdapter
            Get
                Return Me._mRS_TLogTableAdapter
            End Get
            Set
                Me._mRS_TLogTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property MRS_ISOBnkTableAdapter() As MRS_ISOBnkTableAdapter
            Get
                Return Me._mRS_ISOBnkTableAdapter
            End Get
            Set
                Me._mRS_ISOBnkTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property MRS_UsersTableAdapter() As MRS_UsersTableAdapter
            Get
                Return Me._mRS_UsersTableAdapter
            End Get
            Set
                Me._mRS_UsersTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._mRS_FrecuentesTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._mRS_FrecuentesTableAdapter.Connection) Is Nothing)) Then
                    Return Me._mRS_FrecuentesTableAdapter.Connection
                End If
                If ((Not (Me._mRS_StructTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._mRS_StructTableAdapter.Connection) Is Nothing)) Then
                    Return Me._mRS_StructTableAdapter.Connection
                End If
                If ((Not (Me._mRS_WorkMGTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._mRS_WorkMGTableAdapter.Connection) Is Nothing)) Then
                    Return Me._mRS_WorkMGTableAdapter.Connection
                End If
                If ((Not (Me._mRS_DynamicsETableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._mRS_DynamicsETableAdapter.Connection) Is Nothing)) Then
                    Return Me._mRS_DynamicsETableAdapter.Connection
                End If
                If ((Not (Me._mRS_CGPMovTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._mRS_CGPMovTableAdapter.Connection) Is Nothing)) Then
                    Return Me._mRS_CGPMovTableAdapter.Connection
                End If
                If ((Not (Me._mRS_CatCtaTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._mRS_CatCtaTableAdapter.Connection) Is Nothing)) Then
                    Return Me._mRS_CatCtaTableAdapter.Connection
                End If
                If ((Not (Me._mRS_TLogTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._mRS_TLogTableAdapter.Connection) Is Nothing)) Then
                    Return Me._mRS_TLogTableAdapter.Connection
                End If
                If ((Not (Me._mRS_ISOBnkTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._mRS_ISOBnkTableAdapter.Connection) Is Nothing)) Then
                    Return Me._mRS_ISOBnkTableAdapter.Connection
                End If
                If ((Not (Me._mRS_UsersTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._mRS_UsersTableAdapter.Connection) Is Nothing)) Then
                    Return Me._mRS_UsersTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._mRS_FrecuentesTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._mRS_StructTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._mRS_WorkMGTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._mRS_DynamicsETableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._mRS_CGPMovTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._mRS_CatCtaTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._mRS_TLogTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._mRS_ISOBnkTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._mRS_UsersTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As PMovilDS, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._mRS_FrecuentesTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.MRS_Frecuentes.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._mRS_FrecuentesTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._mRS_StructTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.MRS_Struct.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._mRS_StructTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._mRS_WorkMGTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.MRS_WorkMG.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._mRS_WorkMGTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._mRS_DynamicsETableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.MRS_DynamicsE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._mRS_DynamicsETableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._mRS_CGPMovTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.MRS_CGPMov.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._mRS_CGPMovTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._mRS_CatCtaTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.MRS_CatCta.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._mRS_CatCtaTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._mRS_TLogTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.MRS_TLog.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._mRS_TLogTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._mRS_ISOBnkTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.MRS_ISOBnk.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._mRS_ISOBnkTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._mRS_UsersTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.MRS_Users.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._mRS_UsersTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As PMovilDS, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._mRS_FrecuentesTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.MRS_Frecuentes.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._mRS_FrecuentesTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._mRS_StructTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.MRS_Struct.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._mRS_StructTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._mRS_WorkMGTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.MRS_WorkMG.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._mRS_WorkMGTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._mRS_DynamicsETableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.MRS_DynamicsE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._mRS_DynamicsETableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._mRS_CGPMovTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.MRS_CGPMov.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._mRS_CGPMovTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._mRS_CatCtaTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.MRS_CatCta.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._mRS_CatCtaTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._mRS_TLogTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.MRS_TLog.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._mRS_TLogTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._mRS_ISOBnkTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.MRS_ISOBnk.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._mRS_ISOBnkTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._mRS_UsersTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.MRS_Users.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._mRS_UsersTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As PMovilDS, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._mRS_UsersTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.MRS_Users.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._mRS_UsersTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._mRS_ISOBnkTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.MRS_ISOBnk.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._mRS_ISOBnkTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._mRS_TLogTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.MRS_TLog.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._mRS_TLogTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._mRS_CatCtaTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.MRS_CatCta.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._mRS_CatCtaTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._mRS_CGPMovTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.MRS_CGPMov.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._mRS_CGPMovTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._mRS_DynamicsETableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.MRS_DynamicsE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._mRS_DynamicsETableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._mRS_WorkMGTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.MRS_WorkMG.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._mRS_WorkMGTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._mRS_StructTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.MRS_Struct.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._mRS_StructTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._mRS_FrecuentesTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.MRS_Frecuentes.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._mRS_FrecuentesTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As PMovilDS) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._mRS_FrecuentesTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._mRS_FrecuentesTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._mRS_StructTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._mRS_StructTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._mRS_WorkMGTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._mRS_WorkMGTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._mRS_DynamicsETableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._mRS_DynamicsETableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._mRS_CGPMovTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._mRS_CGPMovTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._mRS_CatCtaTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._mRS_CatCtaTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._mRS_TLogTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._mRS_TLogTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._mRS_ISOBnkTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._mRS_ISOBnkTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._mRS_UsersTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._mRS_UsersTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._mRS_FrecuentesTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._mRS_FrecuentesTableAdapter, Me._mRS_FrecuentesTableAdapter.Connection)
                    Me._mRS_FrecuentesTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._mRS_FrecuentesTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._mRS_FrecuentesTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._mRS_FrecuentesTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._mRS_FrecuentesTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._mRS_StructTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._mRS_StructTableAdapter, Me._mRS_StructTableAdapter.Connection)
                    Me._mRS_StructTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._mRS_StructTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._mRS_StructTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._mRS_StructTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._mRS_StructTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._mRS_WorkMGTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._mRS_WorkMGTableAdapter, Me._mRS_WorkMGTableAdapter.Connection)
                    Me._mRS_WorkMGTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._mRS_WorkMGTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._mRS_WorkMGTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._mRS_WorkMGTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._mRS_WorkMGTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._mRS_DynamicsETableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._mRS_DynamicsETableAdapter, Me._mRS_DynamicsETableAdapter.Connection)
                    Me._mRS_DynamicsETableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._mRS_DynamicsETableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._mRS_DynamicsETableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._mRS_DynamicsETableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._mRS_DynamicsETableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._mRS_CGPMovTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._mRS_CGPMovTableAdapter, Me._mRS_CGPMovTableAdapter.Connection)
                    Me._mRS_CGPMovTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._mRS_CGPMovTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._mRS_CGPMovTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._mRS_CGPMovTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._mRS_CGPMovTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._mRS_CatCtaTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._mRS_CatCtaTableAdapter, Me._mRS_CatCtaTableAdapter.Connection)
                    Me._mRS_CatCtaTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._mRS_CatCtaTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._mRS_CatCtaTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._mRS_CatCtaTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._mRS_CatCtaTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._mRS_TLogTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._mRS_TLogTableAdapter, Me._mRS_TLogTableAdapter.Connection)
                    Me._mRS_TLogTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._mRS_TLogTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._mRS_TLogTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._mRS_TLogTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._mRS_TLogTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._mRS_ISOBnkTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._mRS_ISOBnkTableAdapter, Me._mRS_ISOBnkTableAdapter.Connection)
                    Me._mRS_ISOBnkTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._mRS_ISOBnkTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._mRS_ISOBnkTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._mRS_ISOBnkTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._mRS_ISOBnkTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._mRS_UsersTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._mRS_UsersTableAdapter, Me._mRS_UsersTableAdapter.Connection)
                    Me._mRS_UsersTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._mRS_UsersTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._mRS_UsersTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._mRS_UsersTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._mRS_UsersTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._mRS_FrecuentesTableAdapter) Is Nothing) Then
                    Me._mRS_FrecuentesTableAdapter.Connection = CType(revertConnections(Me._mRS_FrecuentesTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._mRS_FrecuentesTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._mRS_StructTableAdapter) Is Nothing) Then
                    Me._mRS_StructTableAdapter.Connection = CType(revertConnections(Me._mRS_StructTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._mRS_StructTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._mRS_WorkMGTableAdapter) Is Nothing) Then
                    Me._mRS_WorkMGTableAdapter.Connection = CType(revertConnections(Me._mRS_WorkMGTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._mRS_WorkMGTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._mRS_DynamicsETableAdapter) Is Nothing) Then
                    Me._mRS_DynamicsETableAdapter.Connection = CType(revertConnections(Me._mRS_DynamicsETableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._mRS_DynamicsETableAdapter.Transaction = Nothing
                End If
                If (Not (Me._mRS_CGPMovTableAdapter) Is Nothing) Then
                    Me._mRS_CGPMovTableAdapter.Connection = CType(revertConnections(Me._mRS_CGPMovTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._mRS_CGPMovTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._mRS_CatCtaTableAdapter) Is Nothing) Then
                    Me._mRS_CatCtaTableAdapter.Connection = CType(revertConnections(Me._mRS_CatCtaTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._mRS_CatCtaTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._mRS_TLogTableAdapter) Is Nothing) Then
                    Me._mRS_TLogTableAdapter.Connection = CType(revertConnections(Me._mRS_TLogTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._mRS_TLogTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._mRS_ISOBnkTableAdapter) Is Nothing) Then
                    Me._mRS_ISOBnkTableAdapter.Connection = CType(revertConnections(Me._mRS_ISOBnkTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._mRS_ISOBnkTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._mRS_UsersTableAdapter) Is Nothing) Then
                    Me._mRS_UsersTableAdapter.Connection = CType(revertConnections(Me._mRS_UsersTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._mRS_UsersTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
